// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/common/models/kyc_result.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KycStatus int32

const (
	KycStatus_KYC_STATUS_UNSPECIFIED     KycStatus = 0
	KycStatus_KYC_STATUS_NOT_STARTED     KycStatus = 1
	KycStatus_KYC_STATUS_PENDING         KycStatus = 2
	KycStatus_KYC_STATUS_PASSED          KycStatus = 3
	KycStatus_KYC_STATUS_FAILED          KycStatus = 4
	KycStatus_KYC_STATUS_REVIEW_REQUIRED KycStatus = 5
)

// Enum value maps for KycStatus.
var (
	KycStatus_name = map[int32]string{
		0: "KYC_STATUS_UNSPECIFIED",
		1: "KYC_STATUS_NOT_STARTED",
		2: "KYC_STATUS_PENDING",
		3: "KYC_STATUS_PASSED",
		4: "KYC_STATUS_FAILED",
		5: "KYC_STATUS_REVIEW_REQUIRED",
	}
	KycStatus_value = map[string]int32{
		"KYC_STATUS_UNSPECIFIED":     0,
		"KYC_STATUS_NOT_STARTED":     1,
		"KYC_STATUS_PENDING":         2,
		"KYC_STATUS_PASSED":          3,
		"KYC_STATUS_FAILED":          4,
		"KYC_STATUS_REVIEW_REQUIRED": 5,
	}
)

func (x KycStatus) Enum() *KycStatus {
	p := new(KycStatus)
	*p = x
	return p
}

func (x KycStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KycStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_kyc_result_proto_enumTypes[0].Descriptor()
}

func (KycStatus) Type() protoreflect.EnumType {
	return &file_kappa_common_models_kyc_result_proto_enumTypes[0]
}

func (x KycStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KycStatus.Descriptor instead.
func (KycStatus) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{0}
}

type KycVerificationRequirementType int32

const (
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_UNSPECIFIED        KycVerificationRequirementType = 0
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_INDIVIDUAL_ADDRESS KycVerificationRequirementType = 1
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_NAME               KycVerificationRequirementType = 2
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_DATE_OF_BIRTH      KycVerificationRequirementType = 3
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_SSN                KycVerificationRequirementType = 4
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_GENERAL_IDENTITY   KycVerificationRequirementType = 5
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_ENTITY_NAME        KycVerificationRequirementType = 6
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_EIN                KycVerificationRequirementType = 7
	KycVerificationRequirementType_KYC_VERIFICATION_REQUIREMENT_TYPE_BUSINESS_ADDRESS   KycVerificationRequirementType = 8
)

// Enum value maps for KycVerificationRequirementType.
var (
	KycVerificationRequirementType_name = map[int32]string{
		0: "KYC_VERIFICATION_REQUIREMENT_TYPE_UNSPECIFIED",
		1: "KYC_VERIFICATION_REQUIREMENT_TYPE_INDIVIDUAL_ADDRESS",
		2: "KYC_VERIFICATION_REQUIREMENT_TYPE_NAME",
		3: "KYC_VERIFICATION_REQUIREMENT_TYPE_DATE_OF_BIRTH",
		4: "KYC_VERIFICATION_REQUIREMENT_TYPE_SSN",
		5: "KYC_VERIFICATION_REQUIREMENT_TYPE_GENERAL_IDENTITY",
		6: "KYC_VERIFICATION_REQUIREMENT_TYPE_ENTITY_NAME",
		7: "KYC_VERIFICATION_REQUIREMENT_TYPE_EIN",
		8: "KYC_VERIFICATION_REQUIREMENT_TYPE_BUSINESS_ADDRESS",
	}
	KycVerificationRequirementType_value = map[string]int32{
		"KYC_VERIFICATION_REQUIREMENT_TYPE_UNSPECIFIED":        0,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_INDIVIDUAL_ADDRESS": 1,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_NAME":               2,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_DATE_OF_BIRTH":      3,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_SSN":                4,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_GENERAL_IDENTITY":   5,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_ENTITY_NAME":        6,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_EIN":                7,
		"KYC_VERIFICATION_REQUIREMENT_TYPE_BUSINESS_ADDRESS":   8,
	}
)

func (x KycVerificationRequirementType) Enum() *KycVerificationRequirementType {
	p := new(KycVerificationRequirementType)
	*p = x
	return p
}

func (x KycVerificationRequirementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KycVerificationRequirementType) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_kyc_result_proto_enumTypes[1].Descriptor()
}

func (KycVerificationRequirementType) Type() protoreflect.EnumType {
	return &file_kappa_common_models_kyc_result_proto_enumTypes[1]
}

func (x KycVerificationRequirementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KycVerificationRequirementType.Descriptor instead.
func (KycVerificationRequirementType) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{1}
}

type KycVerificationDocumentFeature int32

const (
	KycVerificationDocumentFeature_KYC_VERIFICATION_DOCUMENT_FEATURE_UNSPECIFIED           KycVerificationDocumentFeature = 0
	KycVerificationDocumentFeature_KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT                 KycVerificationDocumentFeature = 1
	KycVerificationDocumentFeature_KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_AND_BACK        KycVerificationDocumentFeature = 2
	KycVerificationDocumentFeature_KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_BACK_AND_SELFIE KycVerificationDocumentFeature = 3
)

// Enum value maps for KycVerificationDocumentFeature.
var (
	KycVerificationDocumentFeature_name = map[int32]string{
		0: "KYC_VERIFICATION_DOCUMENT_FEATURE_UNSPECIFIED",
		1: "KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT",
		2: "KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_AND_BACK",
		3: "KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_BACK_AND_SELFIE",
	}
	KycVerificationDocumentFeature_value = map[string]int32{
		"KYC_VERIFICATION_DOCUMENT_FEATURE_UNSPECIFIED":           0,
		"KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT":                 1,
		"KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_AND_BACK":        2,
		"KYC_VERIFICATION_DOCUMENT_FEATURE_FRONT_BACK_AND_SELFIE": 3,
	}
)

func (x KycVerificationDocumentFeature) Enum() *KycVerificationDocumentFeature {
	p := new(KycVerificationDocumentFeature)
	*p = x
	return p
}

func (x KycVerificationDocumentFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KycVerificationDocumentFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_kyc_result_proto_enumTypes[2].Descriptor()
}

func (KycVerificationDocumentFeature) Type() protoreflect.EnumType {
	return &file_kappa_common_models_kyc_result_proto_enumTypes[2]
}

func (x KycVerificationDocumentFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KycVerificationDocumentFeature.Descriptor instead.
func (KycVerificationDocumentFeature) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{2}
}

type KycVerificationDocumentFormat int32

const (
	KycVerificationDocumentFormat_KYC_VERIFICATION_DOCUMENT_FORMAT_UNSPECIFIED   KycVerificationDocumentFormat = 0
	KycVerificationDocumentFormat_KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO         KycVerificationDocumentFormat = 1
	KycVerificationDocumentFormat_KYC_VERIFICATION_DOCUMENT_FORMAT_FILE          KycVerificationDocumentFormat = 2
	KycVerificationDocumentFormat_KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO_OR_FILE KycVerificationDocumentFormat = 3
)

// Enum value maps for KycVerificationDocumentFormat.
var (
	KycVerificationDocumentFormat_name = map[int32]string{
		0: "KYC_VERIFICATION_DOCUMENT_FORMAT_UNSPECIFIED",
		1: "KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO",
		2: "KYC_VERIFICATION_DOCUMENT_FORMAT_FILE",
		3: "KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO_OR_FILE",
	}
	KycVerificationDocumentFormat_value = map[string]int32{
		"KYC_VERIFICATION_DOCUMENT_FORMAT_UNSPECIFIED":   0,
		"KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO":         1,
		"KYC_VERIFICATION_DOCUMENT_FORMAT_FILE":          2,
		"KYC_VERIFICATION_DOCUMENT_FORMAT_PHOTO_OR_FILE": 3,
	}
)

func (x KycVerificationDocumentFormat) Enum() *KycVerificationDocumentFormat {
	p := new(KycVerificationDocumentFormat)
	*p = x
	return p
}

func (x KycVerificationDocumentFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KycVerificationDocumentFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_kyc_result_proto_enumTypes[3].Descriptor()
}

func (KycVerificationDocumentFormat) Type() protoreflect.EnumType {
	return &file_kappa_common_models_kyc_result_proto_enumTypes[3]
}

func (x KycVerificationDocumentFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KycVerificationDocumentFormat.Descriptor instead.
func (KycVerificationDocumentFormat) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{3}
}

type VerificationDocumentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Label       string                         `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Description string                         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Format      KycVerificationDocumentFormat  `protobuf:"varint,5,opt,name=format,proto3,enum=kappa.KycVerificationDocumentFormat" json:"format,omitempty"`
	Feature     KycVerificationDocumentFeature `protobuf:"varint,6,opt,name=feature,proto3,enum=kappa.KycVerificationDocumentFeature" json:"feature,omitempty"`
}

func (x *VerificationDocumentType) Reset() {
	*x = VerificationDocumentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_common_models_kyc_result_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationDocumentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationDocumentType) ProtoMessage() {}

func (x *VerificationDocumentType) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_common_models_kyc_result_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationDocumentType.ProtoReflect.Descriptor instead.
func (*VerificationDocumentType) Descriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{0}
}

func (x *VerificationDocumentType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VerificationDocumentType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VerificationDocumentType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *VerificationDocumentType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VerificationDocumentType) GetFormat() KycVerificationDocumentFormat {
	if x != nil {
		return x.Format
	}
	return KycVerificationDocumentFormat_KYC_VERIFICATION_DOCUMENT_FORMAT_UNSPECIFIED
}

func (x *VerificationDocumentType) GetFeature() KycVerificationDocumentFeature {
	if x != nil {
		return x.Feature
	}
	return KycVerificationDocumentFeature_KYC_VERIFICATION_DOCUMENT_FEATURE_UNSPECIFIED
}

type VerificationDocumentTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentTypes []*VerificationDocumentType `protobuf:"bytes,1,rep,name=document_types,json=documentTypes,proto3" json:"document_types,omitempty"`
}

func (x *VerificationDocumentTypes) Reset() {
	*x = VerificationDocumentTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_common_models_kyc_result_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationDocumentTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationDocumentTypes) ProtoMessage() {}

func (x *VerificationDocumentTypes) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_common_models_kyc_result_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationDocumentTypes.ProtoReflect.Descriptor instead.
func (*VerificationDocumentTypes) Descriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{1}
}

func (x *VerificationDocumentTypes) GetDocumentTypes() []*VerificationDocumentType {
	if x != nil {
		return x.DocumentTypes
	}
	return nil
}

type KycResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorId         string                 `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	VerificationId   string                 `protobuf:"bytes,3,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`
	EntityId         string                 `protobuf:"bytes,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Message          string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Status           KycStatus              `protobuf:"varint,6,opt,name=status,proto3,enum=kappa.KycStatus" json:"status,omitempty"`
	RequestedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	CompletedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	VendorSoruceData *structpb.Struct       `protobuf:"bytes,9,opt,name=vendor_soruce_data,json=vendorSoruceData,proto3" json:"vendor_soruce_data,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The number of KYC attempts (eg, first attempt=1, second attempt=2)
	Attempt                     int32                            `protobuf:"varint,11,opt,name=attempt,proto3" json:"attempt,omitempty"`
	KycVerificationRequirements []KycVerificationRequirementType `protobuf:"varint,12,rep,packed,name=kyc_verification_requirements,json=kycVerificationRequirements,proto3,enum=kappa.KycVerificationRequirementType" json:"kyc_verification_requirements,omitempty"`
}

func (x *KycResult) Reset() {
	*x = KycResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_common_models_kyc_result_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KycResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KycResult) ProtoMessage() {}

func (x *KycResult) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_common_models_kyc_result_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KycResult.ProtoReflect.Descriptor instead.
func (*KycResult) Descriptor() ([]byte, []int) {
	return file_kappa_common_models_kyc_result_proto_rawDescGZIP(), []int{2}
}

func (x *KycResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KycResult) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *KycResult) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *KycResult) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *KycResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KycResult) GetStatus() KycStatus {
	if x != nil {
		return x.Status
	}
	return KycStatus_KYC_STATUS_UNSPECIFIED
}

func (x *KycResult) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

func (x *KycResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *KycResult) GetVendorSoruceData() *structpb.Struct {
	if x != nil {
		return x.VendorSoruceData
	}
	return nil
}

func (x *KycResult) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *KycResult) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *KycResult) GetKycVerificationRequirements() []KycVerificationRequirementType {
	if x != nil {
		return x.KycVerificationRequirements
	}
	return nil
}

var File_kappa_common_models_kyc_result_proto protoreflect.FileDescriptor

var file_kappa_common_models_kyc_result_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6b, 0x79, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a,
	0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79,
	0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x63, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xc7, 0x04, 0x0a, 0x09, 0x4b, 0x79,
	0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x12,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x73, 0x6f, 0x72, 0x75, 0x63, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x10, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x6f, 0x72, 0x75, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x69, 0x0a, 0x1d, 0x6b, 0x79, 0x63, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1b, 0x6b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2a, 0xa9, 0x01, 0x0a, 0x09, 0x4b, 0x79, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x59, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x4b, 0x59, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x59, 0x43,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x59, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x59, 0x43, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x1e, 0x0a, 0x1a, 0x4b, 0x59, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45,
	0x56, 0x49, 0x45, 0x57, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x2a,
	0xe7, 0x03, 0x0a, 0x1e, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x2d, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x38, 0x0a, 0x34, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x56,
	0x49, 0x44, 0x55, 0x41, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x2a, 0x0a, 0x26, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x4b,
	0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x42, 0x49, 0x52, 0x54, 0x48, 0x10, 0x03,
	0x12, 0x29, 0x0a, 0x25, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x53, 0x4e, 0x10, 0x04, 0x12, 0x36, 0x0a, 0x32, 0x4b,
	0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x10, 0x05, 0x12, 0x31, 0x0a, 0x2d, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x06, 0x12, 0x29, 0x0a, 0x25, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x49, 0x4e, 0x10,
	0x07, 0x12, 0x36, 0x0a, 0x32, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x5f,
	0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x08, 0x2a, 0xf3, 0x01, 0x0a, 0x1e, 0x4b, 0x79,
	0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x31, 0x0a, 0x2d,
	0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x2b, 0x0a, 0x27, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x34, 0x0a, 0x30,
	0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x4b,
	0x10, 0x02, 0x12, 0x3b, 0x0a, 0x37, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x5f, 0x42, 0x41,
	0x43, 0x4b, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x10, 0x03, 0x2a,
	0xdc, 0x01, 0x0a, 0x1d, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x30, 0x0a, 0x2c, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x26, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x10, 0x01, 0x12,
	0x29, 0x0a, 0x25, 0x4b, 0x59, 0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x32, 0x0a, 0x2e, 0x4b, 0x59,
	0x43, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50,
	0x48, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x52, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x03, 0x42, 0x40,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x69,
	0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_common_models_kyc_result_proto_rawDescOnce sync.Once
	file_kappa_common_models_kyc_result_proto_rawDescData = file_kappa_common_models_kyc_result_proto_rawDesc
)

func file_kappa_common_models_kyc_result_proto_rawDescGZIP() []byte {
	file_kappa_common_models_kyc_result_proto_rawDescOnce.Do(func() {
		file_kappa_common_models_kyc_result_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_common_models_kyc_result_proto_rawDescData)
	})
	return file_kappa_common_models_kyc_result_proto_rawDescData
}

var file_kappa_common_models_kyc_result_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_kappa_common_models_kyc_result_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kappa_common_models_kyc_result_proto_goTypes = []interface{}{
	(KycStatus)(0),                      // 0: kappa.KycStatus
	(KycVerificationRequirementType)(0), // 1: kappa.KycVerificationRequirementType
	(KycVerificationDocumentFeature)(0), // 2: kappa.KycVerificationDocumentFeature
	(KycVerificationDocumentFormat)(0),  // 3: kappa.KycVerificationDocumentFormat
	(*VerificationDocumentType)(nil),    // 4: kappa.VerificationDocumentType
	(*VerificationDocumentTypes)(nil),   // 5: kappa.VerificationDocumentTypes
	(*KycResult)(nil),                   // 6: kappa.KycResult
	(*timestamppb.Timestamp)(nil),       // 7: google.protobuf.Timestamp
	(*structpb.Struct)(nil),             // 8: google.protobuf.Struct
}
var file_kappa_common_models_kyc_result_proto_depIdxs = []int32{
	3, // 0: kappa.VerificationDocumentType.format:type_name -> kappa.KycVerificationDocumentFormat
	2, // 1: kappa.VerificationDocumentType.feature:type_name -> kappa.KycVerificationDocumentFeature
	4, // 2: kappa.VerificationDocumentTypes.document_types:type_name -> kappa.VerificationDocumentType
	0, // 3: kappa.KycResult.status:type_name -> kappa.KycStatus
	7, // 4: kappa.KycResult.requested_at:type_name -> google.protobuf.Timestamp
	7, // 5: kappa.KycResult.completed_at:type_name -> google.protobuf.Timestamp
	8, // 6: kappa.KycResult.vendor_soruce_data:type_name -> google.protobuf.Struct
	7, // 7: kappa.KycResult.created_at:type_name -> google.protobuf.Timestamp
	1, // 8: kappa.KycResult.kyc_verification_requirements:type_name -> kappa.KycVerificationRequirementType
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_kappa_common_models_kyc_result_proto_init() }
func file_kappa_common_models_kyc_result_proto_init() {
	if File_kappa_common_models_kyc_result_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_common_models_kyc_result_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationDocumentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_common_models_kyc_result_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationDocumentTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_common_models_kyc_result_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KycResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_common_models_kyc_result_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kappa_common_models_kyc_result_proto_goTypes,
		DependencyIndexes: file_kappa_common_models_kyc_result_proto_depIdxs,
		EnumInfos:         file_kappa_common_models_kyc_result_proto_enumTypes,
		MessageInfos:      file_kappa_common_models_kyc_result_proto_msgTypes,
	}.Build()
	File_kappa_common_models_kyc_result_proto = out.File
	file_kappa_common_models_kyc_result_proto_rawDesc = nil
	file_kappa_common_models_kyc_result_proto_goTypes = nil
	file_kappa_common_models_kyc_result_proto_depIdxs = nil
}
