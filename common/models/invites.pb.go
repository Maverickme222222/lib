// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Flavio Rajta</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/common/models/invites.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InviteSource int32

const (
	InviteSource_INVITE_SOURCE_UNSPECIFIED InviteSource = 0
	InviteSource_INVITE_SOURCE_WAITLIST    InviteSource = 1
	InviteSource_INVITE_SOURCE_APP         InviteSource = 2
)

// Enum value maps for InviteSource.
var (
	InviteSource_name = map[int32]string{
		0: "INVITE_SOURCE_UNSPECIFIED",
		1: "INVITE_SOURCE_WAITLIST",
		2: "INVITE_SOURCE_APP",
	}
	InviteSource_value = map[string]int32{
		"INVITE_SOURCE_UNSPECIFIED": 0,
		"INVITE_SOURCE_WAITLIST":    1,
		"INVITE_SOURCE_APP":         2,
	}
)

func (x InviteSource) Enum() *InviteSource {
	p := new(InviteSource)
	*p = x
	return p
}

func (x InviteSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteSource) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_invites_proto_enumTypes[0].Descriptor()
}

func (InviteSource) Type() protoreflect.EnumType {
	return &file_kappa_common_models_invites_proto_enumTypes[0]
}

func (x InviteSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteSource.Descriptor instead.
func (InviteSource) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_invites_proto_rawDescGZIP(), []int{0}
}

type InviteChannel int32

const (
	InviteChannel_INVITE_CHANNEL_UNSPECIFIED InviteChannel = 0
	InviteChannel_INVITE_CHANNEL_SMS         InviteChannel = 1
	InviteChannel_INVITE_CHANNEL_EMAIL       InviteChannel = 2
	InviteChannel_INVITE_CHANNEL_WHATSAPP    InviteChannel = 3
)

// Enum value maps for InviteChannel.
var (
	InviteChannel_name = map[int32]string{
		0: "INVITE_CHANNEL_UNSPECIFIED",
		1: "INVITE_CHANNEL_SMS",
		2: "INVITE_CHANNEL_EMAIL",
		3: "INVITE_CHANNEL_WHATSAPP",
	}
	InviteChannel_value = map[string]int32{
		"INVITE_CHANNEL_UNSPECIFIED": 0,
		"INVITE_CHANNEL_SMS":         1,
		"INVITE_CHANNEL_EMAIL":       2,
		"INVITE_CHANNEL_WHATSAPP":    3,
	}
)

func (x InviteChannel) Enum() *InviteChannel {
	p := new(InviteChannel)
	*p = x
	return p
}

func (x InviteChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_kappa_common_models_invites_proto_enumTypes[1].Descriptor()
}

func (InviteChannel) Type() protoreflect.EnumType {
	return &file_kappa_common_models_invites_proto_enumTypes[1]
}

func (x InviteChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteChannel.Descriptor instead.
func (InviteChannel) EnumDescriptor() ([]byte, []int) {
	return file_kappa_common_models_invites_proto_rawDescGZIP(), []int{1}
}

type Invitee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName           string   `protobuf:"bytes,3,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	OfficialBusinessName *string  `protobuf:"bytes,5,opt,name=official_business_name,json=officialBusinessName,proto3,oneof" json:"official_business_name,omitempty"` // if invited entity is a business we have a business official name
	Domicile             *Country `protobuf:"bytes,6,opt,name=domicile,proto3" json:"domicile,omitempty"`                                                             // country of the invitee
	// Either one or both of email and phone must be set
	Email *Email `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Phone *Phone `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	// preferred language, if any. Defaults to en-US
	LanguageId *string `protobuf:"bytes,9,opt,name=language_id,json=languageId,proto3,oneof" json:"language_id,omitempty"`
	// the source where the invite came from, app or wailist
	InvitedFrom InviteSource `protobuf:"varint,10,opt,name=invited_from,json=invitedFrom,proto3,enum=kappa.InviteSource" json:"invited_from,omitempty"`
	// the ID of the entity that invited this entity, if any. Empty if invited from the waitlist
	InvitedBy *string                `protobuf:"bytes,11,opt,name=invited_by,json=invitedBy,proto3,oneof" json:"invited_by,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *Invitee) Reset() {
	*x = Invitee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_common_models_invites_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invitee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitee) ProtoMessage() {}

func (x *Invitee) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_common_models_invites_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitee.ProtoReflect.Descriptor instead.
func (*Invitee) Descriptor() ([]byte, []int) {
	return file_kappa_common_models_invites_proto_rawDescGZIP(), []int{0}
}

func (x *Invitee) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invitee) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Invitee) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Invitee) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Invitee) GetOfficialBusinessName() string {
	if x != nil && x.OfficialBusinessName != nil {
		return *x.OfficialBusinessName
	}
	return ""
}

func (x *Invitee) GetDomicile() *Country {
	if x != nil {
		return x.Domicile
	}
	return nil
}

func (x *Invitee) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Invitee) GetPhone() *Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *Invitee) GetLanguageId() string {
	if x != nil && x.LanguageId != nil {
		return *x.LanguageId
	}
	return ""
}

func (x *Invitee) GetInvitedFrom() InviteSource {
	if x != nil {
		return x.InvitedFrom
	}
	return InviteSource_INVITE_SOURCE_UNSPECIFIED
}

func (x *Invitee) GetInvitedBy() string {
	if x != nil && x.InvitedBy != nil {
		return *x.InvitedBy
	}
	return ""
}

func (x *Invitee) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Invitee) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Invitee) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InviteeId string `protobuf:"bytes,2,opt,name=invitee_id,json=inviteeId,proto3" json:"invitee_id,omitempty"`
	// channel through which the invite is to be sent, e.g. email, sms, etc.
	Channel InviteChannel `protobuf:"varint,3,opt,name=channel,proto3,enum=kappa.InviteChannel" json:"channel,omitempty"`
	// when the invite was sent
	SentAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	// when the invitee first opened the invite by clicking on the link
	// this gets set when POST /invites/validate is called for the first time
	FirstOpenedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=first_opened_at,json=firstOpenedAt,proto3" json:"first_opened_at,omitempty"`
	// when the invitee most recently opened the invite by clicking on the link
	// this gets set every time POST /invites/validate is called
	LastOpenedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_opened_at,json=lastOpenedAt,proto3" json:"last_opened_at,omitempty"`
	// when the invitee accepted the invite by registering for an account
	AcceptedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	// when the invite expires
	ExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	SignupCode string                 `protobuf:"bytes,9,opt,name=signup_code,json=signupCode,proto3" json:"signup_code,omitempty"` // a unique code to be used when registering without a link
	// if the invitee has not registered for an account, we will be sending reminders in specific intervals
	RemindedAt []*timestamppb.Timestamp `protobuf:"bytes,10,rep,name=reminded_at,json=remindedAt,proto3" json:"reminded_at,omitempty"`
	CreatedAt  *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt  *timestamppb.Timestamp   `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *Invite) Reset() {
	*x = Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_common_models_invites_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invite) ProtoMessage() {}

func (x *Invite) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_common_models_invites_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invite.ProtoReflect.Descriptor instead.
func (*Invite) Descriptor() ([]byte, []int) {
	return file_kappa_common_models_invites_proto_rawDescGZIP(), []int{1}
}

func (x *Invite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invite) GetInviteeId() string {
	if x != nil {
		return x.InviteeId
	}
	return ""
}

func (x *Invite) GetChannel() InviteChannel {
	if x != nil {
		return x.Channel
	}
	return InviteChannel_INVITE_CHANNEL_UNSPECIFIED
}

func (x *Invite) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *Invite) GetFirstOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstOpenedAt
	}
	return nil
}

func (x *Invite) GetLastOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOpenedAt
	}
	return nil
}

func (x *Invite) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *Invite) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Invite) GetSignupCode() string {
	if x != nil {
		return x.SignupCode
	}
	return ""
}

func (x *Invite) GetRemindedAt() []*timestamppb.Timestamp {
	if x != nil {
		return x.RemindedAt
	}
	return nil
}

func (x *Invite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Invite) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Invite) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

var File_kappa_common_models_invites_proto protoreflect.FileDescriptor

var file_kappa_common_models_invites_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x05, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x16, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x14, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x08, 0x64, 0x6f,
	0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24,
	0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0xa9, 0x05, 0x0a, 0x06,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x40,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x60, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x56, 0x49, 0x54,
	0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x02, 0x2a, 0x7e, 0x0a, 0x0d, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x53, 0x4d, 0x53,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x57,
	0x48, 0x41, 0x54, 0x53, 0x41, 0x50, 0x50, 0x10, 0x03, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_kappa_common_models_invites_proto_rawDescOnce sync.Once
	file_kappa_common_models_invites_proto_rawDescData = file_kappa_common_models_invites_proto_rawDesc
)

func file_kappa_common_models_invites_proto_rawDescGZIP() []byte {
	file_kappa_common_models_invites_proto_rawDescOnce.Do(func() {
		file_kappa_common_models_invites_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_common_models_invites_proto_rawDescData)
	})
	return file_kappa_common_models_invites_proto_rawDescData
}

var file_kappa_common_models_invites_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kappa_common_models_invites_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kappa_common_models_invites_proto_goTypes = []interface{}{
	(InviteSource)(0),             // 0: kappa.InviteSource
	(InviteChannel)(0),            // 1: kappa.InviteChannel
	(*Invitee)(nil),               // 2: kappa.Invitee
	(*Invite)(nil),                // 3: kappa.Invite
	(*Country)(nil),               // 4: kappa.Country
	(*Email)(nil),                 // 5: kappa.Email
	(*Phone)(nil),                 // 6: kappa.Phone
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_kappa_common_models_invites_proto_depIdxs = []int32{
	4,  // 0: kappa.Invitee.domicile:type_name -> kappa.Country
	5,  // 1: kappa.Invitee.email:type_name -> kappa.Email
	6,  // 2: kappa.Invitee.phone:type_name -> kappa.Phone
	0,  // 3: kappa.Invitee.invited_from:type_name -> kappa.InviteSource
	7,  // 4: kappa.Invitee.created_at:type_name -> google.protobuf.Timestamp
	7,  // 5: kappa.Invitee.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 6: kappa.Invitee.deleted_at:type_name -> google.protobuf.Timestamp
	1,  // 7: kappa.Invite.channel:type_name -> kappa.InviteChannel
	7,  // 8: kappa.Invite.sent_at:type_name -> google.protobuf.Timestamp
	7,  // 9: kappa.Invite.first_opened_at:type_name -> google.protobuf.Timestamp
	7,  // 10: kappa.Invite.last_opened_at:type_name -> google.protobuf.Timestamp
	7,  // 11: kappa.Invite.accepted_at:type_name -> google.protobuf.Timestamp
	7,  // 12: kappa.Invite.expires_at:type_name -> google.protobuf.Timestamp
	7,  // 13: kappa.Invite.reminded_at:type_name -> google.protobuf.Timestamp
	7,  // 14: kappa.Invite.created_at:type_name -> google.protobuf.Timestamp
	7,  // 15: kappa.Invite.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 16: kappa.Invite.deleted_at:type_name -> google.protobuf.Timestamp
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_kappa_common_models_invites_proto_init() }
func file_kappa_common_models_invites_proto_init() {
	if File_kappa_common_models_invites_proto != nil {
		return
	}
	file_kappa_common_models_email_proto_init()
	file_kappa_common_models_phone_proto_init()
	file_kappa_common_models_configuration_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kappa_common_models_invites_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invitee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_common_models_invites_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_common_models_invites_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_common_models_invites_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kappa_common_models_invites_proto_goTypes,
		DependencyIndexes: file_kappa_common_models_invites_proto_depIdxs,
		EnumInfos:         file_kappa_common_models_invites_proto_enumTypes,
		MessageInfos:      file_kappa_common_models_invites_proto_msgTypes,
	}.Build()
	File_kappa_common_models_invites_proto = out.File
	file_kappa_common_models_invites_proto_rawDesc = nil
	file_kappa_common_models_invites_proto_goTypes = nil
	file_kappa_common_models_invites_proto_depIdxs = nil
}
