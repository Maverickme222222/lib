// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Chris Nyaga</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/configuration/configuration.proto

package configuration

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCountryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCountryByIDRequest) Reset() {
	*x = GetCountryByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByIDRequest) ProtoMessage() {}

func (x *GetCountryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCountryByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{0}
}

func (x *GetCountryByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCountryByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country *models.Country `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *GetCountryByIDResponse) Reset() {
	*x = GetCountryByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByIDResponse) ProtoMessage() {}

func (x *GetCountryByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByIDResponse.ProtoReflect.Descriptor instead.
func (*GetCountryByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{1}
}

func (x *GetCountryByIDResponse) GetCountry() *models.Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type GetCountryByISOCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsoCode string `protobuf:"bytes,1,opt,name=iso_code,json=isoCode,proto3" json:"iso_code,omitempty"`
}

func (x *GetCountryByISOCodeRequest) Reset() {
	*x = GetCountryByISOCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryByISOCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByISOCodeRequest) ProtoMessage() {}

func (x *GetCountryByISOCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByISOCodeRequest.ProtoReflect.Descriptor instead.
func (*GetCountryByISOCodeRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{2}
}

func (x *GetCountryByISOCodeRequest) GetIsoCode() string {
	if x != nil {
		return x.IsoCode
	}
	return ""
}

type GetCountryByISOCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country *models.Country `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *GetCountryByISOCodeResponse) Reset() {
	*x = GetCountryByISOCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryByISOCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByISOCodeResponse) ProtoMessage() {}

func (x *GetCountryByISOCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByISOCodeResponse.ProtoReflect.Descriptor instead.
func (*GetCountryByISOCodeResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{3}
}

func (x *GetCountryByISOCodeResponse) GetCountry() *models.Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type GetCountriesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []*models.Country `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
}

func (x *GetCountriesListResponse) Reset() {
	*x = GetCountriesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountriesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountriesListResponse) ProtoMessage() {}

func (x *GetCountriesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountriesListResponse.ProtoReflect.Descriptor instead.
func (*GetCountriesListResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{4}
}

func (x *GetCountriesListResponse) GetCountries() []*models.Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

type GetNaicsCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NaicsCategories []*models.NaicsCategory `protobuf:"bytes,1,rep,name=naics_categories,json=naicsCategories,proto3" json:"naics_categories,omitempty"`
}

func (x *GetNaicsCategoriesResponse) Reset() {
	*x = GetNaicsCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNaicsCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNaicsCategoriesResponse) ProtoMessage() {}

func (x *GetNaicsCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNaicsCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetNaicsCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{5}
}

func (x *GetNaicsCategoriesResponse) GetNaicsCategories() []*models.NaicsCategory {
	if x != nil {
		return x.NaicsCategories
	}
	return nil
}

type GetBusinessTypesByCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryId string `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
}

func (x *GetBusinessTypesByCountryRequest) Reset() {
	*x = GetBusinessTypesByCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessTypesByCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessTypesByCountryRequest) ProtoMessage() {}

func (x *GetBusinessTypesByCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessTypesByCountryRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessTypesByCountryRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{6}
}

func (x *GetBusinessTypesByCountryRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

type GetBusinessTypesByCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessTypes []*models.BusinessType `protobuf:"bytes,1,rep,name=business_types,json=businessTypes,proto3" json:"business_types,omitempty"`
}

func (x *GetBusinessTypesByCountryResponse) Reset() {
	*x = GetBusinessTypesByCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessTypesByCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessTypesByCountryResponse) ProtoMessage() {}

func (x *GetBusinessTypesByCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessTypesByCountryResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessTypesByCountryResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{7}
}

func (x *GetBusinessTypesByCountryResponse) GetBusinessTypes() []*models.BusinessType {
	if x != nil {
		return x.BusinessTypes
	}
	return nil
}

type GetBusinessRolesByCountryAndBusinessTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryId      string `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	BusinessTypeId string `protobuf:"bytes,2,opt,name=business_type_id,json=businessTypeId,proto3" json:"business_type_id,omitempty"`
	Locale         string `protobuf:"bytes,3,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) Reset() {
	*x = GetBusinessRolesByCountryAndBusinessTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRolesByCountryAndBusinessTypeRequest) ProtoMessage() {}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRolesByCountryAndBusinessTypeRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessRolesByCountryAndBusinessTypeRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{8}
}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) GetBusinessTypeId() string {
	if x != nil {
		return x.BusinessTypeId
	}
	return ""
}

func (x *GetBusinessRolesByCountryAndBusinessTypeRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetBusinessRolesByCountryAndBusinessTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessRoles []*models.BusinessRole `protobuf:"bytes,1,rep,name=business_roles,json=businessRoles,proto3" json:"business_roles,omitempty"`
}

func (x *GetBusinessRolesByCountryAndBusinessTypeResponse) Reset() {
	*x = GetBusinessRolesByCountryAndBusinessTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRolesByCountryAndBusinessTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRolesByCountryAndBusinessTypeResponse) ProtoMessage() {}

func (x *GetBusinessRolesByCountryAndBusinessTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRolesByCountryAndBusinessTypeResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessRolesByCountryAndBusinessTypeResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{9}
}

func (x *GetBusinessRolesByCountryAndBusinessTypeResponse) GetBusinessRoles() []*models.BusinessRole {
	if x != nil {
		return x.BusinessRoles
	}
	return nil
}

type GetBusinessRoleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetBusinessRoleByIDRequest) Reset() {
	*x = GetBusinessRoleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRoleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRoleByIDRequest) ProtoMessage() {}

func (x *GetBusinessRoleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRoleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessRoleByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{10}
}

func (x *GetBusinessRoleByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBusinessRoleByIDRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetBusinessRoleByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessRole *models.BusinessRole `protobuf:"bytes,1,opt,name=business_role,json=businessRole,proto3" json:"business_role,omitempty"`
}

func (x *GetBusinessRoleByIDResponse) Reset() {
	*x = GetBusinessRoleByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRoleByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRoleByIDResponse) ProtoMessage() {}

func (x *GetBusinessRoleByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRoleByIDResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessRoleByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{11}
}

func (x *GetBusinessRoleByIDResponse) GetBusinessRole() *models.BusinessRole {
	if x != nil {
		return x.BusinessRole
	}
	return nil
}

type GetCurrencyByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCurrencyByIDRequest) Reset() {
	*x = GetCurrencyByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyByIDRequest) ProtoMessage() {}

func (x *GetCurrencyByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCurrencyByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{12}
}

func (x *GetCurrencyByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCurrencyByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *models.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *GetCurrencyByIDResponse) Reset() {
	*x = GetCurrencyByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyByIDResponse) ProtoMessage() {}

func (x *GetCurrencyByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyByIDResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{13}
}

func (x *GetCurrencyByIDResponse) GetCurrency() *models.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type GetCurrencyByISOCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsoCode string `protobuf:"bytes,1,opt,name=iso_code,json=isoCode,proto3" json:"iso_code,omitempty"` // ISO 4217 currency code
}

func (x *GetCurrencyByISOCodeRequest) Reset() {
	*x = GetCurrencyByISOCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyByISOCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyByISOCodeRequest) ProtoMessage() {}

func (x *GetCurrencyByISOCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyByISOCodeRequest.ProtoReflect.Descriptor instead.
func (*GetCurrencyByISOCodeRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{14}
}

func (x *GetCurrencyByISOCodeRequest) GetIsoCode() string {
	if x != nil {
		return x.IsoCode
	}
	return ""
}

type GetCurrencyByISOCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *models.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *GetCurrencyByISOCodeResponse) Reset() {
	*x = GetCurrencyByISOCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrencyByISOCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyByISOCodeResponse) ProtoMessage() {}

func (x *GetCurrencyByISOCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyByISOCodeResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyByISOCodeResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{15}
}

func (x *GetCurrencyByISOCodeResponse) GetCurrency() *models.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type GetCurrenciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*models.Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *GetCurrenciesResponse) Reset() {
	*x = GetCurrenciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResponse) ProtoMessage() {}

func (x *GetCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{16}
}

func (x *GetCurrenciesResponse) GetCurrencies() []*models.Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetVendorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendors []*models.Vendor `protobuf:"bytes,1,rep,name=vendors,proto3" json:"vendors,omitempty"`
}

func (x *GetVendorsResponse) Reset() {
	*x = GetVendorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorsResponse) ProtoMessage() {}

func (x *GetVendorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorsResponse.ProtoReflect.Descriptor instead.
func (*GetVendorsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{17}
}

func (x *GetVendorsResponse) GetVendors() []*models.Vendor {
	if x != nil {
		return x.Vendors
	}
	return nil
}

type GetVendorByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVendorByIDRequest) Reset() {
	*x = GetVendorByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorByIDRequest) ProtoMessage() {}

func (x *GetVendorByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorByIDRequest.ProtoReflect.Descriptor instead.
func (*GetVendorByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{18}
}

func (x *GetVendorByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVendorByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *GetVendorByIDResponse) Reset() {
	*x = GetVendorByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorByIDResponse) ProtoMessage() {}

func (x *GetVendorByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorByIDResponse.ProtoReflect.Descriptor instead.
func (*GetVendorByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{19}
}

func (x *GetVendorByIDResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type GetVendorByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVendorByNameRequest) Reset() {
	*x = GetVendorByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorByNameRequest) ProtoMessage() {}

func (x *GetVendorByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorByNameRequest.ProtoReflect.Descriptor instead.
func (*GetVendorByNameRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{20}
}

func (x *GetVendorByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVendorByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *GetVendorByNameResponse) Reset() {
	*x = GetVendorByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorByNameResponse) ProtoMessage() {}

func (x *GetVendorByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorByNameResponse.ProtoReflect.Descriptor instead.
func (*GetVendorByNameResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{21}
}

func (x *GetVendorByNameResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type GetVendorHandleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVendorHandleByIDRequest) Reset() {
	*x = GetVendorHandleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorHandleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorHandleByIDRequest) ProtoMessage() {}

func (x *GetVendorHandleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorHandleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetVendorHandleByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{22}
}

func (x *GetVendorHandleByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVendorHandleByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor       `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Handle *models.VendorHandle `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *GetVendorHandleByIDResponse) Reset() {
	*x = GetVendorHandleByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorHandleByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorHandleByIDResponse) ProtoMessage() {}

func (x *GetVendorHandleByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorHandleByIDResponse.ProtoReflect.Descriptor instead.
func (*GetVendorHandleByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{23}
}

func (x *GetVendorHandleByIDResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *GetVendorHandleByIDResponse) GetHandle() *models.VendorHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type GetVendorHandleByHandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle   string  `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	VendorId *string `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3,oneof" json:"vendor_id,omitempty"`
}

func (x *GetVendorHandleByHandleRequest) Reset() {
	*x = GetVendorHandleByHandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorHandleByHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorHandleByHandleRequest) ProtoMessage() {}

func (x *GetVendorHandleByHandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorHandleByHandleRequest.ProtoReflect.Descriptor instead.
func (*GetVendorHandleByHandleRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{24}
}

func (x *GetVendorHandleByHandleRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *GetVendorHandleByHandleRequest) GetVendorId() string {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return ""
}

type GetVendorHandleByHandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor       `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Handle *models.VendorHandle `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *GetVendorHandleByHandleResponse) Reset() {
	*x = GetVendorHandleByHandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVendorHandleByHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVendorHandleByHandleResponse) ProtoMessage() {}

func (x *GetVendorHandleByHandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVendorHandleByHandleResponse.ProtoReflect.Descriptor instead.
func (*GetVendorHandleByHandleResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{25}
}

func (x *GetVendorHandleByHandleResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *GetVendorHandleByHandleResponse) GetHandle() *models.VendorHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type CreateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *CreateVendorRequest) Reset() {
	*x = CreateVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorRequest) ProtoMessage() {}

func (x *CreateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorRequest.ProtoReflect.Descriptor instead.
func (*CreateVendorRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{26}
}

func (x *CreateVendorRequest) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type CreateVendorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *CreateVendorResponse) Reset() {
	*x = CreateVendorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorResponse) ProtoMessage() {}

func (x *CreateVendorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorResponse.ProtoReflect.Descriptor instead.
func (*CreateVendorResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{27}
}

func (x *CreateVendorResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type CreateVendorHandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *models.VendorHandle `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Vendor *models.Vendor       `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *CreateVendorHandleRequest) Reset() {
	*x = CreateVendorHandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorHandleRequest) ProtoMessage() {}

func (x *CreateVendorHandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorHandleRequest.ProtoReflect.Descriptor instead.
func (*CreateVendorHandleRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{28}
}

func (x *CreateVendorHandleRequest) GetHandle() *models.VendorHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *CreateVendorHandleRequest) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type CreateVendorHandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle *models.VendorHandle `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Vendor *models.Vendor       `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *CreateVendorHandleResponse) Reset() {
	*x = CreateVendorHandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVendorHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVendorHandleResponse) ProtoMessage() {}

func (x *CreateVendorHandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVendorHandleResponse.ProtoReflect.Descriptor instead.
func (*CreateVendorHandleResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{29}
}

func (x *CreateVendorHandleResponse) GetHandle() *models.VendorHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *CreateVendorHandleResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type UpdateVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *UpdateVendorRequest) Reset() {
	*x = UpdateVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorRequest) ProtoMessage() {}

func (x *UpdateVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorRequest.ProtoReflect.Descriptor instead.
func (*UpdateVendorRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateVendorRequest) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type UpdateVendorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor *models.Vendor `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
}

func (x *UpdateVendorResponse) Reset() {
	*x = UpdateVendorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVendorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVendorResponse) ProtoMessage() {}

func (x *UpdateVendorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVendorResponse.ProtoReflect.Descriptor instead.
func (*UpdateVendorResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateVendorResponse) GetVendor() *models.Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

type DeleteVendorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVendorRequest) Reset() {
	*x = DeleteVendorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVendorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVendorRequest) ProtoMessage() {}

func (x *DeleteVendorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVendorRequest.ProtoReflect.Descriptor instead.
func (*DeleteVendorRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteVendorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVendorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *emptypb.Empty `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteVendorResponse) Reset() {
	*x = DeleteVendorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVendorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVendorResponse) ProtoMessage() {}

func (x *DeleteVendorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVendorResponse.ProtoReflect.Descriptor instead.
func (*DeleteVendorResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteVendorResponse) GetResponse() *emptypb.Empty {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetDocumentTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryId  string            `protobuf:"bytes,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Locale     string            `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
	EntityType models.EntityType `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=kappa.EntityType" json:"entity_type,omitempty"`
}

func (x *GetDocumentTypesRequest) Reset() {
	*x = GetDocumentTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypesRequest) ProtoMessage() {}

func (x *GetDocumentTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypesRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentTypesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{34}
}

func (x *GetDocumentTypesRequest) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *GetDocumentTypesRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *GetDocumentTypesRequest) GetEntityType() models.EntityType {
	if x != nil {
		return x.EntityType
	}
	return models.EntityType(0)
}

type GetDocumentTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentTypes []*models.IdentityDocumentType `protobuf:"bytes,1,rep,name=document_types,json=documentTypes,proto3" json:"document_types,omitempty"`
}

func (x *GetDocumentTypesResponse) Reset() {
	*x = GetDocumentTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypesResponse) ProtoMessage() {}

func (x *GetDocumentTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypesResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentTypesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{35}
}

func (x *GetDocumentTypesResponse) GetDocumentTypes() []*models.IdentityDocumentType {
	if x != nil {
		return x.DocumentTypes
	}
	return nil
}

type GetProviderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProviderByIDRequest) Reset() {
	*x = GetProviderByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderByIDRequest) ProtoMessage() {}

func (x *GetProviderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProviderByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{36}
}

func (x *GetProviderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProviderByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *models.Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *GetProviderByIDResponse) Reset() {
	*x = GetProviderByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderByIDResponse) ProtoMessage() {}

func (x *GetProviderByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProviderByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{37}
}

func (x *GetProviderByIDResponse) GetProvider() *models.Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type CreateProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *models.Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *CreateProviderRequest) Reset() {
	*x = CreateProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProviderRequest) ProtoMessage() {}

func (x *CreateProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateProviderRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{38}
}

func (x *CreateProviderRequest) GetProvider() *models.Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type CreateProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *models.Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *CreateProviderResponse) Reset() {
	*x = CreateProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProviderResponse) ProtoMessage() {}

func (x *CreateProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProviderResponse.ProtoReflect.Descriptor instead.
func (*CreateProviderResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{39}
}

func (x *CreateProviderResponse) GetProvider() *models.Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type UpdateProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *models.Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *UpdateProviderRequest) Reset() {
	*x = UpdateProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProviderRequest) ProtoMessage() {}

func (x *UpdateProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdateProviderRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateProviderRequest) GetProvider() *models.Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type UpdateProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *models.Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *UpdateProviderResponse) Reset() {
	*x = UpdateProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProviderResponse) ProtoMessage() {}

func (x *UpdateProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProviderResponse.ProtoReflect.Descriptor instead.
func (*UpdateProviderResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateProviderResponse) GetProvider() *models.Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type DeleteProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProviderRequest) Reset() {
	*x = DeleteProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProviderRequest) ProtoMessage() {}

func (x *DeleteProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProviderRequest.ProtoReflect.Descriptor instead.
func (*DeleteProviderRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteProviderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProviderResponse) Reset() {
	*x = DeleteProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProviderResponse) ProtoMessage() {}

func (x *DeleteProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProviderResponse.ProtoReflect.Descriptor instead.
func (*DeleteProviderResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteProviderResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProviderHandleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProviderHandleByIDRequest) Reset() {
	*x = GetProviderHandleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderHandleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderHandleByIDRequest) ProtoMessage() {}

func (x *GetProviderHandleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderHandleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProviderHandleByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{44}
}

func (x *GetProviderHandleByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProviderHandleByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderHandle *models.ProviderHandle `protobuf:"bytes,1,opt,name=provider_handle,json=providerHandle,proto3" json:"provider_handle,omitempty"`
}

func (x *GetProviderHandleByIDResponse) Reset() {
	*x = GetProviderHandleByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderHandleByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderHandleByIDResponse) ProtoMessage() {}

func (x *GetProviderHandleByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderHandleByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProviderHandleByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{45}
}

func (x *GetProviderHandleByIDResponse) GetProviderHandle() *models.ProviderHandle {
	if x != nil {
		return x.ProviderHandle
	}
	return nil
}

type GetLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*models.Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetLanguagesResponse) Reset() {
	*x = GetLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesResponse) ProtoMessage() {}

func (x *GetLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{46}
}

func (x *GetLanguagesResponse) GetLanguages() []*models.Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetLanguageByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLanguageByIDRequest) Reset() {
	*x = GetLanguageByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageByIDRequest) ProtoMessage() {}

func (x *GetLanguageByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageByIDRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{47}
}

func (x *GetLanguageByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLanguageByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *models.Language `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetLanguageByIDResponse) Reset() {
	*x = GetLanguageByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageByIDResponse) ProtoMessage() {}

func (x *GetLanguageByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageByIDResponse.ProtoReflect.Descriptor instead.
func (*GetLanguageByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{48}
}

func (x *GetLanguageByIDResponse) GetLanguage() *models.Language {
	if x != nil {
		return x.Language
	}
	return nil
}

type GetIdentityTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale string `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetIdentityTypesRequest) Reset() {
	*x = GetIdentityTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypesRequest) ProtoMessage() {}

func (x *GetIdentityTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypesRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityTypesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{49}
}

func (x *GetIdentityTypesRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetIdentityTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityTypes []*models.IdentityType `protobuf:"bytes,1,rep,name=identity_types,json=identityTypes,proto3" json:"identity_types,omitempty"`
}

func (x *GetIdentityTypesResponse) Reset() {
	*x = GetIdentityTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypesResponse) ProtoMessage() {}

func (x *GetIdentityTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypesResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityTypesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{50}
}

func (x *GetIdentityTypesResponse) GetIdentityTypes() []*models.IdentityType {
	if x != nil {
		return x.IdentityTypes
	}
	return nil
}

type GetDocumentTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetDocumentTypeByIDRequest) Reset() {
	*x = GetDocumentTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypeByIDRequest) ProtoMessage() {}

func (x *GetDocumentTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{51}
}

func (x *GetDocumentTypeByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDocumentTypeByIDRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetDocumentTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType *models.IdentityDocumentType `protobuf:"bytes,1,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
}

func (x *GetDocumentTypeByIDResponse) Reset() {
	*x = GetDocumentTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypeByIDResponse) ProtoMessage() {}

func (x *GetDocumentTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{52}
}

func (x *GetDocumentTypeByIDResponse) GetDocumentType() *models.IdentityDocumentType {
	if x != nil {
		return x.DocumentType
	}
	return nil
}

type GetDocumentTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Locale string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetDocumentTypeByNameRequest) Reset() {
	*x = GetDocumentTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypeByNameRequest) ProtoMessage() {}

func (x *GetDocumentTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{53}
}

func (x *GetDocumentTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDocumentTypeByNameRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetDocumentTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType *models.IdentityDocumentType `protobuf:"bytes,1,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
}

func (x *GetDocumentTypeByNameResponse) Reset() {
	*x = GetDocumentTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentTypeByNameResponse) ProtoMessage() {}

func (x *GetDocumentTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{54}
}

func (x *GetDocumentTypeByNameResponse) GetDocumentType() *models.IdentityDocumentType {
	if x != nil {
		return x.DocumentType
	}
	return nil
}

type GetIdentityTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetIdentityTypeByIDRequest) Reset() {
	*x = GetIdentityTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypeByIDRequest) ProtoMessage() {}

func (x *GetIdentityTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{55}
}

func (x *GetIdentityTypeByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdentityTypeByIDRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetIdentityTypeByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityType *models.IdentityType `protobuf:"bytes,1,opt,name=identity_type,json=identityType,proto3" json:"identity_type,omitempty"`
}

func (x *GetIdentityTypeByIDResponse) Reset() {
	*x = GetIdentityTypeByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypeByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypeByIDResponse) ProtoMessage() {}

func (x *GetIdentityTypeByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypeByIDResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityTypeByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{56}
}

func (x *GetIdentityTypeByIDResponse) GetIdentityType() *models.IdentityType {
	if x != nil {
		return x.IdentityType
	}
	return nil
}

type GetIdentityTypeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Locale string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"` // ISO 639-1 language code
}

func (x *GetIdentityTypeByNameRequest) Reset() {
	*x = GetIdentityTypeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypeByNameRequest) ProtoMessage() {}

func (x *GetIdentityTypeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityTypeByNameRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{57}
}

func (x *GetIdentityTypeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIdentityTypeByNameRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetIdentityTypeByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityType *models.IdentityType `protobuf:"bytes,1,opt,name=identity_type,json=identityType,proto3" json:"identity_type,omitempty"`
}

func (x *GetIdentityTypeByNameResponse) Reset() {
	*x = GetIdentityTypeByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityTypeByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityTypeByNameResponse) ProtoMessage() {}

func (x *GetIdentityTypeByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityTypeByNameResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityTypeByNameResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{58}
}

func (x *GetIdentityTypeByNameResponse) GetIdentityType() *models.IdentityType {
	if x != nil {
		return x.IdentityType
	}
	return nil
}

type GetTransactionDocumentTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale *string `protobuf:"bytes,1,opt,name=locale,proto3,oneof" json:"locale,omitempty"` // ISO 639-1 language code, defaults to en-us
}

func (x *GetTransactionDocumentTypesRequest) Reset() {
	*x = GetTransactionDocumentTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDocumentTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDocumentTypesRequest) ProtoMessage() {}

func (x *GetTransactionDocumentTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDocumentTypesRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionDocumentTypesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{59}
}

func (x *GetTransactionDocumentTypesRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

type GetTransactionDocumentTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionDocumentTypes []*models.TransactionDocumentType `protobuf:"bytes,1,rep,name=transaction_document_types,json=transactionDocumentTypes,proto3" json:"transaction_document_types,omitempty"`
}

func (x *GetTransactionDocumentTypesResponse) Reset() {
	*x = GetTransactionDocumentTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDocumentTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDocumentTypesResponse) ProtoMessage() {}

func (x *GetTransactionDocumentTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDocumentTypesResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionDocumentTypesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{60}
}

func (x *GetTransactionDocumentTypesResponse) GetTransactionDocumentTypes() []*models.TransactionDocumentType {
	if x != nil {
		return x.TransactionDocumentTypes
	}
	return nil
}

type GetTransactionInformationTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale *string `protobuf:"bytes,1,opt,name=locale,proto3,oneof" json:"locale,omitempty"` // ISO 639-1 language code, defaults to en-us
}

func (x *GetTransactionInformationTypesRequest) Reset() {
	*x = GetTransactionInformationTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionInformationTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionInformationTypesRequest) ProtoMessage() {}

func (x *GetTransactionInformationTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionInformationTypesRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionInformationTypesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{61}
}

func (x *GetTransactionInformationTypesRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

type GetTransactionInformationTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*models.TransactionInformationType `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *GetTransactionInformationTypesResponse) Reset() {
	*x = GetTransactionInformationTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionInformationTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionInformationTypesResponse) ProtoMessage() {}

func (x *GetTransactionInformationTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionInformationTypesResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionInformationTypesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{62}
}

func (x *GetTransactionInformationTypesResponse) GetTypes() []*models.TransactionInformationType {
	if x != nil {
		return x.Types
	}
	return nil
}

type GetTransactionInformationOptionsByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionInformationTypeId string  `protobuf:"bytes,1,opt,name=transaction_information_type_id,json=transactionInformationTypeId,proto3" json:"transaction_information_type_id,omitempty"`
	Locale                       *string `protobuf:"bytes,2,opt,name=locale,proto3,oneof" json:"locale,omitempty"` // ISO 639-1 language code, defaults to en-us
}

func (x *GetTransactionInformationOptionsByTypeRequest) Reset() {
	*x = GetTransactionInformationOptionsByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionInformationOptionsByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionInformationOptionsByTypeRequest) ProtoMessage() {}

func (x *GetTransactionInformationOptionsByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionInformationOptionsByTypeRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionInformationOptionsByTypeRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{63}
}

func (x *GetTransactionInformationOptionsByTypeRequest) GetTransactionInformationTypeId() string {
	if x != nil {
		return x.TransactionInformationTypeId
	}
	return ""
}

func (x *GetTransactionInformationOptionsByTypeRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

type GetTransactionInformationOptionsByTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*models.TransactionInformationOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *GetTransactionInformationOptionsByTypeResponse) Reset() {
	*x = GetTransactionInformationOptionsByTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_configuration_configuration_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionInformationOptionsByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionInformationOptionsByTypeResponse) ProtoMessage() {}

func (x *GetTransactionInformationOptionsByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_configuration_configuration_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionInformationOptionsByTypeResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionInformationOptionsByTypeResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_configuration_configuration_proto_rawDescGZIP(), []int{64}
}

func (x *GetTransactionInformationOptionsByTypeResponse) GetOptions() []*models.TransactionInformationOption {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_kappa_services_configuration_configuration_proto protoreflect.FileDescriptor

var file_kappa_services_configuration_configuration_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x27, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x6f, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x69, 0x63, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x6e, 0x61, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x4e, 0x61, 0x69, 0x63, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x0f, 0x6e, 0x61, 0x69, 0x63, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x30,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0d, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x38, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x53,
	0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x73, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x48, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x3d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x22, 0x26, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x68, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x22, 0x75, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x25, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x28,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0x44, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x44, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x45,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x61, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x57,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x22, 0x59, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4c,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x4f, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x22, 0x61, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x6f, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xea, 0x1d, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79,
	0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x42, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x41, 0x49, 0x43, 0x53, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x69, 0x63, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xad, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42,
	0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x86, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7, 0x01, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x73, 0x72, 0x63, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_configuration_configuration_proto_rawDescOnce sync.Once
	file_kappa_services_configuration_configuration_proto_rawDescData = file_kappa_services_configuration_configuration_proto_rawDesc
)

func file_kappa_services_configuration_configuration_proto_rawDescGZIP() []byte {
	file_kappa_services_configuration_configuration_proto_rawDescOnce.Do(func() {
		file_kappa_services_configuration_configuration_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_configuration_configuration_proto_rawDescData)
	})
	return file_kappa_services_configuration_configuration_proto_rawDescData
}

var file_kappa_services_configuration_configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_kappa_services_configuration_configuration_proto_goTypes = []interface{}{
	(*GetCountryByIDRequest)(nil),                            // 0: configuration.GetCountryByIDRequest
	(*GetCountryByIDResponse)(nil),                           // 1: configuration.GetCountryByIDResponse
	(*GetCountryByISOCodeRequest)(nil),                       // 2: configuration.GetCountryByISOCodeRequest
	(*GetCountryByISOCodeResponse)(nil),                      // 3: configuration.GetCountryByISOCodeResponse
	(*GetCountriesListResponse)(nil),                         // 4: configuration.GetCountriesListResponse
	(*GetNaicsCategoriesResponse)(nil),                       // 5: configuration.GetNaicsCategoriesResponse
	(*GetBusinessTypesByCountryRequest)(nil),                 // 6: configuration.GetBusinessTypesByCountryRequest
	(*GetBusinessTypesByCountryResponse)(nil),                // 7: configuration.GetBusinessTypesByCountryResponse
	(*GetBusinessRolesByCountryAndBusinessTypeRequest)(nil),  // 8: configuration.GetBusinessRolesByCountryAndBusinessTypeRequest
	(*GetBusinessRolesByCountryAndBusinessTypeResponse)(nil), // 9: configuration.GetBusinessRolesByCountryAndBusinessTypeResponse
	(*GetBusinessRoleByIDRequest)(nil),                       // 10: configuration.GetBusinessRoleByIDRequest
	(*GetBusinessRoleByIDResponse)(nil),                      // 11: configuration.GetBusinessRoleByIDResponse
	(*GetCurrencyByIDRequest)(nil),                           // 12: configuration.GetCurrencyByIDRequest
	(*GetCurrencyByIDResponse)(nil),                          // 13: configuration.GetCurrencyByIDResponse
	(*GetCurrencyByISOCodeRequest)(nil),                      // 14: configuration.GetCurrencyByISOCodeRequest
	(*GetCurrencyByISOCodeResponse)(nil),                     // 15: configuration.GetCurrencyByISOCodeResponse
	(*GetCurrenciesResponse)(nil),                            // 16: configuration.GetCurrenciesResponse
	(*GetVendorsResponse)(nil),                               // 17: configuration.GetVendorsResponse
	(*GetVendorByIDRequest)(nil),                             // 18: configuration.GetVendorByIDRequest
	(*GetVendorByIDResponse)(nil),                            // 19: configuration.GetVendorByIDResponse
	(*GetVendorByNameRequest)(nil),                           // 20: configuration.GetVendorByNameRequest
	(*GetVendorByNameResponse)(nil),                          // 21: configuration.GetVendorByNameResponse
	(*GetVendorHandleByIDRequest)(nil),                       // 22: configuration.GetVendorHandleByIDRequest
	(*GetVendorHandleByIDResponse)(nil),                      // 23: configuration.GetVendorHandleByIDResponse
	(*GetVendorHandleByHandleRequest)(nil),                   // 24: configuration.GetVendorHandleByHandleRequest
	(*GetVendorHandleByHandleResponse)(nil),                  // 25: configuration.GetVendorHandleByHandleResponse
	(*CreateVendorRequest)(nil),                              // 26: configuration.CreateVendorRequest
	(*CreateVendorResponse)(nil),                             // 27: configuration.CreateVendorResponse
	(*CreateVendorHandleRequest)(nil),                        // 28: configuration.CreateVendorHandleRequest
	(*CreateVendorHandleResponse)(nil),                       // 29: configuration.CreateVendorHandleResponse
	(*UpdateVendorRequest)(nil),                              // 30: configuration.UpdateVendorRequest
	(*UpdateVendorResponse)(nil),                             // 31: configuration.UpdateVendorResponse
	(*DeleteVendorRequest)(nil),                              // 32: configuration.DeleteVendorRequest
	(*DeleteVendorResponse)(nil),                             // 33: configuration.DeleteVendorResponse
	(*GetDocumentTypesRequest)(nil),                          // 34: configuration.GetDocumentTypesRequest
	(*GetDocumentTypesResponse)(nil),                         // 35: configuration.GetDocumentTypesResponse
	(*GetProviderByIDRequest)(nil),                           // 36: configuration.GetProviderByIDRequest
	(*GetProviderByIDResponse)(nil),                          // 37: configuration.GetProviderByIDResponse
	(*CreateProviderRequest)(nil),                            // 38: configuration.CreateProviderRequest
	(*CreateProviderResponse)(nil),                           // 39: configuration.CreateProviderResponse
	(*UpdateProviderRequest)(nil),                            // 40: configuration.UpdateProviderRequest
	(*UpdateProviderResponse)(nil),                           // 41: configuration.UpdateProviderResponse
	(*DeleteProviderRequest)(nil),                            // 42: configuration.DeleteProviderRequest
	(*DeleteProviderResponse)(nil),                           // 43: configuration.DeleteProviderResponse
	(*GetProviderHandleByIDRequest)(nil),                     // 44: configuration.GetProviderHandleByIDRequest
	(*GetProviderHandleByIDResponse)(nil),                    // 45: configuration.GetProviderHandleByIDResponse
	(*GetLanguagesResponse)(nil),                             // 46: configuration.GetLanguagesResponse
	(*GetLanguageByIDRequest)(nil),                           // 47: configuration.GetLanguageByIDRequest
	(*GetLanguageByIDResponse)(nil),                          // 48: configuration.GetLanguageByIDResponse
	(*GetIdentityTypesRequest)(nil),                          // 49: configuration.GetIdentityTypesRequest
	(*GetIdentityTypesResponse)(nil),                         // 50: configuration.GetIdentityTypesResponse
	(*GetDocumentTypeByIDRequest)(nil),                       // 51: configuration.GetDocumentTypeByIDRequest
	(*GetDocumentTypeByIDResponse)(nil),                      // 52: configuration.GetDocumentTypeByIDResponse
	(*GetDocumentTypeByNameRequest)(nil),                     // 53: configuration.GetDocumentTypeByNameRequest
	(*GetDocumentTypeByNameResponse)(nil),                    // 54: configuration.GetDocumentTypeByNameResponse
	(*GetIdentityTypeByIDRequest)(nil),                       // 55: configuration.GetIdentityTypeByIDRequest
	(*GetIdentityTypeByIDResponse)(nil),                      // 56: configuration.GetIdentityTypeByIDResponse
	(*GetIdentityTypeByNameRequest)(nil),                     // 57: configuration.GetIdentityTypeByNameRequest
	(*GetIdentityTypeByNameResponse)(nil),                    // 58: configuration.GetIdentityTypeByNameResponse
	(*GetTransactionDocumentTypesRequest)(nil),               // 59: configuration.GetTransactionDocumentTypesRequest
	(*GetTransactionDocumentTypesResponse)(nil),              // 60: configuration.GetTransactionDocumentTypesResponse
	(*GetTransactionInformationTypesRequest)(nil),            // 61: configuration.GetTransactionInformationTypesRequest
	(*GetTransactionInformationTypesResponse)(nil),           // 62: configuration.GetTransactionInformationTypesResponse
	(*GetTransactionInformationOptionsByTypeRequest)(nil),    // 63: configuration.GetTransactionInformationOptionsByTypeRequest
	(*GetTransactionInformationOptionsByTypeResponse)(nil),   // 64: configuration.GetTransactionInformationOptionsByTypeResponse
	(*models.Country)(nil),                                   // 65: kappa.Country
	(*models.NaicsCategory)(nil),                             // 66: kappa.NaicsCategory
	(*models.BusinessType)(nil),                              // 67: kappa.BusinessType
	(*models.BusinessRole)(nil),                              // 68: kappa.BusinessRole
	(*models.Currency)(nil),                                  // 69: kappa.Currency
	(*models.Vendor)(nil),                                    // 70: kappa.Vendor
	(*models.VendorHandle)(nil),                              // 71: kappa.VendorHandle
	(*emptypb.Empty)(nil),                                    // 72: google.protobuf.Empty
	(models.EntityType)(0),                                   // 73: kappa.EntityType
	(*models.IdentityDocumentType)(nil),                      // 74: kappa.IdentityDocumentType
	(*models.Provider)(nil),                                  // 75: kappa.Provider
	(*models.ProviderHandle)(nil),                            // 76: kappa.ProviderHandle
	(*models.Language)(nil),                                  // 77: kappa.Language
	(*models.IdentityType)(nil),                              // 78: kappa.IdentityType
	(*models.TransactionDocumentType)(nil),                   // 79: kappa.TransactionDocumentType
	(*models.TransactionInformationType)(nil),                // 80: kappa.TransactionInformationType
	(*models.TransactionInformationOption)(nil),              // 81: kappa.TransactionInformationOption
}
var file_kappa_services_configuration_configuration_proto_depIdxs = []int32{
	65, // 0: configuration.GetCountryByIDResponse.country:type_name -> kappa.Country
	65, // 1: configuration.GetCountryByISOCodeResponse.country:type_name -> kappa.Country
	65, // 2: configuration.GetCountriesListResponse.countries:type_name -> kappa.Country
	66, // 3: configuration.GetNaicsCategoriesResponse.naics_categories:type_name -> kappa.NaicsCategory
	67, // 4: configuration.GetBusinessTypesByCountryResponse.business_types:type_name -> kappa.BusinessType
	68, // 5: configuration.GetBusinessRolesByCountryAndBusinessTypeResponse.business_roles:type_name -> kappa.BusinessRole
	68, // 6: configuration.GetBusinessRoleByIDResponse.business_role:type_name -> kappa.BusinessRole
	69, // 7: configuration.GetCurrencyByIDResponse.currency:type_name -> kappa.Currency
	69, // 8: configuration.GetCurrencyByISOCodeResponse.currency:type_name -> kappa.Currency
	69, // 9: configuration.GetCurrenciesResponse.currencies:type_name -> kappa.Currency
	70, // 10: configuration.GetVendorsResponse.vendors:type_name -> kappa.Vendor
	70, // 11: configuration.GetVendorByIDResponse.vendor:type_name -> kappa.Vendor
	70, // 12: configuration.GetVendorByNameResponse.vendor:type_name -> kappa.Vendor
	70, // 13: configuration.GetVendorHandleByIDResponse.vendor:type_name -> kappa.Vendor
	71, // 14: configuration.GetVendorHandleByIDResponse.handle:type_name -> kappa.VendorHandle
	70, // 15: configuration.GetVendorHandleByHandleResponse.vendor:type_name -> kappa.Vendor
	71, // 16: configuration.GetVendorHandleByHandleResponse.handle:type_name -> kappa.VendorHandle
	70, // 17: configuration.CreateVendorRequest.vendor:type_name -> kappa.Vendor
	70, // 18: configuration.CreateVendorResponse.vendor:type_name -> kappa.Vendor
	71, // 19: configuration.CreateVendorHandleRequest.handle:type_name -> kappa.VendorHandle
	70, // 20: configuration.CreateVendorHandleRequest.vendor:type_name -> kappa.Vendor
	71, // 21: configuration.CreateVendorHandleResponse.handle:type_name -> kappa.VendorHandle
	70, // 22: configuration.CreateVendorHandleResponse.vendor:type_name -> kappa.Vendor
	70, // 23: configuration.UpdateVendorRequest.vendor:type_name -> kappa.Vendor
	70, // 24: configuration.UpdateVendorResponse.vendor:type_name -> kappa.Vendor
	72, // 25: configuration.DeleteVendorResponse.response:type_name -> google.protobuf.Empty
	73, // 26: configuration.GetDocumentTypesRequest.entity_type:type_name -> kappa.EntityType
	74, // 27: configuration.GetDocumentTypesResponse.document_types:type_name -> kappa.IdentityDocumentType
	75, // 28: configuration.GetProviderByIDResponse.provider:type_name -> kappa.Provider
	75, // 29: configuration.CreateProviderRequest.provider:type_name -> kappa.Provider
	75, // 30: configuration.CreateProviderResponse.provider:type_name -> kappa.Provider
	75, // 31: configuration.UpdateProviderRequest.provider:type_name -> kappa.Provider
	75, // 32: configuration.UpdateProviderResponse.provider:type_name -> kappa.Provider
	76, // 33: configuration.GetProviderHandleByIDResponse.provider_handle:type_name -> kappa.ProviderHandle
	77, // 34: configuration.GetLanguagesResponse.languages:type_name -> kappa.Language
	77, // 35: configuration.GetLanguageByIDResponse.language:type_name -> kappa.Language
	78, // 36: configuration.GetIdentityTypesResponse.identity_types:type_name -> kappa.IdentityType
	74, // 37: configuration.GetDocumentTypeByIDResponse.document_type:type_name -> kappa.IdentityDocumentType
	74, // 38: configuration.GetDocumentTypeByNameResponse.document_type:type_name -> kappa.IdentityDocumentType
	78, // 39: configuration.GetIdentityTypeByIDResponse.identity_type:type_name -> kappa.IdentityType
	78, // 40: configuration.GetIdentityTypeByNameResponse.identity_type:type_name -> kappa.IdentityType
	79, // 41: configuration.GetTransactionDocumentTypesResponse.transaction_document_types:type_name -> kappa.TransactionDocumentType
	80, // 42: configuration.GetTransactionInformationTypesResponse.types:type_name -> kappa.TransactionInformationType
	81, // 43: configuration.GetTransactionInformationOptionsByTypeResponse.options:type_name -> kappa.TransactionInformationOption
	0,  // 44: configuration.ConfigurationService.GetCountryByID:input_type -> configuration.GetCountryByIDRequest
	2,  // 45: configuration.ConfigurationService.GetCountryByISOCode:input_type -> configuration.GetCountryByISOCodeRequest
	12, // 46: configuration.ConfigurationService.GetCurrencyByID:input_type -> configuration.GetCurrencyByIDRequest
	14, // 47: configuration.ConfigurationService.GetCurrencyByISOCode:input_type -> configuration.GetCurrencyByISOCodeRequest
	72, // 48: configuration.ConfigurationService.GetCurrenciesList:input_type -> google.protobuf.Empty
	72, // 49: configuration.ConfigurationService.GetCountriesList:input_type -> google.protobuf.Empty
	72, // 50: configuration.ConfigurationService.GetNAICSCategories:input_type -> google.protobuf.Empty
	6,  // 51: configuration.ConfigurationService.GetBusinessTypesByCountry:input_type -> configuration.GetBusinessTypesByCountryRequest
	8,  // 52: configuration.ConfigurationService.GetBusinessRolesByCountryAndBusinessType:input_type -> configuration.GetBusinessRolesByCountryAndBusinessTypeRequest
	10, // 53: configuration.ConfigurationService.GetBusinessRoleByID:input_type -> configuration.GetBusinessRoleByIDRequest
	72, // 54: configuration.ConfigurationService.GetVendors:input_type -> google.protobuf.Empty
	18, // 55: configuration.ConfigurationService.GetVendorByID:input_type -> configuration.GetVendorByIDRequest
	20, // 56: configuration.ConfigurationService.GetVendorByName:input_type -> configuration.GetVendorByNameRequest
	22, // 57: configuration.ConfigurationService.GetVendorHandleByID:input_type -> configuration.GetVendorHandleByIDRequest
	24, // 58: configuration.ConfigurationService.GetVendorHandleByHandle:input_type -> configuration.GetVendorHandleByHandleRequest
	26, // 59: configuration.ConfigurationService.CreateVendor:input_type -> configuration.CreateVendorRequest
	28, // 60: configuration.ConfigurationService.CreateVendorHandle:input_type -> configuration.CreateVendorHandleRequest
	30, // 61: configuration.ConfigurationService.UpdateVendor:input_type -> configuration.UpdateVendorRequest
	32, // 62: configuration.ConfigurationService.DeleteVendor:input_type -> configuration.DeleteVendorRequest
	34, // 63: configuration.ConfigurationService.GetDocumentTypes:input_type -> configuration.GetDocumentTypesRequest
	51, // 64: configuration.ConfigurationService.GetDocumentTypeByID:input_type -> configuration.GetDocumentTypeByIDRequest
	53, // 65: configuration.ConfigurationService.GetDocumentTypeByName:input_type -> configuration.GetDocumentTypeByNameRequest
	72, // 66: configuration.ConfigurationService.GetLanguages:input_type -> google.protobuf.Empty
	47, // 67: configuration.ConfigurationService.GetLanguageByID:input_type -> configuration.GetLanguageByIDRequest
	36, // 68: configuration.ConfigurationService.GetProviderByID:input_type -> configuration.GetProviderByIDRequest
	38, // 69: configuration.ConfigurationService.CreateProvider:input_type -> configuration.CreateProviderRequest
	40, // 70: configuration.ConfigurationService.UpdateProvider:input_type -> configuration.UpdateProviderRequest
	42, // 71: configuration.ConfigurationService.DeleteProvider:input_type -> configuration.DeleteProviderRequest
	44, // 72: configuration.ConfigurationService.GetProviderHandleByID:input_type -> configuration.GetProviderHandleByIDRequest
	49, // 73: configuration.ConfigurationService.GetIdentityTypes:input_type -> configuration.GetIdentityTypesRequest
	55, // 74: configuration.ConfigurationService.GetIdentityTypeByID:input_type -> configuration.GetIdentityTypeByIDRequest
	57, // 75: configuration.ConfigurationService.GetIdentityTypeByName:input_type -> configuration.GetIdentityTypeByNameRequest
	59, // 76: configuration.ConfigurationService.GetTransactionDocumentTypes:input_type -> configuration.GetTransactionDocumentTypesRequest
	61, // 77: configuration.ConfigurationService.GetTransactionInformationTypes:input_type -> configuration.GetTransactionInformationTypesRequest
	63, // 78: configuration.ConfigurationService.GetTransactionInformationOptionsByType:input_type -> configuration.GetTransactionInformationOptionsByTypeRequest
	1,  // 79: configuration.ConfigurationService.GetCountryByID:output_type -> configuration.GetCountryByIDResponse
	3,  // 80: configuration.ConfigurationService.GetCountryByISOCode:output_type -> configuration.GetCountryByISOCodeResponse
	13, // 81: configuration.ConfigurationService.GetCurrencyByID:output_type -> configuration.GetCurrencyByIDResponse
	15, // 82: configuration.ConfigurationService.GetCurrencyByISOCode:output_type -> configuration.GetCurrencyByISOCodeResponse
	16, // 83: configuration.ConfigurationService.GetCurrenciesList:output_type -> configuration.GetCurrenciesResponse
	4,  // 84: configuration.ConfigurationService.GetCountriesList:output_type -> configuration.GetCountriesListResponse
	5,  // 85: configuration.ConfigurationService.GetNAICSCategories:output_type -> configuration.GetNaicsCategoriesResponse
	7,  // 86: configuration.ConfigurationService.GetBusinessTypesByCountry:output_type -> configuration.GetBusinessTypesByCountryResponse
	9,  // 87: configuration.ConfigurationService.GetBusinessRolesByCountryAndBusinessType:output_type -> configuration.GetBusinessRolesByCountryAndBusinessTypeResponse
	11, // 88: configuration.ConfigurationService.GetBusinessRoleByID:output_type -> configuration.GetBusinessRoleByIDResponse
	17, // 89: configuration.ConfigurationService.GetVendors:output_type -> configuration.GetVendorsResponse
	19, // 90: configuration.ConfigurationService.GetVendorByID:output_type -> configuration.GetVendorByIDResponse
	21, // 91: configuration.ConfigurationService.GetVendorByName:output_type -> configuration.GetVendorByNameResponse
	23, // 92: configuration.ConfigurationService.GetVendorHandleByID:output_type -> configuration.GetVendorHandleByIDResponse
	25, // 93: configuration.ConfigurationService.GetVendorHandleByHandle:output_type -> configuration.GetVendorHandleByHandleResponse
	27, // 94: configuration.ConfigurationService.CreateVendor:output_type -> configuration.CreateVendorResponse
	29, // 95: configuration.ConfigurationService.CreateVendorHandle:output_type -> configuration.CreateVendorHandleResponse
	31, // 96: configuration.ConfigurationService.UpdateVendor:output_type -> configuration.UpdateVendorResponse
	33, // 97: configuration.ConfigurationService.DeleteVendor:output_type -> configuration.DeleteVendorResponse
	35, // 98: configuration.ConfigurationService.GetDocumentTypes:output_type -> configuration.GetDocumentTypesResponse
	52, // 99: configuration.ConfigurationService.GetDocumentTypeByID:output_type -> configuration.GetDocumentTypeByIDResponse
	54, // 100: configuration.ConfigurationService.GetDocumentTypeByName:output_type -> configuration.GetDocumentTypeByNameResponse
	46, // 101: configuration.ConfigurationService.GetLanguages:output_type -> configuration.GetLanguagesResponse
	48, // 102: configuration.ConfigurationService.GetLanguageByID:output_type -> configuration.GetLanguageByIDResponse
	37, // 103: configuration.ConfigurationService.GetProviderByID:output_type -> configuration.GetProviderByIDResponse
	39, // 104: configuration.ConfigurationService.CreateProvider:output_type -> configuration.CreateProviderResponse
	41, // 105: configuration.ConfigurationService.UpdateProvider:output_type -> configuration.UpdateProviderResponse
	43, // 106: configuration.ConfigurationService.DeleteProvider:output_type -> configuration.DeleteProviderResponse
	45, // 107: configuration.ConfigurationService.GetProviderHandleByID:output_type -> configuration.GetProviderHandleByIDResponse
	50, // 108: configuration.ConfigurationService.GetIdentityTypes:output_type -> configuration.GetIdentityTypesResponse
	56, // 109: configuration.ConfigurationService.GetIdentityTypeByID:output_type -> configuration.GetIdentityTypeByIDResponse
	58, // 110: configuration.ConfigurationService.GetIdentityTypeByName:output_type -> configuration.GetIdentityTypeByNameResponse
	60, // 111: configuration.ConfigurationService.GetTransactionDocumentTypes:output_type -> configuration.GetTransactionDocumentTypesResponse
	62, // 112: configuration.ConfigurationService.GetTransactionInformationTypes:output_type -> configuration.GetTransactionInformationTypesResponse
	64, // 113: configuration.ConfigurationService.GetTransactionInformationOptionsByType:output_type -> configuration.GetTransactionInformationOptionsByTypeResponse
	79, // [79:114] is the sub-list for method output_type
	44, // [44:79] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_kappa_services_configuration_configuration_proto_init() }
func file_kappa_services_configuration_configuration_proto_init() {
	if File_kappa_services_configuration_configuration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_configuration_configuration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryByISOCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryByISOCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountriesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNaicsCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessTypesByCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessTypesByCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRolesByCountryAndBusinessTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRolesByCountryAndBusinessTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRoleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRoleByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyByISOCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrencyByISOCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorHandleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorHandleByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorHandleByHandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVendorHandleByHandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorHandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVendorHandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVendorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVendorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVendorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderHandleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderHandleByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguageByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypeByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityTypeByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDocumentTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDocumentTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionInformationTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionInformationTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionInformationOptionsByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_configuration_configuration_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionInformationOptionsByTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_configuration_configuration_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_kappa_services_configuration_configuration_proto_msgTypes[59].OneofWrappers = []interface{}{}
	file_kappa_services_configuration_configuration_proto_msgTypes[61].OneofWrappers = []interface{}{}
	file_kappa_services_configuration_configuration_proto_msgTypes[63].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_configuration_configuration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_configuration_configuration_proto_goTypes,
		DependencyIndexes: file_kappa_services_configuration_configuration_proto_depIdxs,
		MessageInfos:      file_kappa_services_configuration_configuration_proto_msgTypes,
	}.Build()
	File_kappa_services_configuration_configuration_proto = out.File
	file_kappa_services_configuration_configuration_proto_rawDesc = nil
	file_kappa_services_configuration_configuration_proto_goTypes = nil
	file_kappa_services_configuration_configuration_proto_depIdxs = nil
}
