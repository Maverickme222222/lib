// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/reconciliation/reconciliation.proto

package reconciliation

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Persists a ExternalTransactionNotification.
// If there is no associated TransactionReconciliationRecord this method will
// create one implicitly.
type CreateExternalTransactionNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *models.ExternalTransactionNotification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *CreateExternalTransactionNotificationRequest) Reset() {
	*x = CreateExternalTransactionNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalTransactionNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalTransactionNotificationRequest) ProtoMessage() {}

func (x *CreateExternalTransactionNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalTransactionNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateExternalTransactionNotificationRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateExternalTransactionNotificationRequest) GetNotification() *models.ExternalTransactionNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type CreateExternalTransactionNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateExternalTransactionNotificationResponse) Reset() {
	*x = CreateExternalTransactionNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExternalTransactionNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExternalTransactionNotificationResponse) ProtoMessage() {}

func (x *CreateExternalTransactionNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExternalTransactionNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateExternalTransactionNotificationResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{1}
}

// This method will persist a set of probabilities for a deposit.
// This method will replace any existing probabilities.
type SetMatchProbabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionReconciliationRecordId string                                `protobuf:"bytes,1,opt,name=transaction_reconciliation_record_id,json=transactionReconciliationRecordId,proto3" json:"transaction_reconciliation_record_id,omitempty"`
	Probabilities                     []*models.TransactionMatchProbability `protobuf:"bytes,2,rep,name=probabilities,proto3" json:"probabilities,omitempty"`
}

func (x *SetMatchProbabilitiesRequest) Reset() {
	*x = SetMatchProbabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMatchProbabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMatchProbabilitiesRequest) ProtoMessage() {}

func (x *SetMatchProbabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMatchProbabilitiesRequest.ProtoReflect.Descriptor instead.
func (*SetMatchProbabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{2}
}

func (x *SetMatchProbabilitiesRequest) GetTransactionReconciliationRecordId() string {
	if x != nil {
		return x.TransactionReconciliationRecordId
	}
	return ""
}

func (x *SetMatchProbabilitiesRequest) GetProbabilities() []*models.TransactionMatchProbability {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

type SetMatchProbabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMatchProbabilitiesResponse) Reset() {
	*x = SetMatchProbabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMatchProbabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMatchProbabilitiesResponse) ProtoMessage() {}

func (x *SetMatchProbabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMatchProbabilitiesResponse.ProtoReflect.Descriptor instead.
func (*SetMatchProbabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{3}
}

// After a deposit has been linked to a transaction, this method should be
// called to mark the records as reconciled and to track which transaction it
// reconciled to.
type SetTransactionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionReconciliationRecordId string  `protobuf:"bytes,1,opt,name=transaction_reconciliation_record_id,json=transactionReconciliationRecordId,proto3" json:"transaction_reconciliation_record_id,omitempty"`
	MatchedTransactionId              string  `protobuf:"bytes,2,opt,name=matched_transaction_id,json=matchedTransactionId,proto3" json:"matched_transaction_id,omitempty"`
	MatchedBy                         *string `protobuf:"bytes,3,opt,name=matched_by,json=matchedBy,proto3,oneof" json:"matched_by,omitempty"`
}

func (x *SetTransactionIDRequest) Reset() {
	*x = SetTransactionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransactionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransactionIDRequest) ProtoMessage() {}

func (x *SetTransactionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransactionIDRequest.ProtoReflect.Descriptor instead.
func (*SetTransactionIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{4}
}

func (x *SetTransactionIDRequest) GetTransactionReconciliationRecordId() string {
	if x != nil {
		return x.TransactionReconciliationRecordId
	}
	return ""
}

func (x *SetTransactionIDRequest) GetMatchedTransactionId() string {
	if x != nil {
		return x.MatchedTransactionId
	}
	return ""
}

func (x *SetTransactionIDRequest) GetMatchedBy() string {
	if x != nil && x.MatchedBy != nil {
		return *x.MatchedBy
	}
	return ""
}

type SetTransactionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTransactionIDResponse) Reset() {
	*x = SetTransactionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransactionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransactionIDResponse) ProtoMessage() {}

func (x *SetTransactionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransactionIDResponse.ProtoReflect.Descriptor instead.
func (*SetTransactionIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{5}
}

// Set a transactions reconciliation status
// Note only the following status transitions are valid
// MATCHED → RECONCILED
// MATCHED → RECONCILIATION_FAILED
// RECONCILIATION_FAILED → RECONCILED
// REQUIRES_REVIEW → IGNORE
// RECONCILIATION_FAILED → IGNORE
type SetTransactionReconciliationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionReconciliationRecordId string                                         `protobuf:"bytes,1,opt,name=transaction_reconciliation_record_id,json=transactionReconciliationRecordId,proto3" json:"transaction_reconciliation_record_id,omitempty"`
	Status                            models.ExternalTransactionReconciliationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kappa.ExternalTransactionReconciliationStatus" json:"status,omitempty"`
	SetBy                             string                                         `protobuf:"bytes,3,opt,name=set_by,json=setBy,proto3" json:"set_by,omitempty"`
}

func (x *SetTransactionReconciliationStatusRequest) Reset() {
	*x = SetTransactionReconciliationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransactionReconciliationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransactionReconciliationStatusRequest) ProtoMessage() {}

func (x *SetTransactionReconciliationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransactionReconciliationStatusRequest.ProtoReflect.Descriptor instead.
func (*SetTransactionReconciliationStatusRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{6}
}

func (x *SetTransactionReconciliationStatusRequest) GetTransactionReconciliationRecordId() string {
	if x != nil {
		return x.TransactionReconciliationRecordId
	}
	return ""
}

func (x *SetTransactionReconciliationStatusRequest) GetStatus() models.ExternalTransactionReconciliationStatus {
	if x != nil {
		return x.Status
	}
	return models.ExternalTransactionReconciliationStatus(0)
}

func (x *SetTransactionReconciliationStatusRequest) GetSetBy() string {
	if x != nil {
		return x.SetBy
	}
	return ""
}

type SetTransactionReconciliationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTransactionReconciliationStatusResponse) Reset() {
	*x = SetTransactionReconciliationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransactionReconciliationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransactionReconciliationStatusResponse) ProtoMessage() {}

func (x *SetTransactionReconciliationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_reconciliation_reconciliation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransactionReconciliationStatusResponse.ProtoReflect.Descriptor instead.
func (*SetTransactionReconciliationStatusResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP(), []int{7}
}

var File_kappa_services_reconciliation_reconciliation_proto protoreflect.FileDescriptor

var file_kappa_services_reconciliation_reconciliation_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x1a, 0x28, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x24, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x21, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd3, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x24,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x29, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x24, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x74, 0x42, 0x79,
	0x22, 0x2c, 0x0a, 0x2a, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81,
	0x04, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1f, 0x2e,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x2e, 0x70, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_reconciliation_reconciliation_proto_rawDescOnce sync.Once
	file_kappa_services_reconciliation_reconciliation_proto_rawDescData = file_kappa_services_reconciliation_reconciliation_proto_rawDesc
)

func file_kappa_services_reconciliation_reconciliation_proto_rawDescGZIP() []byte {
	file_kappa_services_reconciliation_reconciliation_proto_rawDescOnce.Do(func() {
		file_kappa_services_reconciliation_reconciliation_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_reconciliation_reconciliation_proto_rawDescData)
	})
	return file_kappa_services_reconciliation_reconciliation_proto_rawDescData
}

var file_kappa_services_reconciliation_reconciliation_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_kappa_services_reconciliation_reconciliation_proto_goTypes = []interface{}{
	(*CreateExternalTransactionNotificationRequest)(nil),  // 0: payout.CreateExternalTransactionNotificationRequest
	(*CreateExternalTransactionNotificationResponse)(nil), // 1: payout.CreateExternalTransactionNotificationResponse
	(*SetMatchProbabilitiesRequest)(nil),                  // 2: payout.SetMatchProbabilitiesRequest
	(*SetMatchProbabilitiesResponse)(nil),                 // 3: payout.SetMatchProbabilitiesResponse
	(*SetTransactionIDRequest)(nil),                       // 4: payout.SetTransactionIDRequest
	(*SetTransactionIDResponse)(nil),                      // 5: payout.SetTransactionIDResponse
	(*SetTransactionReconciliationStatusRequest)(nil),     // 6: payout.SetTransactionReconciliationStatusRequest
	(*SetTransactionReconciliationStatusResponse)(nil),    // 7: payout.SetTransactionReconciliationStatusResponse
	(*models.ExternalTransactionNotification)(nil),        // 8: kappa.ExternalTransactionNotification
	(*models.TransactionMatchProbability)(nil),            // 9: kappa.TransactionMatchProbability
	(models.ExternalTransactionReconciliationStatus)(0),   // 10: kappa.ExternalTransactionReconciliationStatus
}
var file_kappa_services_reconciliation_reconciliation_proto_depIdxs = []int32{
	8,  // 0: payout.CreateExternalTransactionNotificationRequest.notification:type_name -> kappa.ExternalTransactionNotification
	9,  // 1: payout.SetMatchProbabilitiesRequest.probabilities:type_name -> kappa.TransactionMatchProbability
	10, // 2: payout.SetTransactionReconciliationStatusRequest.status:type_name -> kappa.ExternalTransactionReconciliationStatus
	0,  // 3: payout.ReconciliationService.CreateExternalTransactionNotification:input_type -> payout.CreateExternalTransactionNotificationRequest
	2,  // 4: payout.ReconciliationService.SetMatchProbabilities:input_type -> payout.SetMatchProbabilitiesRequest
	4,  // 5: payout.ReconciliationService.SetTransactionID:input_type -> payout.SetTransactionIDRequest
	6,  // 6: payout.ReconciliationService.SetTransactionReconciliationStatus:input_type -> payout.SetTransactionReconciliationStatusRequest
	1,  // 7: payout.ReconciliationService.CreateExternalTransactionNotification:output_type -> payout.CreateExternalTransactionNotificationResponse
	3,  // 8: payout.ReconciliationService.SetMatchProbabilities:output_type -> payout.SetMatchProbabilitiesResponse
	5,  // 9: payout.ReconciliationService.SetTransactionID:output_type -> payout.SetTransactionIDResponse
	7,  // 10: payout.ReconciliationService.SetTransactionReconciliationStatus:output_type -> payout.SetTransactionReconciliationStatusResponse
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_kappa_services_reconciliation_reconciliation_proto_init() }
func file_kappa_services_reconciliation_reconciliation_proto_init() {
	if File_kappa_services_reconciliation_reconciliation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalTransactionNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExternalTransactionNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMatchProbabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMatchProbabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTransactionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTransactionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTransactionReconciliationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_reconciliation_reconciliation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTransactionReconciliationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_reconciliation_reconciliation_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_reconciliation_reconciliation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_reconciliation_reconciliation_proto_goTypes,
		DependencyIndexes: file_kappa_services_reconciliation_reconciliation_proto_depIdxs,
		MessageInfos:      file_kappa_services_reconciliation_reconciliation_proto_msgTypes,
	}.Build()
	File_kappa_services_reconciliation_reconciliation_proto = out.File
	file_kappa_services_reconciliation_reconciliation_proto_rawDesc = nil
	file_kappa_services_reconciliation_reconciliation_proto_goTypes = nil
	file_kappa_services_reconciliation_reconciliation_proto_depIdxs = nil
}
