// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Pankaj Pant</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/limits/limits.proto

package limits

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLimitByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLimitByIDRequest) Reset() {
	*x = GetLimitByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitByIDRequest) ProtoMessage() {}

func (x *GetLimitByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitByIDRequest.ProtoReflect.Descriptor instead.
func (*GetLimitByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{0}
}

func (x *GetLimitByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLimitByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *models.Limit `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetLimitByIDResponse) Reset() {
	*x = GetLimitByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitByIDResponse) ProtoMessage() {}

func (x *GetLimitByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitByIDResponse.ProtoReflect.Descriptor instead.
func (*GetLimitByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{1}
}

func (x *GetLimitByIDResponse) GetLimit() *models.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type CreateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *models.Limit `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CreateLimitRequest) Reset() {
	*x = CreateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitRequest) ProtoMessage() {}

func (x *CreateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitRequest.ProtoReflect.Descriptor instead.
func (*CreateLimitRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLimitRequest) GetLimit() *models.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type CreateLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLimitResponse) Reset() {
	*x = CreateLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitResponse) ProtoMessage() {}

func (x *CreateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitResponse.ProtoReflect.Descriptor instead.
func (*CreateLimitResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLimitResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *models.Limit `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *UpdateLimitRequest) Reset() {
	*x = UpdateLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLimitRequest) ProtoMessage() {}

func (x *UpdateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLimitRequest.ProtoReflect.Descriptor instead.
func (*UpdateLimitRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLimitRequest) GetLimit() *models.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type UpdateLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *models.Limit `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *UpdateLimitResponse) Reset() {
	*x = UpdateLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLimitResponse) ProtoMessage() {}

func (x *UpdateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLimitResponse.ProtoReflect.Descriptor instead.
func (*UpdateLimitResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLimitResponse) GetLimit() *models.Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type DeleteLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLimitRequest) Reset() {
	*x = DeleteLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLimitRequest) ProtoMessage() {}

func (x *DeleteLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLimitRequest.ProtoReflect.Descriptor instead.
func (*DeleteLimitRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLimitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLimitResponse) Reset() {
	*x = DeleteLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLimitResponse) ProtoMessage() {}

func (x *DeleteLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLimitResponse.ProtoReflect.Descriptor instead.
func (*DeleteLimitResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteLimitResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDefaultLimitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType       *models.EntityType `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3,enum=kappa.EntityType,oneof" json:"entity_type,omitempty"`
	EntityDomicileId *string            `protobuf:"bytes,2,opt,name=entity_domicile_id,json=entityDomicileId,proto3,oneof" json:"entity_domicile_id,omitempty"`
}

func (x *GetDefaultLimitsRequest) Reset() {
	*x = GetDefaultLimitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLimitsRequest) ProtoMessage() {}

func (x *GetDefaultLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLimitsRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultLimitsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{8}
}

func (x *GetDefaultLimitsRequest) GetEntityType() models.EntityType {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return models.EntityType(0)
}

func (x *GetDefaultLimitsRequest) GetEntityDomicileId() string {
	if x != nil && x.EntityDomicileId != nil {
		return *x.EntityDomicileId
	}
	return ""
}

type GetDefaultLimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultLimits []*models.DefaultLimit `protobuf:"bytes,1,rep,name=default_limits,json=defaultLimits,proto3" json:"default_limits,omitempty"`
}

func (x *GetDefaultLimitsResponse) Reset() {
	*x = GetDefaultLimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefaultLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultLimitsResponse) ProtoMessage() {}

func (x *GetDefaultLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultLimitsResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultLimitsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{9}
}

func (x *GetDefaultLimitsResponse) GetDefaultLimits() []*models.DefaultLimit {
	if x != nil {
		return x.DefaultLimits
	}
	return nil
}

type CreateLimitsForEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *CreateLimitsForEntityRequest) Reset() {
	*x = CreateLimitsForEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitsForEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitsForEntityRequest) ProtoMessage() {}

func (x *CreateLimitsForEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitsForEntityRequest.ProtoReflect.Descriptor instead.
func (*CreateLimitsForEntityRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{10}
}

func (x *CreateLimitsForEntityRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type CreateLimitsForEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limits []*models.Limit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *CreateLimitsForEntityResponse) Reset() {
	*x = CreateLimitsForEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLimitsForEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLimitsForEntityResponse) ProtoMessage() {}

func (x *CreateLimitsForEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLimitsForEntityResponse.ProtoReflect.Descriptor instead.
func (*CreateLimitsForEntityResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{11}
}

func (x *CreateLimitsForEntityResponse) GetLimits() []*models.Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

type GetLimitsByEntityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string                `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Filters  *models.LimitsFilters `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *GetLimitsByEntityIDRequest) Reset() {
	*x = GetLimitsByEntityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitsByEntityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitsByEntityIDRequest) ProtoMessage() {}

func (x *GetLimitsByEntityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitsByEntityIDRequest.ProtoReflect.Descriptor instead.
func (*GetLimitsByEntityIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{12}
}

func (x *GetLimitsByEntityIDRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *GetLimitsByEntityIDRequest) GetFilters() *models.LimitsFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetLimitsByEntityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limits []*models.Limit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *GetLimitsByEntityIDResponse) Reset() {
	*x = GetLimitsByEntityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLimitsByEntityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLimitsByEntityIDResponse) ProtoMessage() {}

func (x *GetLimitsByEntityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLimitsByEntityIDResponse.ProtoReflect.Descriptor instead.
func (*GetLimitsByEntityIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{13}
}

func (x *GetLimitsByEntityIDResponse) GetLimits() []*models.Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

type CheckTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *CheckTransactionRequest) Reset() {
	*x = CheckTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionRequest) ProtoMessage() {}

func (x *CheckTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionRequest.ProtoReflect.Descriptor instead.
func (*CheckTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{14}
}

func (x *CheckTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CheckTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limits []*models.Limit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *CheckTransactionResponse) Reset() {
	*x = CheckTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionResponse) ProtoMessage() {}

func (x *CheckTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionResponse.ProtoReflect.Descriptor instead.
func (*CheckTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{15}
}

func (x *CheckTransactionResponse) GetLimits() []*models.Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

type CheckTransactionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId string `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
}

func (x *CheckTransactionQuoteRequest) Reset() {
	*x = CheckTransactionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionQuoteRequest) ProtoMessage() {}

func (x *CheckTransactionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionQuoteRequest.ProtoReflect.Descriptor instead.
func (*CheckTransactionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{16}
}

func (x *CheckTransactionQuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

type CheckTransactionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limits []*models.Limit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *CheckTransactionQuoteResponse) Reset() {
	*x = CheckTransactionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_limits_limits_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionQuoteResponse) ProtoMessage() {}

func (x *CheckTransactionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_limits_limits_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionQuoteResponse.ProtoReflect.Descriptor instead.
func (*CheckTransactionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_limits_limits_proto_rawDescGZIP(), []int{17}
}

func (x *CheckTransactionQuoteResponse) GetLimits() []*models.Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

var File_kappa_services_limits_limits_proto protoreflect.FileDescriptor

var file_kappa_services_limits_limits_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x1f, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x25,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x39, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x69, 0x63,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x3b,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x46, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x22, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x42,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x43,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x32, 0x9e, 0x06, 0x0a, 0x0d, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x46, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x22,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61,
	0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_limits_limits_proto_rawDescOnce sync.Once
	file_kappa_services_limits_limits_proto_rawDescData = file_kappa_services_limits_limits_proto_rawDesc
)

func file_kappa_services_limits_limits_proto_rawDescGZIP() []byte {
	file_kappa_services_limits_limits_proto_rawDescOnce.Do(func() {
		file_kappa_services_limits_limits_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_limits_limits_proto_rawDescData)
	})
	return file_kappa_services_limits_limits_proto_rawDescData
}

var file_kappa_services_limits_limits_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_kappa_services_limits_limits_proto_goTypes = []interface{}{
	(*GetLimitByIDRequest)(nil),           // 0: limits.GetLimitByIDRequest
	(*GetLimitByIDResponse)(nil),          // 1: limits.GetLimitByIDResponse
	(*CreateLimitRequest)(nil),            // 2: limits.CreateLimitRequest
	(*CreateLimitResponse)(nil),           // 3: limits.CreateLimitResponse
	(*UpdateLimitRequest)(nil),            // 4: limits.UpdateLimitRequest
	(*UpdateLimitResponse)(nil),           // 5: limits.UpdateLimitResponse
	(*DeleteLimitRequest)(nil),            // 6: limits.DeleteLimitRequest
	(*DeleteLimitResponse)(nil),           // 7: limits.DeleteLimitResponse
	(*GetDefaultLimitsRequest)(nil),       // 8: limits.GetDefaultLimitsRequest
	(*GetDefaultLimitsResponse)(nil),      // 9: limits.GetDefaultLimitsResponse
	(*CreateLimitsForEntityRequest)(nil),  // 10: limits.CreateLimitsForEntityRequest
	(*CreateLimitsForEntityResponse)(nil), // 11: limits.CreateLimitsForEntityResponse
	(*GetLimitsByEntityIDRequest)(nil),    // 12: limits.GetLimitsByEntityIDRequest
	(*GetLimitsByEntityIDResponse)(nil),   // 13: limits.GetLimitsByEntityIDResponse
	(*CheckTransactionRequest)(nil),       // 14: limits.CheckTransactionRequest
	(*CheckTransactionResponse)(nil),      // 15: limits.CheckTransactionResponse
	(*CheckTransactionQuoteRequest)(nil),  // 16: limits.CheckTransactionQuoteRequest
	(*CheckTransactionQuoteResponse)(nil), // 17: limits.CheckTransactionQuoteResponse
	(*models.Limit)(nil),                  // 18: kappa.Limit
	(models.EntityType)(0),                // 19: kappa.EntityType
	(*models.DefaultLimit)(nil),           // 20: kappa.DefaultLimit
	(*models.LimitsFilters)(nil),          // 21: kappa.LimitsFilters
}
var file_kappa_services_limits_limits_proto_depIdxs = []int32{
	18, // 0: limits.GetLimitByIDResponse.limit:type_name -> kappa.Limit
	18, // 1: limits.CreateLimitRequest.limit:type_name -> kappa.Limit
	18, // 2: limits.UpdateLimitRequest.limit:type_name -> kappa.Limit
	18, // 3: limits.UpdateLimitResponse.limit:type_name -> kappa.Limit
	19, // 4: limits.GetDefaultLimitsRequest.entity_type:type_name -> kappa.EntityType
	20, // 5: limits.GetDefaultLimitsResponse.default_limits:type_name -> kappa.DefaultLimit
	18, // 6: limits.CreateLimitsForEntityResponse.limits:type_name -> kappa.Limit
	21, // 7: limits.GetLimitsByEntityIDRequest.filters:type_name -> kappa.LimitsFilters
	18, // 8: limits.GetLimitsByEntityIDResponse.limits:type_name -> kappa.Limit
	18, // 9: limits.CheckTransactionResponse.limits:type_name -> kappa.Limit
	18, // 10: limits.CheckTransactionQuoteResponse.limits:type_name -> kappa.Limit
	0,  // 11: limits.LimitsService.GetLimitByID:input_type -> limits.GetLimitByIDRequest
	2,  // 12: limits.LimitsService.CreateLimit:input_type -> limits.CreateLimitRequest
	4,  // 13: limits.LimitsService.UpdateLimit:input_type -> limits.UpdateLimitRequest
	6,  // 14: limits.LimitsService.DeleteLimit:input_type -> limits.DeleteLimitRequest
	8,  // 15: limits.LimitsService.GetDefaultLimits:input_type -> limits.GetDefaultLimitsRequest
	10, // 16: limits.LimitsService.CreateLimitsForEntity:input_type -> limits.CreateLimitsForEntityRequest
	12, // 17: limits.LimitsService.GetLimitsByEntityID:input_type -> limits.GetLimitsByEntityIDRequest
	14, // 18: limits.LimitsService.CheckTransaction:input_type -> limits.CheckTransactionRequest
	16, // 19: limits.LimitsService.CheckTransactionQuote:input_type -> limits.CheckTransactionQuoteRequest
	1,  // 20: limits.LimitsService.GetLimitByID:output_type -> limits.GetLimitByIDResponse
	3,  // 21: limits.LimitsService.CreateLimit:output_type -> limits.CreateLimitResponse
	5,  // 22: limits.LimitsService.UpdateLimit:output_type -> limits.UpdateLimitResponse
	7,  // 23: limits.LimitsService.DeleteLimit:output_type -> limits.DeleteLimitResponse
	9,  // 24: limits.LimitsService.GetDefaultLimits:output_type -> limits.GetDefaultLimitsResponse
	11, // 25: limits.LimitsService.CreateLimitsForEntity:output_type -> limits.CreateLimitsForEntityResponse
	13, // 26: limits.LimitsService.GetLimitsByEntityID:output_type -> limits.GetLimitsByEntityIDResponse
	15, // 27: limits.LimitsService.CheckTransaction:output_type -> limits.CheckTransactionResponse
	17, // 28: limits.LimitsService.CheckTransactionQuote:output_type -> limits.CheckTransactionQuoteResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_kappa_services_limits_limits_proto_init() }
func file_kappa_services_limits_limits_proto_init() {
	if File_kappa_services_limits_limits_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_limits_limits_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLimitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefaultLimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitsForEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLimitsForEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitsByEntityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLimitsByEntityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_limits_limits_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_limits_limits_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_kappa_services_limits_limits_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_limits_limits_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_limits_limits_proto_goTypes,
		DependencyIndexes: file_kappa_services_limits_limits_proto_depIdxs,
		MessageInfos:      file_kappa_services_limits_limits_proto_msgTypes,
	}.Build()
	File_kappa_services_limits_limits_proto = out.File
	file_kappa_services_limits_limits_proto_rawDesc = nil
	file_kappa_services_limits_limits_proto_goTypes = nil
	file_kappa_services_limits_limits_proto_depIdxs = nil
}
