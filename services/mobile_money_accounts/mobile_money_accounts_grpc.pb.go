// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: kappa/services/mobile_money_accounts/mobile_money_accounts.proto

package mobile_money_accounts

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MobileMoneyAccountsServiceClient is the client API for MobileMoneyAccountsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MobileMoneyAccountsServiceClient interface {
	GetMobileMoneyAccountById(ctx context.Context, in *GetMobileMoneyAccountByIdRequest, opts ...grpc.CallOption) (*GetMobileMoneyAccountByIdResponse, error)
	CreateMobileMoneyAccount(ctx context.Context, in *CreateMobileMoneyAccountRequest, opts ...grpc.CallOption) (*CreateMobileMoneyAccountResponse, error)
	UpdateMobileMoneyAccount(ctx context.Context, in *UpdateMobileMoneyAccountRequest, opts ...grpc.CallOption) (*UpdateMobileMoneyAccountResponse, error)
	DeleteMobileMoneyAccount(ctx context.Context, in *DeleteMobileMoneyAccountRequest, opts ...grpc.CallOption) (*DeleteMobileMoneyAccountResponse, error)
}

type mobileMoneyAccountsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMobileMoneyAccountsServiceClient(cc grpc.ClientConnInterface) MobileMoneyAccountsServiceClient {
	return &mobileMoneyAccountsServiceClient{cc}
}

func (c *mobileMoneyAccountsServiceClient) GetMobileMoneyAccountById(ctx context.Context, in *GetMobileMoneyAccountByIdRequest, opts ...grpc.CallOption) (*GetMobileMoneyAccountByIdResponse, error) {
	out := new(GetMobileMoneyAccountByIdResponse)
	err := c.cc.Invoke(ctx, "/mobile_money_accounts.MobileMoneyAccountsService/GetMobileMoneyAccountById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileMoneyAccountsServiceClient) CreateMobileMoneyAccount(ctx context.Context, in *CreateMobileMoneyAccountRequest, opts ...grpc.CallOption) (*CreateMobileMoneyAccountResponse, error) {
	out := new(CreateMobileMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/mobile_money_accounts.MobileMoneyAccountsService/CreateMobileMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileMoneyAccountsServiceClient) UpdateMobileMoneyAccount(ctx context.Context, in *UpdateMobileMoneyAccountRequest, opts ...grpc.CallOption) (*UpdateMobileMoneyAccountResponse, error) {
	out := new(UpdateMobileMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/mobile_money_accounts.MobileMoneyAccountsService/UpdateMobileMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileMoneyAccountsServiceClient) DeleteMobileMoneyAccount(ctx context.Context, in *DeleteMobileMoneyAccountRequest, opts ...grpc.CallOption) (*DeleteMobileMoneyAccountResponse, error) {
	out := new(DeleteMobileMoneyAccountResponse)
	err := c.cc.Invoke(ctx, "/mobile_money_accounts.MobileMoneyAccountsService/DeleteMobileMoneyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MobileMoneyAccountsServiceServer is the server API for MobileMoneyAccountsService service.
// All implementations must embed UnimplementedMobileMoneyAccountsServiceServer
// for forward compatibility
type MobileMoneyAccountsServiceServer interface {
	GetMobileMoneyAccountById(context.Context, *GetMobileMoneyAccountByIdRequest) (*GetMobileMoneyAccountByIdResponse, error)
	CreateMobileMoneyAccount(context.Context, *CreateMobileMoneyAccountRequest) (*CreateMobileMoneyAccountResponse, error)
	UpdateMobileMoneyAccount(context.Context, *UpdateMobileMoneyAccountRequest) (*UpdateMobileMoneyAccountResponse, error)
	DeleteMobileMoneyAccount(context.Context, *DeleteMobileMoneyAccountRequest) (*DeleteMobileMoneyAccountResponse, error)
	mustEmbedUnimplementedMobileMoneyAccountsServiceServer()
}

// UnimplementedMobileMoneyAccountsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMobileMoneyAccountsServiceServer struct {
}

func (UnimplementedMobileMoneyAccountsServiceServer) GetMobileMoneyAccountById(context.Context, *GetMobileMoneyAccountByIdRequest) (*GetMobileMoneyAccountByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMobileMoneyAccountById not implemented")
}
func (UnimplementedMobileMoneyAccountsServiceServer) CreateMobileMoneyAccount(context.Context, *CreateMobileMoneyAccountRequest) (*CreateMobileMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMobileMoneyAccount not implemented")
}
func (UnimplementedMobileMoneyAccountsServiceServer) UpdateMobileMoneyAccount(context.Context, *UpdateMobileMoneyAccountRequest) (*UpdateMobileMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMobileMoneyAccount not implemented")
}
func (UnimplementedMobileMoneyAccountsServiceServer) DeleteMobileMoneyAccount(context.Context, *DeleteMobileMoneyAccountRequest) (*DeleteMobileMoneyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMobileMoneyAccount not implemented")
}
func (UnimplementedMobileMoneyAccountsServiceServer) mustEmbedUnimplementedMobileMoneyAccountsServiceServer() {
}

// UnsafeMobileMoneyAccountsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MobileMoneyAccountsServiceServer will
// result in compilation errors.
type UnsafeMobileMoneyAccountsServiceServer interface {
	mustEmbedUnimplementedMobileMoneyAccountsServiceServer()
}

func RegisterMobileMoneyAccountsServiceServer(s grpc.ServiceRegistrar, srv MobileMoneyAccountsServiceServer) {
	s.RegisterService(&MobileMoneyAccountsService_ServiceDesc, srv)
}

func _MobileMoneyAccountsService_GetMobileMoneyAccountById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMobileMoneyAccountByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileMoneyAccountsServiceServer).GetMobileMoneyAccountById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mobile_money_accounts.MobileMoneyAccountsService/GetMobileMoneyAccountById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileMoneyAccountsServiceServer).GetMobileMoneyAccountById(ctx, req.(*GetMobileMoneyAccountByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MobileMoneyAccountsService_CreateMobileMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMobileMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileMoneyAccountsServiceServer).CreateMobileMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mobile_money_accounts.MobileMoneyAccountsService/CreateMobileMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileMoneyAccountsServiceServer).CreateMobileMoneyAccount(ctx, req.(*CreateMobileMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MobileMoneyAccountsService_UpdateMobileMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMobileMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileMoneyAccountsServiceServer).UpdateMobileMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mobile_money_accounts.MobileMoneyAccountsService/UpdateMobileMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileMoneyAccountsServiceServer).UpdateMobileMoneyAccount(ctx, req.(*UpdateMobileMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MobileMoneyAccountsService_DeleteMobileMoneyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMobileMoneyAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileMoneyAccountsServiceServer).DeleteMobileMoneyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mobile_money_accounts.MobileMoneyAccountsService/DeleteMobileMoneyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileMoneyAccountsServiceServer).DeleteMobileMoneyAccount(ctx, req.(*DeleteMobileMoneyAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MobileMoneyAccountsService_ServiceDesc is the grpc.ServiceDesc for MobileMoneyAccountsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MobileMoneyAccountsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mobile_money_accounts.MobileMoneyAccountsService",
	HandlerType: (*MobileMoneyAccountsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMobileMoneyAccountById",
			Handler:    _MobileMoneyAccountsService_GetMobileMoneyAccountById_Handler,
		},
		{
			MethodName: "CreateMobileMoneyAccount",
			Handler:    _MobileMoneyAccountsService_CreateMobileMoneyAccount_Handler,
		},
		{
			MethodName: "UpdateMobileMoneyAccount",
			Handler:    _MobileMoneyAccountsService_UpdateMobileMoneyAccount_Handler,
		},
		{
			MethodName: "DeleteMobileMoneyAccount",
			Handler:    _MobileMoneyAccountsService_DeleteMobileMoneyAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kappa/services/mobile_money_accounts/mobile_money_accounts.proto",
}
