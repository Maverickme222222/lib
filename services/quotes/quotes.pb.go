// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Chris Nyaga</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/quotes/quotes.proto

package quotes

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTransactionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId          string         `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestinationId     string         `protobuf:"bytes,2,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	SourceAmount      *models.Amount `protobuf:"bytes,3,opt,name=source_amount,json=sourceAmount,proto3" json:"source_amount,omitempty"`
	DestinationAmount *models.Amount `protobuf:"bytes,4,opt,name=destination_amount,json=destinationAmount,proto3" json:"destination_amount,omitempty"`
}

func (x *CreateTransactionQuoteRequest) Reset() {
	*x = CreateTransactionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionQuoteRequest) ProtoMessage() {}

func (x *CreateTransactionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionQuoteRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTransactionQuoteRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *CreateTransactionQuoteRequest) GetDestinationId() string {
	if x != nil {
		return x.DestinationId
	}
	return ""
}

func (x *CreateTransactionQuoteRequest) GetSourceAmount() *models.Amount {
	if x != nil {
		return x.SourceAmount
	}
	return nil
}

func (x *CreateTransactionQuoteRequest) GetDestinationAmount() *models.Amount {
	if x != nil {
		return x.DestinationAmount
	}
	return nil
}

type CreateTransactionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionQuote *models.TransactionQuote `protobuf:"bytes,1,opt,name=transaction_quote,json=transactionQuote,proto3" json:"transaction_quote,omitempty"`
}

func (x *CreateTransactionQuoteResponse) Reset() {
	*x = CreateTransactionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionQuoteResponse) ProtoMessage() {}

func (x *CreateTransactionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionQuoteResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTransactionQuoteResponse) GetTransactionQuote() *models.TransactionQuote {
	if x != nil {
		return x.TransactionQuote
	}
	return nil
}

type AcceptTransactionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId    string  `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	LedgerName *string `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3,oneof" json:"ledger_name,omitempty"` // The ledger in which to create the resulting transaction
}

func (x *AcceptTransactionQuoteRequest) Reset() {
	*x = AcceptTransactionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTransactionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTransactionQuoteRequest) ProtoMessage() {}

func (x *AcceptTransactionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTransactionQuoteRequest.ProtoReflect.Descriptor instead.
func (*AcceptTransactionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptTransactionQuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *AcceptTransactionQuoteRequest) GetLedgerName() string {
	if x != nil && x.LedgerName != nil {
		return *x.LedgerName
	}
	return ""
}

type AcceptTransactionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionQuote *models.TransactionQuote `protobuf:"bytes,1,opt,name=transaction_quote,json=transactionQuote,proto3" json:"transaction_quote,omitempty"`
	TransactionId    string                   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *AcceptTransactionQuoteResponse) Reset() {
	*x = AcceptTransactionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTransactionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTransactionQuoteResponse) ProtoMessage() {}

func (x *AcceptTransactionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTransactionQuoteResponse.ProtoReflect.Descriptor instead.
func (*AcceptTransactionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptTransactionQuoteResponse) GetTransactionQuote() *models.TransactionQuote {
	if x != nil {
		return x.TransactionQuote
	}
	return nil
}

func (x *AcceptTransactionQuoteResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type RejectTransactionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId string `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
}

func (x *RejectTransactionQuoteRequest) Reset() {
	*x = RejectTransactionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionQuoteRequest) ProtoMessage() {}

func (x *RejectTransactionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionQuoteRequest.ProtoReflect.Descriptor instead.
func (*RejectTransactionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{4}
}

func (x *RejectTransactionQuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

type RejectTransactionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionQuote *models.TransactionQuote `protobuf:"bytes,1,opt,name=transaction_quote,json=transactionQuote,proto3" json:"transaction_quote,omitempty"`
}

func (x *RejectTransactionQuoteResponse) Reset() {
	*x = RejectTransactionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionQuoteResponse) ProtoMessage() {}

func (x *RejectTransactionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionQuoteResponse.ProtoReflect.Descriptor instead.
func (*RejectTransactionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{5}
}

func (x *RejectTransactionQuoteResponse) GetTransactionQuote() *models.TransactionQuote {
	if x != nil {
		return x.TransactionQuote
	}
	return nil
}

type GetTransactionQuoteByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId string `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
}

func (x *GetTransactionQuoteByIDRequest) Reset() {
	*x = GetTransactionQuoteByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionQuoteByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionQuoteByIDRequest) ProtoMessage() {}

func (x *GetTransactionQuoteByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionQuoteByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionQuoteByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{6}
}

func (x *GetTransactionQuoteByIDRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

type GetTransactionQuoteByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionQuote *models.TransactionQuote `protobuf:"bytes,1,opt,name=transaction_quote,json=transactionQuote,proto3" json:"transaction_quote,omitempty"`
}

func (x *GetTransactionQuoteByIDResponse) Reset() {
	*x = GetTransactionQuoteByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionQuoteByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionQuoteByIDResponse) ProtoMessage() {}

func (x *GetTransactionQuoteByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionQuoteByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionQuoteByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionQuoteByIDResponse) GetTransactionQuote() *models.TransactionQuote {
	if x != nil {
		return x.TransactionQuote
	}
	return nil
}

type CreateExecutionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId       string                 `protobuf:"bytes,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	ProviderId        string                 `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	TransactionId     string                 `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	SourceId          string                 `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestinationId     string                 `protobuf:"bytes,5,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	SourceAmount      *models.Amount         `protobuf:"bytes,6,opt,name=source_amount,json=sourceAmount,proto3" json:"source_amount,omitempty"`
	DestinationAmount *models.Amount         `protobuf:"bytes,7,opt,name=destination_amount,json=destinationAmount,proto3" json:"destination_amount,omitempty"`
	SubmittedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
}

func (x *CreateExecutionQuoteRequest) Reset() {
	*x = CreateExecutionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExecutionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExecutionQuoteRequest) ProtoMessage() {}

func (x *CreateExecutionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExecutionQuoteRequest.ProtoReflect.Descriptor instead.
func (*CreateExecutionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{8}
}

func (x *CreateExecutionQuoteRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *CreateExecutionQuoteRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *CreateExecutionQuoteRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CreateExecutionQuoteRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *CreateExecutionQuoteRequest) GetDestinationId() string {
	if x != nil {
		return x.DestinationId
	}
	return ""
}

func (x *CreateExecutionQuoteRequest) GetSourceAmount() *models.Amount {
	if x != nil {
		return x.SourceAmount
	}
	return nil
}

func (x *CreateExecutionQuoteRequest) GetDestinationAmount() *models.Amount {
	if x != nil {
		return x.DestinationAmount
	}
	return nil
}

func (x *CreateExecutionQuoteRequest) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

type CreateExecutionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionQuote *models.ExecutionQuote `protobuf:"bytes,1,opt,name=execution_quote,json=executionQuote,proto3" json:"execution_quote,omitempty"`
}

func (x *CreateExecutionQuoteResponse) Reset() {
	*x = CreateExecutionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExecutionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExecutionQuoteResponse) ProtoMessage() {}

func (x *CreateExecutionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExecutionQuoteResponse.ProtoReflect.Descriptor instead.
func (*CreateExecutionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{9}
}

func (x *CreateExecutionQuoteResponse) GetExecutionQuote() *models.ExecutionQuote {
	if x != nil {
		return x.ExecutionQuote
	}
	return nil
}

type AcceptExecutionQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId string `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
}

func (x *AcceptExecutionQuoteRequest) Reset() {
	*x = AcceptExecutionQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptExecutionQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptExecutionQuoteRequest) ProtoMessage() {}

func (x *AcceptExecutionQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptExecutionQuoteRequest.ProtoReflect.Descriptor instead.
func (*AcceptExecutionQuoteRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{10}
}

func (x *AcceptExecutionQuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

type AcceptExecutionQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionQuote *models.ExecutionQuote `protobuf:"bytes,1,opt,name=execution_quote,json=executionQuote,proto3" json:"execution_quote,omitempty"`
}

func (x *AcceptExecutionQuoteResponse) Reset() {
	*x = AcceptExecutionQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptExecutionQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptExecutionQuoteResponse) ProtoMessage() {}

func (x *AcceptExecutionQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptExecutionQuoteResponse.ProtoReflect.Descriptor instead.
func (*AcceptExecutionQuoteResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{11}
}

func (x *AcceptExecutionQuoteResponse) GetExecutionQuote() *models.ExecutionQuote {
	if x != nil {
		return x.ExecutionQuote
	}
	return nil
}

type GetExecutionQuoteByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteId string `protobuf:"bytes,1,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
}

func (x *GetExecutionQuoteByIDRequest) Reset() {
	*x = GetExecutionQuoteByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionQuoteByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionQuoteByIDRequest) ProtoMessage() {}

func (x *GetExecutionQuoteByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionQuoteByIDRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionQuoteByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{12}
}

func (x *GetExecutionQuoteByIDRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

type GetExecutionQuoteByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionQuote *models.ExecutionQuote `protobuf:"bytes,1,opt,name=execution_quote,json=executionQuote,proto3" json:"execution_quote,omitempty"`
}

func (x *GetExecutionQuoteByIDResponse) Reset() {
	*x = GetExecutionQuoteByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutionQuoteByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionQuoteByIDResponse) ProtoMessage() {}

func (x *GetExecutionQuoteByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionQuoteByIDResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionQuoteByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{13}
}

func (x *GetExecutionQuoteByIDResponse) GetExecutionQuote() *models.ExecutionQuote {
	if x != nil {
		return x.ExecutionQuote
	}
	return nil
}

type GetLatestAcceptedExecutionQuoteByTransactionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDRequest) Reset() {
	*x = GetLatestAcceptedExecutionQuoteByTransactionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestAcceptedExecutionQuoteByTransactionIDRequest) ProtoMessage() {}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestAcceptedExecutionQuoteByTransactionIDRequest.ProtoReflect.Descriptor instead.
func (*GetLatestAcceptedExecutionQuoteByTransactionIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{14}
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetLatestAcceptedExecutionQuoteByTransactionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionQuote *models.ExecutionQuote `protobuf:"bytes,1,opt,name=execution_quote,json=executionQuote,proto3" json:"execution_quote,omitempty"`
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDResponse) Reset() {
	*x = GetLatestAcceptedExecutionQuoteByTransactionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_quotes_quotes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestAcceptedExecutionQuoteByTransactionIDResponse) ProtoMessage() {}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_quotes_quotes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestAcceptedExecutionQuoteByTransactionIDResponse.ProtoReflect.Descriptor instead.
func (*GetLatestAcceptedExecutionQuoteByTransactionIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_quotes_quotes_proto_rawDescGZIP(), []int{15}
}

func (x *GetLatestAcceptedExecutionQuoteByTransactionIDResponse) GetExecutionQuote() *models.ExecutionQuote {
	if x != nil {
		return x.ExecutionQuote
	}
	return nil
}

var File_kappa_services_quotes_quotes_proto protoreflect.FileDescriptor

var file_kappa_services_quotes_quotes_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x1f, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd5, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x12, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x22, 0x70, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1d, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x66,
	0x0a, 0x1e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0xfd, 0x02, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x1b,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x22, 0x5e, 0x0a, 0x35, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x78, 0x0a, 0x36, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x32, 0x93, 0x07, 0x0a,
	0x0c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a,
	0x16, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x12, 0x25, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x24, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xaf, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x3d, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_quotes_quotes_proto_rawDescOnce sync.Once
	file_kappa_services_quotes_quotes_proto_rawDescData = file_kappa_services_quotes_quotes_proto_rawDesc
)

func file_kappa_services_quotes_quotes_proto_rawDescGZIP() []byte {
	file_kappa_services_quotes_quotes_proto_rawDescOnce.Do(func() {
		file_kappa_services_quotes_quotes_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_quotes_quotes_proto_rawDescData)
	})
	return file_kappa_services_quotes_quotes_proto_rawDescData
}

var file_kappa_services_quotes_quotes_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_kappa_services_quotes_quotes_proto_goTypes = []interface{}{
	(*CreateTransactionQuoteRequest)(nil),                          // 0: quotes.CreateTransactionQuoteRequest
	(*CreateTransactionQuoteResponse)(nil),                         // 1: quotes.CreateTransactionQuoteResponse
	(*AcceptTransactionQuoteRequest)(nil),                          // 2: quotes.AcceptTransactionQuoteRequest
	(*AcceptTransactionQuoteResponse)(nil),                         // 3: quotes.AcceptTransactionQuoteResponse
	(*RejectTransactionQuoteRequest)(nil),                          // 4: quotes.RejectTransactionQuoteRequest
	(*RejectTransactionQuoteResponse)(nil),                         // 5: quotes.RejectTransactionQuoteResponse
	(*GetTransactionQuoteByIDRequest)(nil),                         // 6: quotes.GetTransactionQuoteByIDRequest
	(*GetTransactionQuoteByIDResponse)(nil),                        // 7: quotes.GetTransactionQuoteByIDResponse
	(*CreateExecutionQuoteRequest)(nil),                            // 8: quotes.CreateExecutionQuoteRequest
	(*CreateExecutionQuoteResponse)(nil),                           // 9: quotes.CreateExecutionQuoteResponse
	(*AcceptExecutionQuoteRequest)(nil),                            // 10: quotes.AcceptExecutionQuoteRequest
	(*AcceptExecutionQuoteResponse)(nil),                           // 11: quotes.AcceptExecutionQuoteResponse
	(*GetExecutionQuoteByIDRequest)(nil),                           // 12: quotes.GetExecutionQuoteByIDRequest
	(*GetExecutionQuoteByIDResponse)(nil),                          // 13: quotes.GetExecutionQuoteByIDResponse
	(*GetLatestAcceptedExecutionQuoteByTransactionIDRequest)(nil),  // 14: quotes.GetLatestAcceptedExecutionQuoteByTransactionIDRequest
	(*GetLatestAcceptedExecutionQuoteByTransactionIDResponse)(nil), // 15: quotes.GetLatestAcceptedExecutionQuoteByTransactionIDResponse
	(*models.Amount)(nil),                                          // 16: kappa.Amount
	(*models.TransactionQuote)(nil),                                // 17: kappa.TransactionQuote
	(*timestamppb.Timestamp)(nil),                                  // 18: google.protobuf.Timestamp
	(*models.ExecutionQuote)(nil),                                  // 19: kappa.ExecutionQuote
}
var file_kappa_services_quotes_quotes_proto_depIdxs = []int32{
	16, // 0: quotes.CreateTransactionQuoteRequest.source_amount:type_name -> kappa.Amount
	16, // 1: quotes.CreateTransactionQuoteRequest.destination_amount:type_name -> kappa.Amount
	17, // 2: quotes.CreateTransactionQuoteResponse.transaction_quote:type_name -> kappa.TransactionQuote
	17, // 3: quotes.AcceptTransactionQuoteResponse.transaction_quote:type_name -> kappa.TransactionQuote
	17, // 4: quotes.RejectTransactionQuoteResponse.transaction_quote:type_name -> kappa.TransactionQuote
	17, // 5: quotes.GetTransactionQuoteByIDResponse.transaction_quote:type_name -> kappa.TransactionQuote
	16, // 6: quotes.CreateExecutionQuoteRequest.source_amount:type_name -> kappa.Amount
	16, // 7: quotes.CreateExecutionQuoteRequest.destination_amount:type_name -> kappa.Amount
	18, // 8: quotes.CreateExecutionQuoteRequest.submitted_at:type_name -> google.protobuf.Timestamp
	19, // 9: quotes.CreateExecutionQuoteResponse.execution_quote:type_name -> kappa.ExecutionQuote
	19, // 10: quotes.AcceptExecutionQuoteResponse.execution_quote:type_name -> kappa.ExecutionQuote
	19, // 11: quotes.GetExecutionQuoteByIDResponse.execution_quote:type_name -> kappa.ExecutionQuote
	19, // 12: quotes.GetLatestAcceptedExecutionQuoteByTransactionIDResponse.execution_quote:type_name -> kappa.ExecutionQuote
	2,  // 13: quotes.QuoteService.AcceptTransactionQuote:input_type -> quotes.AcceptTransactionQuoteRequest
	4,  // 14: quotes.QuoteService.RejectTransactionQuote:input_type -> quotes.RejectTransactionQuoteRequest
	6,  // 15: quotes.QuoteService.GetTransactionQuoteByID:input_type -> quotes.GetTransactionQuoteByIDRequest
	0,  // 16: quotes.QuoteService.CreateTransactionQuote:input_type -> quotes.CreateTransactionQuoteRequest
	10, // 17: quotes.QuoteService.AcceptExecutionQuote:input_type -> quotes.AcceptExecutionQuoteRequest
	12, // 18: quotes.QuoteService.GetExecutionQuoteByID:input_type -> quotes.GetExecutionQuoteByIDRequest
	8,  // 19: quotes.QuoteService.CreateExecutionQuote:input_type -> quotes.CreateExecutionQuoteRequest
	14, // 20: quotes.QuoteService.GetLatestAcceptedExecutionQuoteByTransactionID:input_type -> quotes.GetLatestAcceptedExecutionQuoteByTransactionIDRequest
	3,  // 21: quotes.QuoteService.AcceptTransactionQuote:output_type -> quotes.AcceptTransactionQuoteResponse
	5,  // 22: quotes.QuoteService.RejectTransactionQuote:output_type -> quotes.RejectTransactionQuoteResponse
	7,  // 23: quotes.QuoteService.GetTransactionQuoteByID:output_type -> quotes.GetTransactionQuoteByIDResponse
	1,  // 24: quotes.QuoteService.CreateTransactionQuote:output_type -> quotes.CreateTransactionQuoteResponse
	11, // 25: quotes.QuoteService.AcceptExecutionQuote:output_type -> quotes.AcceptExecutionQuoteResponse
	13, // 26: quotes.QuoteService.GetExecutionQuoteByID:output_type -> quotes.GetExecutionQuoteByIDResponse
	9,  // 27: quotes.QuoteService.CreateExecutionQuote:output_type -> quotes.CreateExecutionQuoteResponse
	15, // 28: quotes.QuoteService.GetLatestAcceptedExecutionQuoteByTransactionID:output_type -> quotes.GetLatestAcceptedExecutionQuoteByTransactionIDResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_kappa_services_quotes_quotes_proto_init() }
func file_kappa_services_quotes_quotes_proto_init() {
	if File_kappa_services_quotes_quotes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_quotes_quotes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTransactionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTransactionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionQuoteByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionQuoteByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExecutionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExecutionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptExecutionQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptExecutionQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionQuoteByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutionQuoteByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestAcceptedExecutionQuoteByTransactionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_quotes_quotes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestAcceptedExecutionQuoteByTransactionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_quotes_quotes_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_quotes_quotes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_quotes_quotes_proto_goTypes,
		DependencyIndexes: file_kappa_services_quotes_quotes_proto_depIdxs,
		MessageInfos:      file_kappa_services_quotes_quotes_proto_msgTypes,
	}.Build()
	File_kappa_services_quotes_quotes_proto = out.File
	file_kappa_services_quotes_quotes_proto_rawDesc = nil
	file_kappa_services_quotes_quotes_proto_goTypes = nil
	file_kappa_services_quotes_quotes_proto_depIdxs = nil
}
