// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Shashank Agarwal</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/payment_gateway/payment_gateway.proto

package payment_gateway

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPaymentGatewayByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPaymentGatewayByNameRequest) Reset() {
	*x = GetPaymentGatewayByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayByNameRequest) ProtoMessage() {}

func (x *GetPaymentGatewayByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayByNameRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *GetPaymentGatewayByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPaymentGatewayByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGateway *models.PaymentGateway `protobuf:"bytes,1,opt,name=payment_gateway,json=paymentGateway,proto3" json:"payment_gateway,omitempty"`
}

func (x *GetPaymentGatewayByNameResponse) Reset() {
	*x = GetPaymentGatewayByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayByNameResponse) ProtoMessage() {}

func (x *GetPaymentGatewayByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayByNameResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayByNameResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *GetPaymentGatewayByNameResponse) GetPaymentGateway() *models.PaymentGateway {
	if x != nil {
		return x.PaymentGateway
	}
	return nil
}

type GetPaymentGatewayForSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *models.Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *GetPaymentGatewayForSourceRequest) Reset() {
	*x = GetPaymentGatewayForSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayForSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayForSourceRequest) ProtoMessage() {}

func (x *GetPaymentGatewayForSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayForSourceRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayForSourceRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *GetPaymentGatewayForSourceRequest) GetSource() *models.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type GetPaymentGatewayForSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGateway *models.PaymentGateway `protobuf:"bytes,1,opt,name=payment_gateway,json=paymentGateway,proto3" json:"payment_gateway,omitempty"`
}

func (x *GetPaymentGatewayForSourceResponse) Reset() {
	*x = GetPaymentGatewayForSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayForSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayForSourceResponse) ProtoMessage() {}

func (x *GetPaymentGatewayForSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayForSourceResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayForSourceResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *GetPaymentGatewayForSourceResponse) GetPaymentGateway() *models.PaymentGateway {
	if x != nil {
		return x.PaymentGateway
	}
	return nil
}

type GetPaymentGatewayForDestinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *models.Destination `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *GetPaymentGatewayForDestinationRequest) Reset() {
	*x = GetPaymentGatewayForDestinationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayForDestinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayForDestinationRequest) ProtoMessage() {}

func (x *GetPaymentGatewayForDestinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayForDestinationRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayForDestinationRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *GetPaymentGatewayForDestinationRequest) GetDestination() *models.Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

type GetPaymentGatewayForDestinationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGateway *models.PaymentGateway `protobuf:"bytes,1,opt,name=payment_gateway,json=paymentGateway,proto3" json:"payment_gateway,omitempty"`
}

func (x *GetPaymentGatewayForDestinationResponse) Reset() {
	*x = GetPaymentGatewayForDestinationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayForDestinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayForDestinationResponse) ProtoMessage() {}

func (x *GetPaymentGatewayForDestinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayForDestinationResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayForDestinationResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *GetPaymentGatewayForDestinationResponse) GetPaymentGateway() *models.PaymentGateway {
	if x != nil {
		return x.PaymentGateway
	}
	return nil
}

type GetPaymentGatewayFeeScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGateway *models.PaymentGateway  `protobuf:"bytes,1,opt,name=payment_gateway,json=paymentGateway,proto3" json:"payment_gateway,omitempty"`
	Direction      models.PaymentDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=kappa.PaymentDirection" json:"direction,omitempty"`
	Country        *models.Country         `protobuf:"bytes,3,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Currency       *models.Currency        `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
}

func (x *GetPaymentGatewayFeeScheduleRequest) Reset() {
	*x = GetPaymentGatewayFeeScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayFeeScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayFeeScheduleRequest) ProtoMessage() {}

func (x *GetPaymentGatewayFeeScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayFeeScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayFeeScheduleRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaymentGatewayFeeScheduleRequest) GetPaymentGateway() *models.PaymentGateway {
	if x != nil {
		return x.PaymentGateway
	}
	return nil
}

func (x *GetPaymentGatewayFeeScheduleRequest) GetDirection() models.PaymentDirection {
	if x != nil {
		return x.Direction
	}
	return models.PaymentDirection(0)
}

func (x *GetPaymentGatewayFeeScheduleRequest) GetCountry() *models.Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *GetPaymentGatewayFeeScheduleRequest) GetCurrency() *models.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type GetPaymentGatewayFeeScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeSchedule *models.PaymentGatewayFeeSchedule `protobuf:"bytes,1,opt,name=fee_schedule,json=feeSchedule,proto3" json:"fee_schedule,omitempty"`
}

func (x *GetPaymentGatewayFeeScheduleResponse) Reset() {
	*x = GetPaymentGatewayFeeScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayFeeScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayFeeScheduleResponse) ProtoMessage() {}

func (x *GetPaymentGatewayFeeScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayFeeScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayFeeScheduleResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *GetPaymentGatewayFeeScheduleResponse) GetFeeSchedule() *models.PaymentGatewayFeeSchedule {
	if x != nil {
		return x.FeeSchedule
	}
	return nil
}

type GetBankAccountForPaymentGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
}

func (x *GetBankAccountForPaymentGatewayRequest) Reset() {
	*x = GetBankAccountForPaymentGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankAccountForPaymentGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountForPaymentGatewayRequest) ProtoMessage() {}

func (x *GetBankAccountForPaymentGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountForPaymentGatewayRequest.ProtoReflect.Descriptor instead.
func (*GetBankAccountForPaymentGatewayRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *GetBankAccountForPaymentGatewayRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type GetBankAccountForPaymentGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccount *models.BankAccount `protobuf:"bytes,1,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
}

func (x *GetBankAccountForPaymentGatewayResponse) Reset() {
	*x = GetBankAccountForPaymentGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBankAccountForPaymentGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountForPaymentGatewayResponse) ProtoMessage() {}

func (x *GetBankAccountForPaymentGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountForPaymentGatewayResponse.ProtoReflect.Descriptor instead.
func (*GetBankAccountForPaymentGatewayResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *GetBankAccountForPaymentGatewayResponse) GetBankAccount() *models.BankAccount {
	if x != nil {
		return x.BankAccount
	}
	return nil
}

type GetPaymentGatewayByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
}

func (x *GetPaymentGatewayByIDRequest) Reset() {
	*x = GetPaymentGatewayByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayByIDRequest) ProtoMessage() {}

func (x *GetPaymentGatewayByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *GetPaymentGatewayByIDRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type GetPaymentGatewayByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGateway *models.PaymentGateway `protobuf:"bytes,1,opt,name=payment_gateway,json=paymentGateway,proto3" json:"payment_gateway,omitempty"`
}

func (x *GetPaymentGatewayByIDResponse) Reset() {
	*x = GetPaymentGatewayByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayByIDResponse) ProtoMessage() {}

func (x *GetPaymentGatewayByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *GetPaymentGatewayByIDResponse) GetPaymentGateway() *models.PaymentGateway {
	if x != nil {
		return x.PaymentGateway
	}
	return nil
}

type GetPaymentGatewayProcessingScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGatewayId string                  `protobuf:"bytes,1,opt,name=payment_gateway_id,json=paymentGatewayId,proto3" json:"payment_gateway_id,omitempty"`
	Direction        models.PaymentDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=kappa.PaymentDirection" json:"direction,omitempty"`
	CountryIsoCode   *string                 `protobuf:"bytes,3,opt,name=country_iso_code,json=countryIsoCode,proto3,oneof" json:"country_iso_code,omitempty"`
	CurrencyIsoCode  *string                 `protobuf:"bytes,4,opt,name=currency_iso_code,json=currencyIsoCode,proto3,oneof" json:"currency_iso_code,omitempty"`
}

func (x *GetPaymentGatewayProcessingScheduleRequest) Reset() {
	*x = GetPaymentGatewayProcessingScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayProcessingScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayProcessingScheduleRequest) ProtoMessage() {}

func (x *GetPaymentGatewayProcessingScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayProcessingScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayProcessingScheduleRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *GetPaymentGatewayProcessingScheduleRequest) GetPaymentGatewayId() string {
	if x != nil {
		return x.PaymentGatewayId
	}
	return ""
}

func (x *GetPaymentGatewayProcessingScheduleRequest) GetDirection() models.PaymentDirection {
	if x != nil {
		return x.Direction
	}
	return models.PaymentDirection(0)
}

func (x *GetPaymentGatewayProcessingScheduleRequest) GetCountryIsoCode() string {
	if x != nil && x.CountryIsoCode != nil {
		return *x.CountryIsoCode
	}
	return ""
}

func (x *GetPaymentGatewayProcessingScheduleRequest) GetCurrencyIsoCode() string {
	if x != nil && x.CurrencyIsoCode != nil {
		return *x.CurrencyIsoCode
	}
	return ""
}

type GetPaymentGatewayProcessingScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schedule:
	//	*GetPaymentGatewayProcessingScheduleResponse_BatchSchedule
	//	*GetPaymentGatewayProcessingScheduleResponse_ContinuousSchedule
	Schedule isGetPaymentGatewayProcessingScheduleResponse_Schedule `protobuf_oneof:"schedule"`
}

func (x *GetPaymentGatewayProcessingScheduleResponse) Reset() {
	*x = GetPaymentGatewayProcessingScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGatewayProcessingScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGatewayProcessingScheduleResponse) ProtoMessage() {}

func (x *GetPaymentGatewayProcessingScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGatewayProcessingScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGatewayProcessingScheduleResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP(), []int{13}
}

func (m *GetPaymentGatewayProcessingScheduleResponse) GetSchedule() isGetPaymentGatewayProcessingScheduleResponse_Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (x *GetPaymentGatewayProcessingScheduleResponse) GetBatchSchedule() *models.PaymentGatewayBatchProcessingSchedule {
	if x, ok := x.GetSchedule().(*GetPaymentGatewayProcessingScheduleResponse_BatchSchedule); ok {
		return x.BatchSchedule
	}
	return nil
}

func (x *GetPaymentGatewayProcessingScheduleResponse) GetContinuousSchedule() *models.PaymentGatewayContinuousProcessingSchedule {
	if x, ok := x.GetSchedule().(*GetPaymentGatewayProcessingScheduleResponse_ContinuousSchedule); ok {
		return x.ContinuousSchedule
	}
	return nil
}

type isGetPaymentGatewayProcessingScheduleResponse_Schedule interface {
	isGetPaymentGatewayProcessingScheduleResponse_Schedule()
}

type GetPaymentGatewayProcessingScheduleResponse_BatchSchedule struct {
	BatchSchedule *models.PaymentGatewayBatchProcessingSchedule `protobuf:"bytes,1,opt,name=batch_schedule,json=batchSchedule,proto3,oneof"`
}

type GetPaymentGatewayProcessingScheduleResponse_ContinuousSchedule struct {
	ContinuousSchedule *models.PaymentGatewayContinuousProcessingSchedule `protobuf:"bytes,2,opt,name=continuous_schedule,json=continuousSchedule,proto3,oneof"`
}

func (*GetPaymentGatewayProcessingScheduleResponse_BatchSchedule) isGetPaymentGatewayProcessingScheduleResponse_Schedule() {
}

func (*GetPaymentGatewayProcessingScheduleResponse_ContinuousSchedule) isGetPaymentGatewayProcessingScheduleResponse_Schedule() {
}

var File_kappa_services_payment_gateway_payment_gateway_proto protoreflect.FileDescriptor

var file_kappa_services_payment_gateway_payment_gateway_proto_rawDesc = []byte{
	0x0a, 0x34, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x1a, 0x29, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x61, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x4a, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x64, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x5e, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x22, 0x96, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x48, 0x01, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x6b, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x66, 0x65, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49,
	0x64, 0x22, 0x60, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x22, 0x9c, 0x02, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x73, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x73, 0x6f,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x32, 0x82, 0x08, 0x0a, 0x15,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x96, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x46, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x65,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x65, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x46, 0x65, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x37, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x3b, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_payment_gateway_payment_gateway_proto_rawDescOnce sync.Once
	file_kappa_services_payment_gateway_payment_gateway_proto_rawDescData = file_kappa_services_payment_gateway_payment_gateway_proto_rawDesc
)

func file_kappa_services_payment_gateway_payment_gateway_proto_rawDescGZIP() []byte {
	file_kappa_services_payment_gateway_payment_gateway_proto_rawDescOnce.Do(func() {
		file_kappa_services_payment_gateway_payment_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_payment_gateway_payment_gateway_proto_rawDescData)
	})
	return file_kappa_services_payment_gateway_payment_gateway_proto_rawDescData
}

var file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kappa_services_payment_gateway_payment_gateway_proto_goTypes = []interface{}{
	(*GetPaymentGatewayByNameRequest)(nil),                    // 0: payment_gateway.GetPaymentGatewayByNameRequest
	(*GetPaymentGatewayByNameResponse)(nil),                   // 1: payment_gateway.GetPaymentGatewayByNameResponse
	(*GetPaymentGatewayForSourceRequest)(nil),                 // 2: payment_gateway.GetPaymentGatewayForSourceRequest
	(*GetPaymentGatewayForSourceResponse)(nil),                // 3: payment_gateway.GetPaymentGatewayForSourceResponse
	(*GetPaymentGatewayForDestinationRequest)(nil),            // 4: payment_gateway.GetPaymentGatewayForDestinationRequest
	(*GetPaymentGatewayForDestinationResponse)(nil),           // 5: payment_gateway.GetPaymentGatewayForDestinationResponse
	(*GetPaymentGatewayFeeScheduleRequest)(nil),               // 6: payment_gateway.GetPaymentGatewayFeeScheduleRequest
	(*GetPaymentGatewayFeeScheduleResponse)(nil),              // 7: payment_gateway.GetPaymentGatewayFeeScheduleResponse
	(*GetBankAccountForPaymentGatewayRequest)(nil),            // 8: payment_gateway.GetBankAccountForPaymentGatewayRequest
	(*GetBankAccountForPaymentGatewayResponse)(nil),           // 9: payment_gateway.GetBankAccountForPaymentGatewayResponse
	(*GetPaymentGatewayByIDRequest)(nil),                      // 10: payment_gateway.GetPaymentGatewayByIDRequest
	(*GetPaymentGatewayByIDResponse)(nil),                     // 11: payment_gateway.GetPaymentGatewayByIDResponse
	(*GetPaymentGatewayProcessingScheduleRequest)(nil),        // 12: payment_gateway.GetPaymentGatewayProcessingScheduleRequest
	(*GetPaymentGatewayProcessingScheduleResponse)(nil),       // 13: payment_gateway.GetPaymentGatewayProcessingScheduleResponse
	(*models.PaymentGateway)(nil),                             // 14: kappa.PaymentGateway
	(*models.Source)(nil),                                     // 15: kappa.Source
	(*models.Destination)(nil),                                // 16: kappa.Destination
	(models.PaymentDirection)(0),                              // 17: kappa.PaymentDirection
	(*models.Country)(nil),                                    // 18: kappa.Country
	(*models.Currency)(nil),                                   // 19: kappa.Currency
	(*models.PaymentGatewayFeeSchedule)(nil),                  // 20: kappa.PaymentGatewayFeeSchedule
	(*models.BankAccount)(nil),                                // 21: kappa.BankAccount
	(*models.PaymentGatewayBatchProcessingSchedule)(nil),      // 22: kappa.PaymentGatewayBatchProcessingSchedule
	(*models.PaymentGatewayContinuousProcessingSchedule)(nil), // 23: kappa.PaymentGatewayContinuousProcessingSchedule
}
var file_kappa_services_payment_gateway_payment_gateway_proto_depIdxs = []int32{
	14, // 0: payment_gateway.GetPaymentGatewayByNameResponse.payment_gateway:type_name -> kappa.PaymentGateway
	15, // 1: payment_gateway.GetPaymentGatewayForSourceRequest.source:type_name -> kappa.Source
	14, // 2: payment_gateway.GetPaymentGatewayForSourceResponse.payment_gateway:type_name -> kappa.PaymentGateway
	16, // 3: payment_gateway.GetPaymentGatewayForDestinationRequest.destination:type_name -> kappa.Destination
	14, // 4: payment_gateway.GetPaymentGatewayForDestinationResponse.payment_gateway:type_name -> kappa.PaymentGateway
	14, // 5: payment_gateway.GetPaymentGatewayFeeScheduleRequest.payment_gateway:type_name -> kappa.PaymentGateway
	17, // 6: payment_gateway.GetPaymentGatewayFeeScheduleRequest.direction:type_name -> kappa.PaymentDirection
	18, // 7: payment_gateway.GetPaymentGatewayFeeScheduleRequest.country:type_name -> kappa.Country
	19, // 8: payment_gateway.GetPaymentGatewayFeeScheduleRequest.currency:type_name -> kappa.Currency
	20, // 9: payment_gateway.GetPaymentGatewayFeeScheduleResponse.fee_schedule:type_name -> kappa.PaymentGatewayFeeSchedule
	21, // 10: payment_gateway.GetBankAccountForPaymentGatewayResponse.bank_account:type_name -> kappa.BankAccount
	14, // 11: payment_gateway.GetPaymentGatewayByIDResponse.payment_gateway:type_name -> kappa.PaymentGateway
	17, // 12: payment_gateway.GetPaymentGatewayProcessingScheduleRequest.direction:type_name -> kappa.PaymentDirection
	22, // 13: payment_gateway.GetPaymentGatewayProcessingScheduleResponse.batch_schedule:type_name -> kappa.PaymentGatewayBatchProcessingSchedule
	23, // 14: payment_gateway.GetPaymentGatewayProcessingScheduleResponse.continuous_schedule:type_name -> kappa.PaymentGatewayContinuousProcessingSchedule
	0,  // 15: payment_gateway.PaymentGatewayService.GetPaymentGatewayByName:input_type -> payment_gateway.GetPaymentGatewayByNameRequest
	2,  // 16: payment_gateway.PaymentGatewayService.GetPaymentGatewayForSource:input_type -> payment_gateway.GetPaymentGatewayForSourceRequest
	4,  // 17: payment_gateway.PaymentGatewayService.GetPaymentGatewayForDestination:input_type -> payment_gateway.GetPaymentGatewayForDestinationRequest
	6,  // 18: payment_gateway.PaymentGatewayService.GetPaymentGatewayFeeSchedule:input_type -> payment_gateway.GetPaymentGatewayFeeScheduleRequest
	8,  // 19: payment_gateway.PaymentGatewayService.GetBankAccountForPaymentGateway:input_type -> payment_gateway.GetBankAccountForPaymentGatewayRequest
	10, // 20: payment_gateway.PaymentGatewayService.GetPaymentGatewayByID:input_type -> payment_gateway.GetPaymentGatewayByIDRequest
	12, // 21: payment_gateway.PaymentGatewayService.GetPaymentGatewayProcessingSchedule:input_type -> payment_gateway.GetPaymentGatewayProcessingScheduleRequest
	1,  // 22: payment_gateway.PaymentGatewayService.GetPaymentGatewayByName:output_type -> payment_gateway.GetPaymentGatewayByNameResponse
	3,  // 23: payment_gateway.PaymentGatewayService.GetPaymentGatewayForSource:output_type -> payment_gateway.GetPaymentGatewayForSourceResponse
	5,  // 24: payment_gateway.PaymentGatewayService.GetPaymentGatewayForDestination:output_type -> payment_gateway.GetPaymentGatewayForDestinationResponse
	7,  // 25: payment_gateway.PaymentGatewayService.GetPaymentGatewayFeeSchedule:output_type -> payment_gateway.GetPaymentGatewayFeeScheduleResponse
	9,  // 26: payment_gateway.PaymentGatewayService.GetBankAccountForPaymentGateway:output_type -> payment_gateway.GetBankAccountForPaymentGatewayResponse
	11, // 27: payment_gateway.PaymentGatewayService.GetPaymentGatewayByID:output_type -> payment_gateway.GetPaymentGatewayByIDResponse
	13, // 28: payment_gateway.PaymentGatewayService.GetPaymentGatewayProcessingSchedule:output_type -> payment_gateway.GetPaymentGatewayProcessingScheduleResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_kappa_services_payment_gateway_payment_gateway_proto_init() }
func file_kappa_services_payment_gateway_payment_gateway_proto_init() {
	if File_kappa_services_payment_gateway_payment_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayForSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayForSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayForDestinationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayForDestinationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayFeeScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayFeeScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankAccountForPaymentGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBankAccountForPaymentGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayProcessingScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGatewayProcessingScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetPaymentGatewayProcessingScheduleResponse_BatchSchedule)(nil),
		(*GetPaymentGatewayProcessingScheduleResponse_ContinuousSchedule)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_payment_gateway_payment_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_payment_gateway_payment_gateway_proto_goTypes,
		DependencyIndexes: file_kappa_services_payment_gateway_payment_gateway_proto_depIdxs,
		MessageInfos:      file_kappa_services_payment_gateway_payment_gateway_proto_msgTypes,
	}.Build()
	File_kappa_services_payment_gateway_payment_gateway_proto = out.File
	file_kappa_services_payment_gateway_payment_gateway_proto_rawDesc = nil
	file_kappa_services_payment_gateway_payment_gateway_proto_goTypes = nil
	file_kappa_services_payment_gateway_payment_gateway_proto_depIdxs = nil
}
