// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Chris Nyaga</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/ledger/ledger.proto

package ledger

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLedgerTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // The provided id will be used to query any n transactions posted with the value as the id or with a relationship to it
	LedgerName *string `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3,oneof" json:"ledger_name,omitempty"` // When specified, this value will be used instead of the default ledger name when making Proper API calls. Transactions returned will be those posted only to that ledger.
}

func (x *GetLedgerTransactionsRequest) Reset() {
	*x = GetLedgerTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerTransactionsRequest) ProtoMessage() {}

func (x *GetLedgerTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *GetLedgerTransactionsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetLedgerTransactionsRequest) GetLedgerName() string {
	if x != nil && x.LedgerName != nil {
		return *x.LedgerName
	}
	return ""
}

type GetLedgerTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerTransactions []*models.LedgerTransaction `protobuf:"bytes,1,rep,name=ledger_transactions,json=ledgerTransactions,proto3" json:"ledger_transactions,omitempty"`
}

func (x *GetLedgerTransactionsResponse) Reset() {
	*x = GetLedgerTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerTransactionsResponse) ProtoMessage() {}

func (x *GetLedgerTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *GetLedgerTransactionsResponse) GetLedgerTransactions() []*models.LedgerTransaction {
	if x != nil {
		return x.LedgerTransactions
	}
	return nil
}

type CreateLedgerTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerTransactions []*models.LedgerTransaction `protobuf:"bytes,1,rep,name=ledger_transactions,json=ledgerTransactions,proto3" json:"ledger_transactions,omitempty"`
	LedgerName         *string                     `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3,oneof" json:"ledger_name,omitempty"` // When specified, this value will be used instead of the default ledger name when making Proper API calls. Transactions created will only affect accounts for that ledger.
}

func (x *CreateLedgerTransactionsRequest) Reset() {
	*x = CreateLedgerTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLedgerTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLedgerTransactionsRequest) ProtoMessage() {}

func (x *CreateLedgerTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLedgerTransactionsRequest.ProtoReflect.Descriptor instead.
func (*CreateLedgerTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLedgerTransactionsRequest) GetLedgerTransactions() []*models.LedgerTransaction {
	if x != nil {
		return x.LedgerTransactions
	}
	return nil
}

func (x *CreateLedgerTransactionsRequest) GetLedgerName() string {
	if x != nil && x.LedgerName != nil {
		return *x.LedgerName
	}
	return ""
}

type CreateLedgerTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerTransactions []*models.LedgerTransaction `protobuf:"bytes,1,rep,name=ledger_transactions,json=ledgerTransactions,proto3" json:"ledger_transactions,omitempty"`
}

func (x *CreateLedgerTransactionsResponse) Reset() {
	*x = CreateLedgerTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLedgerTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLedgerTransactionsResponse) ProtoMessage() {}

func (x *CreateLedgerTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLedgerTransactionsResponse.ProtoReflect.Descriptor instead.
func (*CreateLedgerTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLedgerTransactionsResponse) GetLedgerTransactions() []*models.LedgerTransaction {
	if x != nil {
		return x.LedgerTransactions
	}
	return nil
}

type GetLedgerAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LedgerName *string `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3,oneof" json:"ledger_name,omitempty"` // When specified, this value will be used instead of the default ledger name when making Proper API calls. Balances will be representative of transactions only posted to that ledger.
}

func (x *GetLedgerAccountRequest) Reset() {
	*x = GetLedgerAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerAccountRequest) ProtoMessage() {}

func (x *GetLedgerAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerAccountRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerAccountRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *GetLedgerAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetLedgerAccountRequest) GetLedgerName() string {
	if x != nil && x.LedgerName != nil {
		return *x.LedgerName
	}
	return ""
}

type GetLedgerAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerAccount *models.LedgerAccount `protobuf:"bytes,1,opt,name=ledger_account,json=ledgerAccount,proto3" json:"ledger_account,omitempty"`
}

func (x *GetLedgerAccountResponse) Reset() {
	*x = GetLedgerAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerAccountResponse) ProtoMessage() {}

func (x *GetLedgerAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerAccountResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerAccountResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{5}
}

func (x *GetLedgerAccountResponse) GetLedgerAccount() *models.LedgerAccount {
	if x != nil {
		return x.LedgerAccount
	}
	return nil
}

type CreateLedgerAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerAccount *models.LedgerAccount `protobuf:"bytes,1,opt,name=ledger_account,json=ledgerAccount,proto3" json:"ledger_account,omitempty"`
}

func (x *CreateLedgerAccountRequest) Reset() {
	*x = CreateLedgerAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLedgerAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLedgerAccountRequest) ProtoMessage() {}

func (x *CreateLedgerAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLedgerAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateLedgerAccountRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLedgerAccountRequest) GetLedgerAccount() *models.LedgerAccount {
	if x != nil {
		return x.LedgerAccount
	}
	return nil
}

type CreateLedgerAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerAccount *models.LedgerAccount `protobuf:"bytes,1,opt,name=ledger_account,json=ledgerAccount,proto3" json:"ledger_account,omitempty"`
}

func (x *CreateLedgerAccountResponse) Reset() {
	*x = CreateLedgerAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLedgerAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLedgerAccountResponse) ProtoMessage() {}

func (x *CreateLedgerAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLedgerAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateLedgerAccountResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{7}
}

func (x *CreateLedgerAccountResponse) GetLedgerAccount() *models.LedgerAccount {
	if x != nil {
		return x.LedgerAccount
	}
	return nil
}

type GetLedgerByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetLedgerByNameRequest) Reset() {
	*x = GetLedgerByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerByNameRequest) ProtoMessage() {}

func (x *GetLedgerByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerByNameRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerByNameRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{8}
}

func (x *GetLedgerByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLedgerByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ledger *models.Ledger `protobuf:"bytes,1,opt,name=ledger,proto3" json:"ledger,omitempty"`
}

func (x *GetLedgerByNameResponse) Reset() {
	*x = GetLedgerByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerByNameResponse) ProtoMessage() {}

func (x *GetLedgerByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerByNameResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerByNameResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{9}
}

func (x *GetLedgerByNameResponse) GetLedger() *models.Ledger {
	if x != nil {
		return x.Ledger
	}
	return nil
}

type GetLedgerAccountByPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	LedgerName *string  `protobuf:"bytes,2,opt,name=ledger_name,json=ledgerName,proto3,oneof" json:"ledger_name,omitempty"` // When specified, this value will be used instead of the default ledger name when making Proper API calls. Balances will be representative of transactions only posted to that ledger.
}

func (x *GetLedgerAccountByPathRequest) Reset() {
	*x = GetLedgerAccountByPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerAccountByPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerAccountByPathRequest) ProtoMessage() {}

func (x *GetLedgerAccountByPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerAccountByPathRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerAccountByPathRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{10}
}

func (x *GetLedgerAccountByPathRequest) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *GetLedgerAccountByPathRequest) GetLedgerName() string {
	if x != nil && x.LedgerName != nil {
		return *x.LedgerName
	}
	return ""
}

type GetLedgerAccountByPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerAccount *models.LedgerAccount `protobuf:"bytes,1,opt,name=ledger_account,json=ledgerAccount,proto3" json:"ledger_account,omitempty"`
}

func (x *GetLedgerAccountByPathResponse) Reset() {
	*x = GetLedgerAccountByPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_ledger_ledger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerAccountByPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerAccountByPathResponse) ProtoMessage() {}

func (x *GetLedgerAccountByPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_ledger_ledger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerAccountByPathResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerAccountByPathResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_ledger_ledger_proto_rawDescGZIP(), []int{11}
}

func (x *GetLedgerAccountByPathResponse) GetLedgerAccount() *models.LedgerAccount {
	if x != nil {
		return x.LedgerAccount
	}
	return nil
}

var File_kappa_services_ledger_ledger_proto protoreflect.FileDescriptor

var file_kappa_services_ledger_ledger_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x1a, 0x20, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xa2, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x5d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0xe0, 0x04, 0x0a, 0x0d, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x24, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x25, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_ledger_ledger_proto_rawDescOnce sync.Once
	file_kappa_services_ledger_ledger_proto_rawDescData = file_kappa_services_ledger_ledger_proto_rawDesc
)

func file_kappa_services_ledger_ledger_proto_rawDescGZIP() []byte {
	file_kappa_services_ledger_ledger_proto_rawDescOnce.Do(func() {
		file_kappa_services_ledger_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_ledger_ledger_proto_rawDescData)
	})
	return file_kappa_services_ledger_ledger_proto_rawDescData
}

var file_kappa_services_ledger_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_kappa_services_ledger_ledger_proto_goTypes = []interface{}{
	(*GetLedgerTransactionsRequest)(nil),     // 0: ledger.GetLedgerTransactionsRequest
	(*GetLedgerTransactionsResponse)(nil),    // 1: ledger.GetLedgerTransactionsResponse
	(*CreateLedgerTransactionsRequest)(nil),  // 2: ledger.CreateLedgerTransactionsRequest
	(*CreateLedgerTransactionsResponse)(nil), // 3: ledger.CreateLedgerTransactionsResponse
	(*GetLedgerAccountRequest)(nil),          // 4: ledger.GetLedgerAccountRequest
	(*GetLedgerAccountResponse)(nil),         // 5: ledger.GetLedgerAccountResponse
	(*CreateLedgerAccountRequest)(nil),       // 6: ledger.CreateLedgerAccountRequest
	(*CreateLedgerAccountResponse)(nil),      // 7: ledger.CreateLedgerAccountResponse
	(*GetLedgerByNameRequest)(nil),           // 8: ledger.GetLedgerByNameRequest
	(*GetLedgerByNameResponse)(nil),          // 9: ledger.GetLedgerByNameResponse
	(*GetLedgerAccountByPathRequest)(nil),    // 10: ledger.GetLedgerAccountByPathRequest
	(*GetLedgerAccountByPathResponse)(nil),   // 11: ledger.GetLedgerAccountByPathResponse
	(*models.LedgerTransaction)(nil),         // 12: kappa.LedgerTransaction
	(*models.LedgerAccount)(nil),             // 13: kappa.LedgerAccount
	(*models.Ledger)(nil),                    // 14: kappa.Ledger
}
var file_kappa_services_ledger_ledger_proto_depIdxs = []int32{
	12, // 0: ledger.GetLedgerTransactionsResponse.ledger_transactions:type_name -> kappa.LedgerTransaction
	12, // 1: ledger.CreateLedgerTransactionsRequest.ledger_transactions:type_name -> kappa.LedgerTransaction
	12, // 2: ledger.CreateLedgerTransactionsResponse.ledger_transactions:type_name -> kappa.LedgerTransaction
	13, // 3: ledger.GetLedgerAccountResponse.ledger_account:type_name -> kappa.LedgerAccount
	13, // 4: ledger.CreateLedgerAccountRequest.ledger_account:type_name -> kappa.LedgerAccount
	13, // 5: ledger.CreateLedgerAccountResponse.ledger_account:type_name -> kappa.LedgerAccount
	14, // 6: ledger.GetLedgerByNameResponse.ledger:type_name -> kappa.Ledger
	13, // 7: ledger.GetLedgerAccountByPathResponse.ledger_account:type_name -> kappa.LedgerAccount
	8,  // 8: ledger.LedgerService.GetLedgerByName:input_type -> ledger.GetLedgerByNameRequest
	0,  // 9: ledger.LedgerService.GetLedgerTransactionsByID:input_type -> ledger.GetLedgerTransactionsRequest
	2,  // 10: ledger.LedgerService.CreateLedgerTransactions:input_type -> ledger.CreateLedgerTransactionsRequest
	4,  // 11: ledger.LedgerService.GetLedgerAccountByID:input_type -> ledger.GetLedgerAccountRequest
	10, // 12: ledger.LedgerService.GetLedgerAccountByPath:input_type -> ledger.GetLedgerAccountByPathRequest
	6,  // 13: ledger.LedgerService.CreateLedgerAccount:input_type -> ledger.CreateLedgerAccountRequest
	9,  // 14: ledger.LedgerService.GetLedgerByName:output_type -> ledger.GetLedgerByNameResponse
	1,  // 15: ledger.LedgerService.GetLedgerTransactionsByID:output_type -> ledger.GetLedgerTransactionsResponse
	3,  // 16: ledger.LedgerService.CreateLedgerTransactions:output_type -> ledger.CreateLedgerTransactionsResponse
	5,  // 17: ledger.LedgerService.GetLedgerAccountByID:output_type -> ledger.GetLedgerAccountResponse
	11, // 18: ledger.LedgerService.GetLedgerAccountByPath:output_type -> ledger.GetLedgerAccountByPathResponse
	7,  // 19: ledger.LedgerService.CreateLedgerAccount:output_type -> ledger.CreateLedgerAccountResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_kappa_services_ledger_ledger_proto_init() }
func file_kappa_services_ledger_ledger_proto_init() {
	if File_kappa_services_ledger_ledger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_ledger_ledger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLedgerTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLedgerTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLedgerAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLedgerAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerAccountByPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_ledger_ledger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerAccountByPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_ledger_ledger_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_kappa_services_ledger_ledger_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_kappa_services_ledger_ledger_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_kappa_services_ledger_ledger_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_ledger_ledger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_ledger_ledger_proto_goTypes,
		DependencyIndexes: file_kappa_services_ledger_ledger_proto_depIdxs,
		MessageInfos:      file_kappa_services_ledger_ledger_proto_msgTypes,
	}.Build()
	File_kappa_services_ledger_ledger_proto = out.File
	file_kappa_services_ledger_ledger_proto_rawDesc = nil
	file_kappa_services_ledger_ledger_proto_goTypes = nil
	file_kappa_services_ledger_ledger_proto_depIdxs = nil
}
