// ------------------------------------------------------------------------------
// <copyright company="Kappa Pay Inc.">
// Copyright (C) Kappa Pay Inc.  All rights reserved.
// Unauthorised copying of this file, via any medium, is strictly prohibited.
// Proprietary and confidential
// </copyright>
// <author>Ryan Yoder</author>
// ------------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: kappa/services/compliance/compliance.proto

package compliance

import (
	models "github.com/kappapay/backend/lib/golang/src/kappa/common/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateKycResultsReadyEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *models.KycResultsReadyEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *CreateKycResultsReadyEventRequest) Reset() {
	*x = CreateKycResultsReadyEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKycResultsReadyEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKycResultsReadyEventRequest) ProtoMessage() {}

func (x *CreateKycResultsReadyEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKycResultsReadyEventRequest.ProtoReflect.Descriptor instead.
func (*CreateKycResultsReadyEventRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{0}
}

func (x *CreateKycResultsReadyEventRequest) GetEvent() *models.KycResultsReadyEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type GetIdentityVerificationURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId   string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	IdentityId string `protobuf:"bytes,2,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	SessionId  string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Locale     string `protobuf:"bytes,4,opt,name=locale,proto3" json:"locale,omitempty"`
}

func (x *GetIdentityVerificationURLRequest) Reset() {
	*x = GetIdentityVerificationURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityVerificationURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityVerificationURLRequest) ProtoMessage() {}

func (x *GetIdentityVerificationURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityVerificationURLRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityVerificationURLRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{1}
}

func (x *GetIdentityVerificationURLRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *GetIdentityVerificationURLRequest) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *GetIdentityVerificationURLRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetIdentityVerificationURLRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type GetIdentityVerificationURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Link *models.IdentityVerificationLink `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *GetIdentityVerificationURLResponse) Reset() {
	*x = GetIdentityVerificationURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityVerificationURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityVerificationURLResponse) ProtoMessage() {}

func (x *GetIdentityVerificationURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityVerificationURLResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityVerificationURLResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{2}
}

func (x *GetIdentityVerificationURLResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdentityVerificationURLResponse) GetLink() *models.IdentityVerificationLink {
	if x != nil {
		return x.Link
	}
	return nil
}

type UpdateIdentityVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorHandle string `protobuf:"bytes,1,opt,name=vendor_handle,json=vendorHandle,proto3" json:"vendor_handle,omitempty"`
}

func (x *UpdateIdentityVerificationRequest) Reset() {
	*x = UpdateIdentityVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdentityVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityVerificationRequest) ProtoMessage() {}

func (x *UpdateIdentityVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityVerificationRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdentityVerificationRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateIdentityVerificationRequest) GetVendorHandle() string {
	if x != nil {
		return x.VendorHandle
	}
	return ""
}

type GetIdentityVerificationByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIdentityVerificationByIDRequest) Reset() {
	*x = GetIdentityVerificationByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityVerificationByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityVerificationByIDRequest) ProtoMessage() {}

func (x *GetIdentityVerificationByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityVerificationByIDRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityVerificationByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{4}
}

func (x *GetIdentityVerificationByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIdentityVerificationByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityVerification *models.IdentityVerification `protobuf:"bytes,1,opt,name=identity_verification,json=identityVerification,proto3" json:"identity_verification,omitempty"`
}

func (x *GetIdentityVerificationByIDResponse) Reset() {
	*x = GetIdentityVerificationByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityVerificationByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityVerificationByIDResponse) ProtoMessage() {}

func (x *GetIdentityVerificationByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityVerificationByIDResponse.ProtoReflect.Descriptor instead.
func (*GetIdentityVerificationByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{5}
}

func (x *GetIdentityVerificationByIDResponse) GetIdentityVerification() *models.IdentityVerification {
	if x != nil {
		return x.IdentityVerification
	}
	return nil
}

type SubmitIdentityVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubmitIdentityVerificationRequest) Reset() {
	*x = SubmitIdentityVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitIdentityVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitIdentityVerificationRequest) ProtoMessage() {}

func (x *SubmitIdentityVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitIdentityVerificationRequest.ProtoReflect.Descriptor instead.
func (*SubmitIdentityVerificationRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitIdentityVerificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateIdentityVerificationAndRequestKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateIdentityVerificationAndRequestKycRequest) Reset() {
	*x = UpdateIdentityVerificationAndRequestKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdentityVerificationAndRequestKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdentityVerificationAndRequestKycRequest) ProtoMessage() {}

func (x *UpdateIdentityVerificationAndRequestKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdentityVerificationAndRequestKycRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdentityVerificationAndRequestKycRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateIdentityVerificationAndRequestKycRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIdentityVerificationAndRequestKycRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateSardineCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *models.SardineCaseUpdatedEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *UpdateSardineCaseRequest) Reset() {
	*x = UpdateSardineCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSardineCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSardineCaseRequest) ProtoMessage() {}

func (x *UpdateSardineCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSardineCaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateSardineCaseRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSardineCaseRequest) GetEvent() *models.SardineCaseUpdatedEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreateTransactionRequirementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *CreateTransactionRequirementsRequest) Reset() {
	*x = CreateTransactionRequirementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequirementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequirementsRequest) ProtoMessage() {}

func (x *CreateTransactionRequirementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequirementsRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequirementsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTransactionRequirementsRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CreateTransactionRequirementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentRequirements    []*models.TransactionDocumentationRequirement `protobuf:"bytes,1,rep,name=document_requirements,json=documentRequirements,proto3" json:"document_requirements,omitempty"`
	InformationRequirements []*models.TransactionInformationRequirement   `protobuf:"bytes,2,rep,name=information_requirements,json=informationRequirements,proto3" json:"information_requirements,omitempty"`
}

func (x *CreateTransactionRequirementsResponse) Reset() {
	*x = CreateTransactionRequirementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequirementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequirementsResponse) ProtoMessage() {}

func (x *CreateTransactionRequirementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequirementsResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequirementsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTransactionRequirementsResponse) GetDocumentRequirements() []*models.TransactionDocumentationRequirement {
	if x != nil {
		return x.DocumentRequirements
	}
	return nil
}

func (x *CreateTransactionRequirementsResponse) GetInformationRequirements() []*models.TransactionInformationRequirement {
	if x != nil {
		return x.InformationRequirements
	}
	return nil
}

type UpdateDocumentationRequirementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementId  string                                           `protobuf:"bytes,1,opt,name=requirement_id,json=requirementId,proto3" json:"requirement_id,omitempty"`
	DocumentTypeId string                                           `protobuf:"bytes,2,opt,name=document_type_id,json=documentTypeId,proto3" json:"document_type_id,omitempty"`
	Status         models.TransactionDocumentationRequirementStatus `protobuf:"varint,3,opt,name=status,proto3,enum=kappa.TransactionDocumentationRequirementStatus" json:"status,omitempty"`
}

func (x *UpdateDocumentationRequirementRequest) Reset() {
	*x = UpdateDocumentationRequirementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentationRequirementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentationRequirementRequest) ProtoMessage() {}

func (x *UpdateDocumentationRequirementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentationRequirementRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentationRequirementRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateDocumentationRequirementRequest) GetRequirementId() string {
	if x != nil {
		return x.RequirementId
	}
	return ""
}

func (x *UpdateDocumentationRequirementRequest) GetDocumentTypeId() string {
	if x != nil {
		return x.DocumentTypeId
	}
	return ""
}

func (x *UpdateDocumentationRequirementRequest) GetStatus() models.TransactionDocumentationRequirementStatus {
	if x != nil {
		return x.Status
	}
	return models.TransactionDocumentationRequirementStatus(0)
}

type UpdateInformationRequirementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementId string                                         `protobuf:"bytes,1,opt,name=requirement_id,json=requirementId,proto3" json:"requirement_id,omitempty"`
	Status        models.TransactionInformationRequirementStatus `protobuf:"varint,2,opt,name=status,proto3,enum=kappa.TransactionInformationRequirementStatus" json:"status,omitempty"`
}

func (x *UpdateInformationRequirementRequest) Reset() {
	*x = UpdateInformationRequirementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInformationRequirementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInformationRequirementRequest) ProtoMessage() {}

func (x *UpdateInformationRequirementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInformationRequirementRequest.ProtoReflect.Descriptor instead.
func (*UpdateInformationRequirementRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateInformationRequirementRequest) GetRequirementId() string {
	if x != nil {
		return x.RequirementId
	}
	return ""
}

func (x *UpdateInformationRequirementRequest) GetStatus() models.TransactionInformationRequirementStatus {
	if x != nil {
		return x.Status
	}
	return models.TransactionInformationRequirementStatus(0)
}

type CheckTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	SessionId     string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CheckTransactionRequest) Reset() {
	*x = CheckTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionRequest) ProtoMessage() {}

func (x *CheckTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionRequest.ProtoReflect.Descriptor instead.
func (*CheckTransactionRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{13}
}

func (x *CheckTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CheckTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CheckTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *models.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *CheckTransactionResponse) Reset() {
	*x = CheckTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTransactionResponse) ProtoMessage() {}

func (x *CheckTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTransactionResponse.ProtoReflect.Descriptor instead.
func (*CheckTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{14}
}

func (x *CheckTransactionResponse) GetTransaction() *models.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetTransactionRequirementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetTransactionRequirementsRequest) Reset() {
	*x = GetTransactionRequirementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequirementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequirementsRequest) ProtoMessage() {}

func (x *GetTransactionRequirementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequirementsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequirementsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{15}
}

func (x *GetTransactionRequirementsRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetTransactionRequirementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentationRequirements []*models.TransactionDocumentationRequirement `protobuf:"bytes,1,rep,name=documentation_requirements,json=documentationRequirements,proto3" json:"documentation_requirements,omitempty"`
	InformationRequirements   []*models.TransactionInformationRequirement   `protobuf:"bytes,2,rep,name=information_requirements,json=informationRequirements,proto3" json:"information_requirements,omitempty"`
}

func (x *GetTransactionRequirementsResponse) Reset() {
	*x = GetTransactionRequirementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequirementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequirementsResponse) ProtoMessage() {}

func (x *GetTransactionRequirementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequirementsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionRequirementsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{16}
}

func (x *GetTransactionRequirementsResponse) GetDocumentationRequirements() []*models.TransactionDocumentationRequirement {
	if x != nil {
		return x.DocumentationRequirements
	}
	return nil
}

func (x *GetTransactionRequirementsResponse) GetInformationRequirements() []*models.TransactionInformationRequirement {
	if x != nil {
		return x.InformationRequirements
	}
	return nil
}

type GetKycResultByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KycResultId string `protobuf:"bytes,1,opt,name=kyc_result_id,json=kycResultId,proto3" json:"kyc_result_id,omitempty"`
}

func (x *GetKycResultByIDRequest) Reset() {
	*x = GetKycResultByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycResultByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycResultByIDRequest) ProtoMessage() {}

func (x *GetKycResultByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycResultByIDRequest.ProtoReflect.Descriptor instead.
func (*GetKycResultByIDRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{17}
}

func (x *GetKycResultByIDRequest) GetKycResultId() string {
	if x != nil {
		return x.KycResultId
	}
	return ""
}

type GetKycResultByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KycResult *models.KycResult `protobuf:"bytes,1,opt,name=kyc_result,json=kycResult,proto3" json:"kyc_result,omitempty"`
}

func (x *GetKycResultByIDResponse) Reset() {
	*x = GetKycResultByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKycResultByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKycResultByIDResponse) ProtoMessage() {}

func (x *GetKycResultByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKycResultByIDResponse.ProtoReflect.Descriptor instead.
func (*GetKycResultByIDResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{18}
}

func (x *GetKycResultByIDResponse) GetKycResult() *models.KycResult {
	if x != nil {
		return x.KycResult
	}
	return nil
}

type UploadSilaDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*UploadSilaDocumentRequest_Metadata
	//	*UploadSilaDocumentRequest_FileContents
	Request isUploadSilaDocumentRequest_Request `protobuf_oneof:"request"`
}

func (x *UploadSilaDocumentRequest) Reset() {
	*x = UploadSilaDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSilaDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSilaDocumentRequest) ProtoMessage() {}

func (x *UploadSilaDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSilaDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadSilaDocumentRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{19}
}

func (m *UploadSilaDocumentRequest) GetRequest() isUploadSilaDocumentRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *UploadSilaDocumentRequest) GetMetadata() *models.FileMetadata {
	if x, ok := x.GetRequest().(*UploadSilaDocumentRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *UploadSilaDocumentRequest) GetFileContents() []byte {
	if x, ok := x.GetRequest().(*UploadSilaDocumentRequest_FileContents); ok {
		return x.FileContents
	}
	return nil
}

type isUploadSilaDocumentRequest_Request interface {
	isUploadSilaDocumentRequest_Request()
}

type UploadSilaDocumentRequest_Metadata struct {
	Metadata *models.FileMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadSilaDocumentRequest_FileContents struct {
	FileContents []byte `protobuf:"bytes,2,opt,name=file_contents,json=fileContents,proto3,oneof"`
}

func (*UploadSilaDocumentRequest_Metadata) isUploadSilaDocumentRequest_Request() {}

func (*UploadSilaDocumentRequest_FileContents) isUploadSilaDocumentRequest_Request() {}

type UploadSilaDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadSilaDocumentResponse) Reset() {
	*x = UploadSilaDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSilaDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSilaDocumentResponse) ProtoMessage() {}

func (x *UploadSilaDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSilaDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadSilaDocumentResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{20}
}

type GetVerificationRequirementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *GetVerificationRequirementsRequest) Reset() {
	*x = GetVerificationRequirementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationRequirementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationRequirementsRequest) ProtoMessage() {}

func (x *GetVerificationRequirementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationRequirementsRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationRequirementsRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{21}
}

func (x *GetVerificationRequirementsRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type GetVerificationRequirementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementTypes []models.KycVerificationRequirementType `protobuf:"varint,1,rep,packed,name=requirement_types,json=requirementTypes,proto3,enum=kappa.KycVerificationRequirementType" json:"requirement_types,omitempty"`
}

func (x *GetVerificationRequirementsResponse) Reset() {
	*x = GetVerificationRequirementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationRequirementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationRequirementsResponse) ProtoMessage() {}

func (x *GetVerificationRequirementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationRequirementsResponse.ProtoReflect.Descriptor instead.
func (*GetVerificationRequirementsResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{22}
}

func (x *GetVerificationRequirementsResponse) GetRequirementTypes() []models.KycVerificationRequirementType {
	if x != nil {
		return x.RequirementTypes
	}
	return nil
}

// If a verification requirement has been fulfilled (most likely by updating an
// entity's data), this method can be called, which will exclude it from
// subsequent calls to GetVerificationRequirements
type CompleteVerificationRequirementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KycResultId     string                                `protobuf:"bytes,1,opt,name=kyc_result_id,json=kycResultId,proto3" json:"kyc_result_id,omitempty"`
	RequirementType models.KycVerificationRequirementType `protobuf:"varint,2,opt,name=requirement_type,json=requirementType,proto3,enum=kappa.KycVerificationRequirementType" json:"requirement_type,omitempty"`
}

func (x *CompleteVerificationRequirementRequest) Reset() {
	*x = CompleteVerificationRequirementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteVerificationRequirementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteVerificationRequirementRequest) ProtoMessage() {}

func (x *CompleteVerificationRequirementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteVerificationRequirementRequest.ProtoReflect.Descriptor instead.
func (*CompleteVerificationRequirementRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{23}
}

func (x *CompleteVerificationRequirementRequest) GetKycResultId() string {
	if x != nil {
		return x.KycResultId
	}
	return ""
}

func (x *CompleteVerificationRequirementRequest) GetRequirementType() models.KycVerificationRequirementType {
	if x != nil {
		return x.RequirementType
	}
	return models.KycVerificationRequirementType(0)
}

type CompleteVerificationRequirementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteVerificationRequirementResponse) Reset() {
	*x = CompleteVerificationRequirementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteVerificationRequirementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteVerificationRequirementResponse) ProtoMessage() {}

func (x *CompleteVerificationRequirementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteVerificationRequirementResponse.ProtoReflect.Descriptor instead.
func (*CompleteVerificationRequirementResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{24}
}

type GetVerificationDocumentTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementType models.KycVerificationRequirementType `protobuf:"varint,1,opt,name=requirement_type,json=requirementType,proto3,enum=kappa.KycVerificationRequirementType" json:"requirement_type,omitempty"`
}

func (x *GetVerificationDocumentTypesRequest) Reset() {
	*x = GetVerificationDocumentTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationDocumentTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationDocumentTypesRequest) ProtoMessage() {}

func (x *GetVerificationDocumentTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationDocumentTypesRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationDocumentTypesRequest) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{25}
}

func (x *GetVerificationDocumentTypesRequest) GetRequirementType() models.KycVerificationRequirementType {
	if x != nil {
		return x.RequirementType
	}
	return models.KycVerificationRequirementType(0)
}

type GetVerificationDocumentTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentTypes []*models.VerificationDocumentTypes `protobuf:"bytes,1,rep,name=document_types,json=documentTypes,proto3" json:"document_types,omitempty"`
}

func (x *GetVerificationDocumentTypesResponse) Reset() {
	*x = GetVerificationDocumentTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kappa_services_compliance_compliance_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerificationDocumentTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationDocumentTypesResponse) ProtoMessage() {}

func (x *GetVerificationDocumentTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kappa_services_compliance_compliance_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationDocumentTypesResponse.ProtoReflect.Descriptor instead.
func (*GetVerificationDocumentTypesResponse) Descriptor() ([]byte, []int) {
	return file_kappa_services_compliance_compliance_proto_rawDescGZIP(), []int{26}
}

func (x *GetVerificationDocumentTypesResponse) GetDocumentTypes() []*models.VerificationDocumentTypes {
	if x != nil {
		return x.DocumentTypes
	}
	return nil
}

var File_kappa_services_compliance_compliance_proto protoreflect.FileDescriptor

var file_kappa_services_compliance_compliance_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6b, 0x79, 0x63, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6b, 0x79,
	0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x73, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x73, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x98, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x69, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x48, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x15, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x33, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x79, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x53, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x4d, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xed, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x15, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x18, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b,
	0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x17, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xc2, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6b, 0x61, 0x70,
	0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x18,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x69, 0x0a, 0x1a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x19, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x18,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x17, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x3d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x6b, 0x79, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64,
	0x22, 0x4b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x6b, 0x79, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x09, 0x6b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x6c, 0x61, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25,
	0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x6c, 0x61, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x79, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79, 0x63, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a,
	0x26, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x79, 0x63, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x4b, 0x79,
	0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a,
	0x27, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6b, 0x61, 0x70, 0x70,
	0x61, 0x2e, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6f, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x61, 0x70, 0x70, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x32, 0xca, 0x0f, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x7f, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x79, 0x63, 0x12, 0x3a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x79, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8c, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x6c, 0x61, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x6c, 0x61, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x69, 0x6c, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6c,
	0x69, 0x62, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6b, 0x61,
	0x70, 0x70, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kappa_services_compliance_compliance_proto_rawDescOnce sync.Once
	file_kappa_services_compliance_compliance_proto_rawDescData = file_kappa_services_compliance_compliance_proto_rawDesc
)

func file_kappa_services_compliance_compliance_proto_rawDescGZIP() []byte {
	file_kappa_services_compliance_compliance_proto_rawDescOnce.Do(func() {
		file_kappa_services_compliance_compliance_proto_rawDescData = protoimpl.X.CompressGZIP(file_kappa_services_compliance_compliance_proto_rawDescData)
	})
	return file_kappa_services_compliance_compliance_proto_rawDescData
}

var file_kappa_services_compliance_compliance_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_kappa_services_compliance_compliance_proto_goTypes = []interface{}{
	(*CreateKycResultsReadyEventRequest)(nil),              // 0: compliance.CreateKycResultsReadyEventRequest
	(*GetIdentityVerificationURLRequest)(nil),              // 1: compliance.GetIdentityVerificationURLRequest
	(*GetIdentityVerificationURLResponse)(nil),             // 2: compliance.GetIdentityVerificationURLResponse
	(*UpdateIdentityVerificationRequest)(nil),              // 3: compliance.UpdateIdentityVerificationRequest
	(*GetIdentityVerificationByIDRequest)(nil),             // 4: compliance.GetIdentityVerificationByIDRequest
	(*GetIdentityVerificationByIDResponse)(nil),            // 5: compliance.GetIdentityVerificationByIDResponse
	(*SubmitIdentityVerificationRequest)(nil),              // 6: compliance.SubmitIdentityVerificationRequest
	(*UpdateIdentityVerificationAndRequestKycRequest)(nil), // 7: compliance.UpdateIdentityVerificationAndRequestKycRequest
	(*UpdateSardineCaseRequest)(nil),                       // 8: compliance.UpdateSardineCaseRequest
	(*CreateTransactionRequirementsRequest)(nil),           // 9: compliance.CreateTransactionRequirementsRequest
	(*CreateTransactionRequirementsResponse)(nil),          // 10: compliance.CreateTransactionRequirementsResponse
	(*UpdateDocumentationRequirementRequest)(nil),          // 11: compliance.UpdateDocumentationRequirementRequest
	(*UpdateInformationRequirementRequest)(nil),            // 12: compliance.UpdateInformationRequirementRequest
	(*CheckTransactionRequest)(nil),                        // 13: compliance.CheckTransactionRequest
	(*CheckTransactionResponse)(nil),                       // 14: compliance.CheckTransactionResponse
	(*GetTransactionRequirementsRequest)(nil),              // 15: compliance.GetTransactionRequirementsRequest
	(*GetTransactionRequirementsResponse)(nil),             // 16: compliance.GetTransactionRequirementsResponse
	(*GetKycResultByIDRequest)(nil),                        // 17: compliance.GetKycResultByIDRequest
	(*GetKycResultByIDResponse)(nil),                       // 18: compliance.GetKycResultByIDResponse
	(*UploadSilaDocumentRequest)(nil),                      // 19: compliance.UploadSilaDocumentRequest
	(*UploadSilaDocumentResponse)(nil),                     // 20: compliance.UploadSilaDocumentResponse
	(*GetVerificationRequirementsRequest)(nil),             // 21: compliance.GetVerificationRequirementsRequest
	(*GetVerificationRequirementsResponse)(nil),            // 22: compliance.GetVerificationRequirementsResponse
	(*CompleteVerificationRequirementRequest)(nil),         // 23: compliance.CompleteVerificationRequirementRequest
	(*CompleteVerificationRequirementResponse)(nil),        // 24: compliance.CompleteVerificationRequirementResponse
	(*GetVerificationDocumentTypesRequest)(nil),            // 25: compliance.GetVerificationDocumentTypesRequest
	(*GetVerificationDocumentTypesResponse)(nil),           // 26: compliance.GetVerificationDocumentTypesResponse
	(*models.KycResultsReadyEvent)(nil),                    // 27: kappa.KycResultsReadyEvent
	(*models.IdentityVerificationLink)(nil),                // 28: kappa.IdentityVerificationLink
	(*models.IdentityVerification)(nil),                    // 29: kappa.IdentityVerification
	(*models.SardineCaseUpdatedEvent)(nil),                 // 30: kappa.SardineCaseUpdatedEvent
	(*models.TransactionDocumentationRequirement)(nil),     // 31: kappa.TransactionDocumentationRequirement
	(*models.TransactionInformationRequirement)(nil),       // 32: kappa.TransactionInformationRequirement
	(models.TransactionDocumentationRequirementStatus)(0),  // 33: kappa.TransactionDocumentationRequirementStatus
	(models.TransactionInformationRequirementStatus)(0),    // 34: kappa.TransactionInformationRequirementStatus
	(*models.Transaction)(nil),                             // 35: kappa.Transaction
	(*models.KycResult)(nil),                               // 36: kappa.KycResult
	(*models.FileMetadata)(nil),                            // 37: kappa.FileMetadata
	(models.KycVerificationRequirementType)(0),             // 38: kappa.KycVerificationRequirementType
	(*models.VerificationDocumentTypes)(nil),               // 39: kappa.VerificationDocumentTypes
	(*emptypb.Empty)(nil),                                  // 40: google.protobuf.Empty
}
var file_kappa_services_compliance_compliance_proto_depIdxs = []int32{
	27, // 0: compliance.CreateKycResultsReadyEventRequest.event:type_name -> kappa.KycResultsReadyEvent
	28, // 1: compliance.GetIdentityVerificationURLResponse.link:type_name -> kappa.IdentityVerificationLink
	29, // 2: compliance.GetIdentityVerificationByIDResponse.identity_verification:type_name -> kappa.IdentityVerification
	30, // 3: compliance.UpdateSardineCaseRequest.event:type_name -> kappa.SardineCaseUpdatedEvent
	31, // 4: compliance.CreateTransactionRequirementsResponse.document_requirements:type_name -> kappa.TransactionDocumentationRequirement
	32, // 5: compliance.CreateTransactionRequirementsResponse.information_requirements:type_name -> kappa.TransactionInformationRequirement
	33, // 6: compliance.UpdateDocumentationRequirementRequest.status:type_name -> kappa.TransactionDocumentationRequirementStatus
	34, // 7: compliance.UpdateInformationRequirementRequest.status:type_name -> kappa.TransactionInformationRequirementStatus
	35, // 8: compliance.CheckTransactionResponse.transaction:type_name -> kappa.Transaction
	31, // 9: compliance.GetTransactionRequirementsResponse.documentation_requirements:type_name -> kappa.TransactionDocumentationRequirement
	32, // 10: compliance.GetTransactionRequirementsResponse.information_requirements:type_name -> kappa.TransactionInformationRequirement
	36, // 11: compliance.GetKycResultByIDResponse.kyc_result:type_name -> kappa.KycResult
	37, // 12: compliance.UploadSilaDocumentRequest.metadata:type_name -> kappa.FileMetadata
	38, // 13: compliance.GetVerificationRequirementsResponse.requirement_types:type_name -> kappa.KycVerificationRequirementType
	38, // 14: compliance.CompleteVerificationRequirementRequest.requirement_type:type_name -> kappa.KycVerificationRequirementType
	38, // 15: compliance.GetVerificationDocumentTypesRequest.requirement_type:type_name -> kappa.KycVerificationRequirementType
	39, // 16: compliance.GetVerificationDocumentTypesResponse.document_types:type_name -> kappa.VerificationDocumentTypes
	0,  // 17: compliance.ComplianceService.CreateKycResultsReadyEvent:input_type -> compliance.CreateKycResultsReadyEventRequest
	1,  // 18: compliance.ComplianceService.GetIdentityVerificationURL:input_type -> compliance.GetIdentityVerificationURLRequest
	4,  // 19: compliance.ComplianceService.GetIdentityVerificationByID:input_type -> compliance.GetIdentityVerificationByIDRequest
	6,  // 20: compliance.ComplianceService.SubmitIdentityVerification:input_type -> compliance.SubmitIdentityVerificationRequest
	3,  // 21: compliance.ComplianceService.UpdateIdentityVerification:input_type -> compliance.UpdateIdentityVerificationRequest
	7,  // 22: compliance.ComplianceService.UpdateIdentityVerificationAndRequestKyc:input_type -> compliance.UpdateIdentityVerificationAndRequestKycRequest
	8,  // 23: compliance.ComplianceService.UpdateSardineCaseEvent:input_type -> compliance.UpdateSardineCaseRequest
	9,  // 24: compliance.ComplianceService.CreateTransactionRequirements:input_type -> compliance.CreateTransactionRequirementsRequest
	11, // 25: compliance.ComplianceService.UpdateDocumentationRequirement:input_type -> compliance.UpdateDocumentationRequirementRequest
	12, // 26: compliance.ComplianceService.UpdateInformationRequirement:input_type -> compliance.UpdateInformationRequirementRequest
	13, // 27: compliance.ComplianceService.CheckTransaction:input_type -> compliance.CheckTransactionRequest
	15, // 28: compliance.ComplianceService.GetTransactionRequirements:input_type -> compliance.GetTransactionRequirementsRequest
	17, // 29: compliance.ComplianceService.GetKycResultByID:input_type -> compliance.GetKycResultByIDRequest
	21, // 30: compliance.ComplianceService.GetVerificationRequirements:input_type -> compliance.GetVerificationRequirementsRequest
	23, // 31: compliance.ComplianceService.CompleteVerificationRequirement:input_type -> compliance.CompleteVerificationRequirementRequest
	19, // 32: compliance.ComplianceService.UploadSilaDocument:input_type -> compliance.UploadSilaDocumentRequest
	25, // 33: compliance.ComplianceService.GetVerificationDocumentTypes:input_type -> compliance.GetVerificationDocumentTypesRequest
	40, // 34: compliance.ComplianceService.CreateKycResultsReadyEvent:output_type -> google.protobuf.Empty
	2,  // 35: compliance.ComplianceService.GetIdentityVerificationURL:output_type -> compliance.GetIdentityVerificationURLResponse
	5,  // 36: compliance.ComplianceService.GetIdentityVerificationByID:output_type -> compliance.GetIdentityVerificationByIDResponse
	40, // 37: compliance.ComplianceService.SubmitIdentityVerification:output_type -> google.protobuf.Empty
	40, // 38: compliance.ComplianceService.UpdateIdentityVerification:output_type -> google.protobuf.Empty
	40, // 39: compliance.ComplianceService.UpdateIdentityVerificationAndRequestKyc:output_type -> google.protobuf.Empty
	40, // 40: compliance.ComplianceService.UpdateSardineCaseEvent:output_type -> google.protobuf.Empty
	10, // 41: compliance.ComplianceService.CreateTransactionRequirements:output_type -> compliance.CreateTransactionRequirementsResponse
	40, // 42: compliance.ComplianceService.UpdateDocumentationRequirement:output_type -> google.protobuf.Empty
	40, // 43: compliance.ComplianceService.UpdateInformationRequirement:output_type -> google.protobuf.Empty
	14, // 44: compliance.ComplianceService.CheckTransaction:output_type -> compliance.CheckTransactionResponse
	16, // 45: compliance.ComplianceService.GetTransactionRequirements:output_type -> compliance.GetTransactionRequirementsResponse
	18, // 46: compliance.ComplianceService.GetKycResultByID:output_type -> compliance.GetKycResultByIDResponse
	22, // 47: compliance.ComplianceService.GetVerificationRequirements:output_type -> compliance.GetVerificationRequirementsResponse
	24, // 48: compliance.ComplianceService.CompleteVerificationRequirement:output_type -> compliance.CompleteVerificationRequirementResponse
	20, // 49: compliance.ComplianceService.UploadSilaDocument:output_type -> compliance.UploadSilaDocumentResponse
	26, // 50: compliance.ComplianceService.GetVerificationDocumentTypes:output_type -> compliance.GetVerificationDocumentTypesResponse
	34, // [34:51] is the sub-list for method output_type
	17, // [17:34] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_kappa_services_compliance_compliance_proto_init() }
func file_kappa_services_compliance_compliance_proto_init() {
	if File_kappa_services_compliance_compliance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kappa_services_compliance_compliance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKycResultsReadyEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityVerificationURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityVerificationURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdentityVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityVerificationByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityVerificationByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitIdentityVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdentityVerificationAndRequestKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSardineCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequirementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequirementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentationRequirementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInformationRequirementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequirementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequirementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycResultByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKycResultByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSilaDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSilaDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationRequirementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationRequirementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteVerificationRequirementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteVerificationRequirementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationDocumentTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kappa_services_compliance_compliance_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerificationDocumentTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kappa_services_compliance_compliance_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*UploadSilaDocumentRequest_Metadata)(nil),
		(*UploadSilaDocumentRequest_FileContents)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kappa_services_compliance_compliance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kappa_services_compliance_compliance_proto_goTypes,
		DependencyIndexes: file_kappa_services_compliance_compliance_proto_depIdxs,
		MessageInfos:      file_kappa_services_compliance_compliance_proto_msgTypes,
	}.Build()
	File_kappa_services_compliance_compliance_proto = out.File
	file_kappa_services_compliance_compliance_proto_rawDesc = nil
	file_kappa_services_compliance_compliance_proto_goTypes = nil
	file_kappa_services_compliance_compliance_proto_depIdxs = nil
}
