// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: kappa/services/phones/phones.proto

package phones

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PhoneServiceClient is the client API for PhoneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PhoneServiceClient interface {
	CreatePhoneNumber(ctx context.Context, in *CreatePhoneNumberRequest, opts ...grpc.CallOption) (*CreatePhoneNumberResponse, error)
	GetPhoneNumber(ctx context.Context, in *GetPhoneNumberRequest, opts ...grpc.CallOption) (*GetPhoneNumberResponse, error)
	GetPhoneNumberByID(ctx context.Context, in *GetPhoneNumberByIdRequest, opts ...grpc.CallOption) (*GetPhoneNumberByIdResponse, error)
	UpdatePhoneNumber(ctx context.Context, in *UpdatePhoneNumberRequest, opts ...grpc.CallOption) (*UpdatePhoneNumberResponse, error)
	DeletePhoneNumber(ctx context.Context, in *DeletePhoneNumberRequest, opts ...grpc.CallOption) (*DeletePhoneNumberResponse, error)
	DeletePhoneNumberByID(ctx context.Context, in *DeletePhoneNumberByIDRequest, opts ...grpc.CallOption) (*DeletePhoneNumberByIDResponse, error)
	GetOrCreatePhoneNumber(ctx context.Context, in *GetPhoneNumberRequest, opts ...grpc.CallOption) (*GetPhoneNumberResponse, error)
	MarkPhoneVerified(ctx context.Context, in *MarkPhoneVerifiedRequest, opts ...grpc.CallOption) (*MarkPhoneVerifiedResponse, error)
}

type phoneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneServiceClient(cc grpc.ClientConnInterface) PhoneServiceClient {
	return &phoneServiceClient{cc}
}

func (c *phoneServiceClient) CreatePhoneNumber(ctx context.Context, in *CreatePhoneNumberRequest, opts ...grpc.CallOption) (*CreatePhoneNumberResponse, error) {
	out := new(CreatePhoneNumberResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/CreatePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) GetPhoneNumber(ctx context.Context, in *GetPhoneNumberRequest, opts ...grpc.CallOption) (*GetPhoneNumberResponse, error) {
	out := new(GetPhoneNumberResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/GetPhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) GetPhoneNumberByID(ctx context.Context, in *GetPhoneNumberByIdRequest, opts ...grpc.CallOption) (*GetPhoneNumberByIdResponse, error) {
	out := new(GetPhoneNumberByIdResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/GetPhoneNumberByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) UpdatePhoneNumber(ctx context.Context, in *UpdatePhoneNumberRequest, opts ...grpc.CallOption) (*UpdatePhoneNumberResponse, error) {
	out := new(UpdatePhoneNumberResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/UpdatePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) DeletePhoneNumber(ctx context.Context, in *DeletePhoneNumberRequest, opts ...grpc.CallOption) (*DeletePhoneNumberResponse, error) {
	out := new(DeletePhoneNumberResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/DeletePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) DeletePhoneNumberByID(ctx context.Context, in *DeletePhoneNumberByIDRequest, opts ...grpc.CallOption) (*DeletePhoneNumberByIDResponse, error) {
	out := new(DeletePhoneNumberByIDResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/DeletePhoneNumberByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) GetOrCreatePhoneNumber(ctx context.Context, in *GetPhoneNumberRequest, opts ...grpc.CallOption) (*GetPhoneNumberResponse, error) {
	out := new(GetPhoneNumberResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/GetOrCreatePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneServiceClient) MarkPhoneVerified(ctx context.Context, in *MarkPhoneVerifiedRequest, opts ...grpc.CallOption) (*MarkPhoneVerifiedResponse, error) {
	out := new(MarkPhoneVerifiedResponse)
	err := c.cc.Invoke(ctx, "/phones.PhoneService/MarkPhoneVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneServiceServer is the server API for PhoneService service.
// All implementations must embed UnimplementedPhoneServiceServer
// for forward compatibility
type PhoneServiceServer interface {
	CreatePhoneNumber(context.Context, *CreatePhoneNumberRequest) (*CreatePhoneNumberResponse, error)
	GetPhoneNumber(context.Context, *GetPhoneNumberRequest) (*GetPhoneNumberResponse, error)
	GetPhoneNumberByID(context.Context, *GetPhoneNumberByIdRequest) (*GetPhoneNumberByIdResponse, error)
	UpdatePhoneNumber(context.Context, *UpdatePhoneNumberRequest) (*UpdatePhoneNumberResponse, error)
	DeletePhoneNumber(context.Context, *DeletePhoneNumberRequest) (*DeletePhoneNumberResponse, error)
	DeletePhoneNumberByID(context.Context, *DeletePhoneNumberByIDRequest) (*DeletePhoneNumberByIDResponse, error)
	GetOrCreatePhoneNumber(context.Context, *GetPhoneNumberRequest) (*GetPhoneNumberResponse, error)
	MarkPhoneVerified(context.Context, *MarkPhoneVerifiedRequest) (*MarkPhoneVerifiedResponse, error)
	mustEmbedUnimplementedPhoneServiceServer()
}

// UnimplementedPhoneServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPhoneServiceServer struct {
}

func (UnimplementedPhoneServiceServer) CreatePhoneNumber(context.Context, *CreatePhoneNumberRequest) (*CreatePhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePhoneNumber not implemented")
}
func (UnimplementedPhoneServiceServer) GetPhoneNumber(context.Context, *GetPhoneNumberRequest) (*GetPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhoneNumber not implemented")
}
func (UnimplementedPhoneServiceServer) GetPhoneNumberByID(context.Context, *GetPhoneNumberByIdRequest) (*GetPhoneNumberByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhoneNumberByID not implemented")
}
func (UnimplementedPhoneServiceServer) UpdatePhoneNumber(context.Context, *UpdatePhoneNumberRequest) (*UpdatePhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePhoneNumber not implemented")
}
func (UnimplementedPhoneServiceServer) DeletePhoneNumber(context.Context, *DeletePhoneNumberRequest) (*DeletePhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePhoneNumber not implemented")
}
func (UnimplementedPhoneServiceServer) DeletePhoneNumberByID(context.Context, *DeletePhoneNumberByIDRequest) (*DeletePhoneNumberByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePhoneNumberByID not implemented")
}
func (UnimplementedPhoneServiceServer) GetOrCreatePhoneNumber(context.Context, *GetPhoneNumberRequest) (*GetPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrCreatePhoneNumber not implemented")
}
func (UnimplementedPhoneServiceServer) MarkPhoneVerified(context.Context, *MarkPhoneVerifiedRequest) (*MarkPhoneVerifiedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkPhoneVerified not implemented")
}
func (UnimplementedPhoneServiceServer) mustEmbedUnimplementedPhoneServiceServer() {}

// UnsafePhoneServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneServiceServer will
// result in compilation errors.
type UnsafePhoneServiceServer interface {
	mustEmbedUnimplementedPhoneServiceServer()
}

func RegisterPhoneServiceServer(s grpc.ServiceRegistrar, srv PhoneServiceServer) {
	s.RegisterService(&PhoneService_ServiceDesc, srv)
}

func _PhoneService_CreatePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).CreatePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/CreatePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).CreatePhoneNumber(ctx, req.(*CreatePhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_GetPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).GetPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/GetPhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).GetPhoneNumber(ctx, req.(*GetPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_GetPhoneNumberByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhoneNumberByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).GetPhoneNumberByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/GetPhoneNumberByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).GetPhoneNumberByID(ctx, req.(*GetPhoneNumberByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_UpdatePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).UpdatePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/UpdatePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).UpdatePhoneNumber(ctx, req.(*UpdatePhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_DeletePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).DeletePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/DeletePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).DeletePhoneNumber(ctx, req.(*DeletePhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_DeletePhoneNumberByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePhoneNumberByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).DeletePhoneNumberByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/DeletePhoneNumberByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).DeletePhoneNumberByID(ctx, req.(*DeletePhoneNumberByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_GetOrCreatePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).GetOrCreatePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/GetOrCreatePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).GetOrCreatePhoneNumber(ctx, req.(*GetPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneService_MarkPhoneVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkPhoneVerifiedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).MarkPhoneVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phones.PhoneService/MarkPhoneVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).MarkPhoneVerified(ctx, req.(*MarkPhoneVerifiedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneService_ServiceDesc is the grpc.ServiceDesc for PhoneService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "phones.PhoneService",
	HandlerType: (*PhoneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePhoneNumber",
			Handler:    _PhoneService_CreatePhoneNumber_Handler,
		},
		{
			MethodName: "GetPhoneNumber",
			Handler:    _PhoneService_GetPhoneNumber_Handler,
		},
		{
			MethodName: "GetPhoneNumberByID",
			Handler:    _PhoneService_GetPhoneNumberByID_Handler,
		},
		{
			MethodName: "UpdatePhoneNumber",
			Handler:    _PhoneService_UpdatePhoneNumber_Handler,
		},
		{
			MethodName: "DeletePhoneNumber",
			Handler:    _PhoneService_DeletePhoneNumber_Handler,
		},
		{
			MethodName: "DeletePhoneNumberByID",
			Handler:    _PhoneService_DeletePhoneNumberByID_Handler,
		},
		{
			MethodName: "GetOrCreatePhoneNumber",
			Handler:    _PhoneService_GetOrCreatePhoneNumber_Handler,
		},
		{
			MethodName: "MarkPhoneVerified",
			Handler:    _PhoneService_MarkPhoneVerified_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kappa/services/phones/phones.proto",
}
